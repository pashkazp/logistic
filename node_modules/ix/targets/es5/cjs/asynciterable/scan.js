Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var ScanAsyncIterable = (function (_super) {
    tslib_1.__extends(ScanAsyncIterable, _super);
    function ScanAsyncIterable(source, fn) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._fn = fn;
        _this._hasSeed = args.length === 1;
        _this._seed = args[0];
        return _this;
    }
    ScanAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var i, hasValue, _a, _b, item, _c, e_1_1, e_1, _d;
            return tslib_1.__generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        i = 0, hasValue = false;
                        _e.label = 1;
                    case 1:
                        _e.trys.push([1, 10, 11, 16]);
                        _a = tslib_1.__asyncValues(this._source);
                        _e.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _e.sent(), !_b.done)) return [3 /*break*/, 9];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        item = _e.sent();
                        if (!(hasValue || (hasValue = this._hasSeed))) return [3 /*break*/, 7];
                        _c = this;
                        return [4 /*yield*/, tslib_1.__await(this._fn(this._seed, item, i++))];
                    case 5:
                        _c._seed = _e.sent();
                        return [4 /*yield*/, this._seed];
                    case 6:
                        _e.sent();
                        return [3 /*break*/, 8];
                    case 7:
                        this._seed = item;
                        hasValue = true;
                        i++;
                        _e.label = 8;
                    case 8: return [3 /*break*/, 2];
                    case 9: return [3 /*break*/, 16];
                    case 10:
                        e_1_1 = _e.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 16];
                    case 11:
                        _e.trys.push([11, , 14, 15]);
                        if (!(_b && !_b.done && (_d = _a.return))) return [3 /*break*/, 13];
                        return [4 /*yield*/, tslib_1.__await(_d.call(_a))];
                    case 12:
                        _e.sent();
                        _e.label = 13;
                    case 13: return [3 /*break*/, 15];
                    case 14:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 15: return [7 /*endfinally*/];
                    case 16: return [2 /*return*/];
                }
            });
        });
    };
    return ScanAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function scan(source, accumulator) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    return new (ScanAsyncIterable.bind.apply(ScanAsyncIterable, tslib_1.__spread([void 0, source, accumulator], args)))();
}
exports.scan = scan;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvc2Nhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQUFrRDtBQUVsRDtJQUFzQyw2Q0FBaUI7SUFNckQsMkJBQ0ksTUFBd0IsRUFDeEIsRUFBdUQ7UUFDdkQsY0FBa0I7YUFBbEIsVUFBa0IsRUFBbEIscUJBQWtCLEVBQWxCLElBQWtCO1lBQWxCLDZCQUFrQjs7UUFIdEIsWUFJRSxpQkFBTyxTQUtSO1FBSkMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDZCxLQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDOztJQUN2QixDQUFDO0lBRU0sNEJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7O3dCQUNNLENBQUMsR0FBRyxDQUFDLEVBQUUsUUFBUSxHQUFHLEtBQUssQ0FBQzs7Ozt3QkFDTCxLQUFBLHNCQUFBLElBQUksQ0FBQyxPQUFPLENBQUE7Ozs7Ozs7d0JBQXBCLElBQUksWUFBQTs2QkFDYixDQUFBLFFBQVEsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUEsRUFBdEMsd0JBQXNDO3dCQUN4QyxLQUFBLElBQUksQ0FBQTt3QkFBUyxxQ0FBTSxJQUFJLENBQUMsR0FBRyxDQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUE7O3dCQUFyRCxHQUFLLEtBQUssR0FBRyxTQUF3QyxDQUFDO3dCQUN0RCxxQkFBTSxJQUFJLENBQUMsS0FBSyxFQUFBOzt3QkFBaEIsU0FBZ0IsQ0FBQzs7O3dCQUVqQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQzt3QkFDbEIsUUFBUSxHQUFHLElBQUksQ0FBQzt3QkFDaEIsQ0FBQyxFQUFFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdUO0lBQ0gsd0JBQUM7QUFBRCxDQTlCQSxBQThCQyxDQTlCcUMsOEJBQWMsR0E4Qm5EO0FBU0QsY0FDSSxNQUF3QixFQUN4QixXQUFvRTtJQUNwRSxjQUFrQjtTQUFsQixVQUFrQixFQUFsQixxQkFBa0IsRUFBbEIsSUFBa0I7UUFBbEIsNkJBQWtCOztJQUNwQixNQUFNLE1BQUssaUJBQWlCLFlBQWpCLGlCQUFpQiw0QkFBQyxNQUFNLEVBQUUsV0FBVyxHQUFLLElBQUksTUFBRTtBQUM3RCxDQUFDO0FBTEQsb0JBS0MiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9zY2FuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcblxuY2xhc3MgU2NhbkFzeW5jSXRlcmFibGU8VCwgUj4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxSPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUPjtcbiAgcHJpdmF0ZSBfZm46IChhY2M6IFQgfCBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPjtcbiAgcHJpdmF0ZSBfc2VlZD86IFQgfCBSO1xuICBwcml2YXRlIF9oYXNTZWVkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgICAgZm46IChhY2M6IFQgfCBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPixcbiAgICAgIC4uLmFyZ3M6IChUIHwgUilbXSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2ZuID0gZm47XG4gICAgdGhpcy5faGFzU2VlZCA9IGFyZ3MubGVuZ3RoID09PSAxO1xuICAgIHRoaXMuX3NlZWQgPSBhcmdzWzBdO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IGkgPSAwLCBoYXNWYWx1ZSA9IGZhbHNlO1xuICAgIGZvciBhd2FpdCAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBpZiAoaGFzVmFsdWUgfHwgKGhhc1ZhbHVlID0gdGhpcy5faGFzU2VlZCkpIHtcbiAgICAgICAgdGhpcy5fc2VlZCA9IGF3YWl0IHRoaXMuX2ZuKDxSPnRoaXMuX3NlZWQsIGl0ZW0sIGkrKyk7XG4gICAgICAgIHlpZWxkIHRoaXMuX3NlZWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWVkID0gaXRlbTtcbiAgICAgICAgaGFzVmFsdWUgPSB0cnVlO1xuICAgICAgICBpKys7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzY2FuPFQ+KFxuICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VD4sXG4gIGFjY3VtdWxhdG9yOiAoYWNjOiBULCB2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gVCB8IFByb21pc2U8VD4pOiBBc3luY0l0ZXJhYmxlWDxUPjtcbmV4cG9ydCBmdW5jdGlvbiBzY2FuPFQsIFIgPSBUPihcbiAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICBhY2N1bXVsYXRvcjogKGFjYzogUiwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFIgfCBQcm9taXNlPFI+LFxuICBzZWVkOiBSKTogQXN5bmNJdGVyYWJsZVg8Uj47XG5leHBvcnQgZnVuY3Rpb24gc2NhbjxULCBSID0gVD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgIGFjY3VtdWxhdG9yOiAoYWNjOiBUIHwgUiwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFIgfCBQcm9taXNlPFI+LFxuICAgIC4uLmFyZ3M6IChUIHwgUilbXSk6IEFzeW5jSXRlcmFibGVYPFQgfCBSPiB7XG4gIHJldHVybiBuZXcgU2NhbkFzeW5jSXRlcmFibGUoc291cmNlLCBhY2N1bXVsYXRvciwgLi4uYXJncyk7XG59XG4iXX0=
