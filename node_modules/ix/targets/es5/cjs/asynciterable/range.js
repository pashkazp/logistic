Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var RangeAsyncIterable = (function (_super) {
    tslib_1.__extends(RangeAsyncIterable, _super);
    function RangeAsyncIterable(start, count) {
        var _this = _super.call(this) || this;
        _this._start = start;
        _this._count = count;
        return _this;
    }
    RangeAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var current, end;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        current = this._start, end = this._start + this._count;
                        _a.label = 1;
                    case 1:
                        if (!(current < end)) return [3 /*break*/, 4];
                        return [4 /*yield*/, current];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        current++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return RangeAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function range(start, count) {
    return new RangeAsyncIterable(start, count);
}
exports.range = range;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvcmFuZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrREFBa0Q7QUFFbEQ7SUFBaUMsOENBQXNCO0lBSXJELDRCQUFZLEtBQWEsRUFBRSxLQUFhO1FBQXhDLFlBQ0UsaUJBQU8sU0FHUjtRQUZDLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDOztJQUN0QixDQUFDO0lBRU0sNkJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7O3dCQUNXLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNOzs7NkJBQUUsQ0FBQSxPQUFPLEdBQUcsR0FBRyxDQUFBO3dCQUM1RSxxQkFBTSxPQUFPLEVBQUE7O3dCQUFiLFNBQWEsQ0FBQzs7O3dCQURnRSxPQUFPLEVBQUUsQ0FBQTs7Ozs7O0tBRzFGO0lBQ0gseUJBQUM7QUFBRCxDQWZBLEFBZUMsQ0FmZ0MsOEJBQWMsR0FlOUM7QUFFRCxlQUFzQixLQUFhLEVBQUUsS0FBYTtJQUNoRCxNQUFNLENBQUMsSUFBSSxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDOUMsQ0FBQztBQUZELHNCQUVDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvcmFuZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuXG5jbGFzcyBSYW5nZUFzeW5jSXRlcmFibGUgZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxudW1iZXI+IHtcbiAgcHJpdmF0ZSBfc3RhcnQ6IG51bWJlcjtcbiAgcHJpdmF0ZSBfY291bnQ6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihzdGFydDogbnVtYmVyLCBjb3VudDogbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zdGFydCA9IHN0YXJ0O1xuICAgIHRoaXMuX2NvdW50ID0gY291bnQ7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCBjdXJyZW50ID0gdGhpcy5fc3RhcnQsIGVuZCA9IHRoaXMuX3N0YXJ0ICsgdGhpcy5fY291bnQ7IGN1cnJlbnQgPCBlbmQ7IGN1cnJlbnQrKykge1xuICAgICAgeWllbGQgY3VycmVudDtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmdlKHN0YXJ0OiBudW1iZXIsIGNvdW50OiBudW1iZXIpOiBBc3luY0l0ZXJhYmxlWDxudW1iZXI+IHtcbiAgcmV0dXJuIG5ldyBSYW5nZUFzeW5jSXRlcmFibGUoc3RhcnQsIGNvdW50KTtcbn1cbiJdfQ==
