Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var identity_1 = require("../internal/identity");
var comparer_1 = require("../internal/comparer");
var DistinctUntilChangedAsyncIterable = (function (_super) {
    tslib_1.__extends(DistinctUntilChangedAsyncIterable, _super);
    function DistinctUntilChangedAsyncIterable(source, keySelector, comparer) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._keySelector = keySelector;
        _this._comparer = comparer;
        return _this;
    }
    DistinctUntilChangedAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var currentKey, hasCurrentKey, _a, _b, item, key, comparerEquals, e_1_1, e_1, _c;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        hasCurrentKey = false;
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 11, 12, 17]);
                        _a = tslib_1.__asyncValues(this._source);
                        _d.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 10];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        item = _d.sent();
                        return [4 /*yield*/, tslib_1.__await(this._keySelector(item))];
                    case 5:
                        key = _d.sent();
                        comparerEquals = false;
                        if (!hasCurrentKey) return [3 /*break*/, 7];
                        return [4 /*yield*/, tslib_1.__await(this._comparer(currentKey, key))];
                    case 6:
                        comparerEquals = _d.sent();
                        _d.label = 7;
                    case 7:
                        if (!(!hasCurrentKey || !comparerEquals)) return [3 /*break*/, 9];
                        hasCurrentKey = true;
                        currentKey = key;
                        return [4 /*yield*/, item];
                    case 8:
                        _d.sent();
                        _d.label = 9;
                    case 9: return [3 /*break*/, 2];
                    case 10: return [3 /*break*/, 17];
                    case 11:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 17];
                    case 12:
                        _d.trys.push([12, , 15, 16]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 14];
                        return [4 /*yield*/, tslib_1.__await(_c.call(_a))];
                    case 13:
                        _d.sent();
                        _d.label = 14;
                    case 14: return [3 /*break*/, 16];
                    case 15:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 16: return [7 /*endfinally*/];
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    return DistinctUntilChangedAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function distinctUntilChanged(source, keySelector, comparer) {
    if (keySelector === void 0) { keySelector = identity_1.identityAsync; }
    if (comparer === void 0) { comparer = comparer_1.comparerAsync; }
    return new DistinctUntilChangedAsyncIterable(source, keySelector, comparer);
}
exports.distinctUntilChanged = distinctUntilChanged;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZGlzdGluY3R1bnRpbGNoYW5nZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrREFBa0Q7QUFDbEQsaURBQXFEO0FBQ3JELGlEQUFxRDtBQUVyRDtJQUErRCw2REFBdUI7SUFLcEYsMkNBQ0ksTUFBOEIsRUFDOUIsV0FBcUQsRUFDckQsUUFBbUU7UUFIdkUsWUFJRSxpQkFBTyxTQUlSO1FBSEMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDaEMsS0FBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7O0lBQzVCLENBQUM7SUFFTSw0Q0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ29DLGFBQWEsR0FBRyxLQUFLLENBQUM7Ozs7d0JBQ2pDLEtBQUEsc0JBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQTs7Ozs7Ozt3QkFBcEIsSUFBSSxZQUFBO3dCQUNQLHFDQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUE7O3dCQUFuQyxHQUFHLEdBQUcsU0FBNkI7d0JBQ25DLGNBQWMsR0FBRyxLQUFLLENBQUM7NkJBQ3ZCLGFBQWEsRUFBYix3QkFBYTt3QkFBcUIscUNBQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFXLEVBQUUsR0FBRyxDQUFDLEdBQUE7O3dCQUF2RCxjQUFjLEdBQUcsU0FBc0MsQ0FBQzs7OzZCQUN6RSxDQUFBLENBQUMsYUFBYSxJQUFJLENBQUMsY0FBYyxDQUFBLEVBQWpDLHdCQUFpQzt3QkFDbkMsYUFBYSxHQUFHLElBQUksQ0FBQzt3QkFDckIsVUFBVSxHQUFHLEdBQUcsQ0FBQzt3QkFDakIscUJBQU0sSUFBSSxFQUFBOzt3QkFBVixTQUFVLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdoQjtJQUNILHdDQUFDO0FBQUQsQ0E1QkEsQUE0QkMsQ0E1QjhELDhCQUFjLEdBNEI1RTtBQUVELDhCQUNJLE1BQThCLEVBQzlCLFdBQXFFLEVBQ3JFLFFBQW1GO0lBRG5GLDRCQUFBLEVBQUEsY0FBd0Qsd0JBQWE7SUFDckUseUJBQUEsRUFBQSxXQUFzRSx3QkFBYTtJQUNyRixNQUFNLENBQUMsSUFBSSxpQ0FBaUMsQ0FBZ0IsTUFBTSxFQUFFLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUM3RixDQUFDO0FBTEQsb0RBS0MiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9kaXN0aW5jdHVudGlsY2hhbmdlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5pbXBvcnQgeyBpZGVudGl0eUFzeW5jIH0gZnJvbSAnLi4vaW50ZXJuYWwvaWRlbnRpdHknO1xuaW1wb3J0IHsgY29tcGFyZXJBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2NvbXBhcmVyJztcblxuY2xhc3MgRGlzdGluY3RVbnRpbENoYW5nZWRBc3luY0l0ZXJhYmxlPFRTb3VyY2UsIFRLZXk+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2tleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+O1xuICBwcml2YXRlIF9jb21wYXJlcjogKHg6IFRLZXksIHk6IFRLZXkpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAga2V5U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVEtleSB8IFByb21pc2U8VEtleT4sXG4gICAgICBjb21wYXJlcjogKGZpcnN0OiBUS2V5LCBzZWNvbmQ6IFRLZXkpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fa2V5U2VsZWN0b3IgPSBrZXlTZWxlY3RvcjtcbiAgICB0aGlzLl9jb21wYXJlciA9IGNvbXBhcmVyO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IGN1cnJlbnRLZXk6IFRLZXkgfCB1bmRlZmluZWQsIGhhc0N1cnJlbnRLZXkgPSBmYWxzZTtcbiAgICBmb3IgYXdhaXQgKGxldCBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgbGV0IGtleSA9IGF3YWl0IHRoaXMuX2tleVNlbGVjdG9yKGl0ZW0pO1xuICAgICAgbGV0IGNvbXBhcmVyRXF1YWxzID0gZmFsc2U7XG4gICAgICBpZiAoaGFzQ3VycmVudEtleSkgeyBjb21wYXJlckVxdWFscyA9IGF3YWl0IHRoaXMuX2NvbXBhcmVyKGN1cnJlbnRLZXkhLCBrZXkpOyB9XG4gICAgICBpZiAoIWhhc0N1cnJlbnRLZXkgfHwgIWNvbXBhcmVyRXF1YWxzKSB7XG4gICAgICAgIGhhc0N1cnJlbnRLZXkgPSB0cnVlO1xuICAgICAgICBjdXJyZW50S2V5ID0ga2V5O1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzdGluY3RVbnRpbENoYW5nZWQ8VFNvdXJjZSwgVEtleT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+ID0gaWRlbnRpdHlBc3luYyxcbiAgICBjb21wYXJlcjogKGZpcnN0OiBUS2V5LCBzZWNvbmQ6IFRLZXkpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+ID0gY29tcGFyZXJBc3luYyk6ICBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgRGlzdGluY3RVbnRpbENoYW5nZWRBc3luY0l0ZXJhYmxlPFRTb3VyY2UsIFRLZXk+KHNvdXJjZSwga2V5U2VsZWN0b3IsIGNvbXBhcmVyKTtcbn1cbiJdfQ==
