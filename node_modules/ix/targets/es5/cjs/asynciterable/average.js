Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var identity_1 = require("../internal/identity");
function average(source, selector) {
    if (selector === void 0) { selector = identity_1.identityAsync; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var sum, count, source_1, source_1_1, item, _a, e_1_1, e_1, _b;
        return tslib_1.__generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    sum = 0;
                    count = 0;
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 8, 9, 14]);
                    source_1 = tslib_1.__asyncValues(source);
                    _c.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _c.sent(), !source_1_1.done)) return [3 /*break*/, 7];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _c.sent();
                    _a = sum;
                    return [4 /*yield*/, selector(item)];
                case 5:
                    sum = _a + _c.sent();
                    count++;
                    _c.label = 6;
                case 6: return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 14];
                case 8:
                    e_1_1 = _c.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 14];
                case 9:
                    _c.trys.push([9, , 12, 13]);
                    if (!(source_1_1 && !source_1_1.done && (_b = source_1.return))) return [3 /*break*/, 11];
                    return [4 /*yield*/, _b.call(source_1)];
                case 10:
                    _c.sent();
                    _c.label = 11;
                case 11: return [3 /*break*/, 13];
                case 12:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 13: return [7 /*endfinally*/];
                case 14:
                    if (count === 0) {
                        throw new Error('Empty collection');
                    }
                    return [2 /*return*/, sum / count];
            }
        });
    });
}
exports.average = average;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvYXZlcmFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUFxRDtBQVFyRCxpQkFDSSxNQUEwQixFQUMxQixRQUE4RDtJQUE5RCx5QkFBQSxFQUFBLFdBQWlELHdCQUFhOzs7Ozs7b0JBQzVELEdBQUcsR0FBRyxDQUFDLENBQUM7b0JBQ1IsS0FBSyxHQUFHLENBQUMsQ0FBQzs7OztvQkFDUyxXQUFBLHNCQUFBLE1BQU0sQ0FBQTs7Ozs7OztvQkFBZCxJQUFJLFlBQUE7b0JBQ2pCLEtBQUEsR0FBRyxDQUFBO29CQUFJLHFCQUFNLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQTs7b0JBQTNCLEdBQUcsR0FBSCxLQUFPLFNBQW9CLENBQUM7b0JBQzVCLEtBQUssRUFBRSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBR1YsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQ2hCLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztvQkFDdEMsQ0FBQztvQkFFRCxzQkFBTyxHQUFHLEdBQUcsS0FBSyxFQUFDOzs7O0NBQ3BCO0FBZkQsMEJBZUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9hdmVyYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaWRlbnRpdHlBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2lkZW50aXR5JztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF2ZXJhZ2UoXG4gICAgc291cmNlOiBJdGVyYWJsZTxudW1iZXIgfCBQcm9taXNlTGlrZTxudW1iZXI+PiB8IEFzeW5jSXRlcmFibGU8bnVtYmVyPixcbiAgICBzZWxlY3Rvcj86ICh4OiBudW1iZXIpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPik6IFByb21pc2U8bnVtYmVyPjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhdmVyYWdlPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZSB8IFByb21pc2VMaWtlPFRTb3VyY2U+PiB8IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgc2VsZWN0b3I/OiAoeDogVFNvdXJjZSkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+KTogUHJvbWlzZTxudW1iZXI+O1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF2ZXJhZ2UoXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPGFueT4sXG4gICAgc2VsZWN0b3I6ICh4OiBhbnkpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPiA9IGlkZW50aXR5QXN5bmMpOiBQcm9taXNlPG51bWJlcj4ge1xuICBsZXQgc3VtID0gMDtcbiAgbGV0IGNvdW50ID0gMDtcbiAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBzdW0gKz0gYXdhaXQgc2VsZWN0b3IoaXRlbSk7XG4gICAgY291bnQrKztcbiAgfVxuXG4gIGlmIChjb3VudCA9PT0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignRW1wdHkgY29sbGVjdGlvbicpO1xuICB9XG5cbiAgcmV0dXJuIHN1bSAvIGNvdW50O1xufVxuIl19
