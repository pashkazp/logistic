Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var RaceAsyncIterable = (function (_super) {
    tslib_1.__extends(RaceAsyncIterable, _super);
    function RaceAsyncIterable(left, right) {
        var _this = _super.call(this) || this;
        _this._left = left;
        _this._right = right;
        return _this;
    }
    RaceAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var leftIt, rightIt, leftWins, rightWins, _a, value, done, resultIterator, otherIterator, next;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        leftIt = this._left[Symbol.asyncIterator](), rightIt = this._right[Symbol.asyncIterator]();
                        leftWins = false, rightWins = false;
                        return [4 /*yield*/, tslib_1.__await(Promise.race([
                                leftIt.next().then(function (x) { leftWins = true; return x; }),
                                rightIt.next().then(function (x) { rightWins = true; return x; }),
                            ]))];
                    case 1:
                        _a = _b.sent(), value = _a.value, done = _a.done;
                        if (!!done) return [3 /*break*/, 3];
                        return [4 /*yield*/, value];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        if (leftWins) {
                            resultIterator = leftIt;
                            otherIterator = rightIt;
                        }
                        else {
                            resultIterator = rightIt;
                            otherIterator = leftIt;
                        }
                        if (!otherIterator.return) return [3 /*break*/, 5];
                        return [4 /*yield*/, tslib_1.__await(otherIterator.return())];
                    case 4:
                        _b.sent();
                        _b.label = 5;
                    case 5: return [4 /*yield*/, tslib_1.__await(resultIterator.next())];
                    case 6:
                        if (!!(next = _b.sent()).done) return [3 /*break*/, 8];
                        return [4 /*yield*/, next.value];
                    case 7:
                        _b.sent();
                        return [3 /*break*/, 5];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    return RaceAsyncIterable;
}(asynciterable_1.AsyncIterableX));
/**
 * Propagates the async sequence that reacts first.
 * @param {AsyncIterable<T>} left First async sequence.
 * @param {AsyncIterable<T>} right Second async sequence.
 * @return {AsyncIterable<T>} An async sequence that surfaces either of the given sequences, whichever reacted first.
 */
function race(left, right) {
    return new RaceAsyncIterable(left, right);
}
exports.race = race;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvcmFjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQUFrRDtBQUVsRDtJQUF5Qyw2Q0FBdUI7SUFJOUQsMkJBQVksSUFBNEIsRUFBRSxLQUE2QjtRQUF2RSxZQUNFLGlCQUFPLFNBR1I7UUFGQyxLQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixLQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzs7SUFDdEIsQ0FBQztJQUVNLDRCQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozt3QkFDUSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQzt3QkFDN0YsUUFBUSxHQUFHLEtBQUssRUFBRSxTQUFTLEdBQUcsS0FBSyxDQUFDO3dCQUNoQixxQ0FBTSxPQUFPLENBQUMsSUFBSSxDQUFDO2dDQUN6QyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUEsQ0FBQyxJQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dDQUN2RCxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUEsQ0FBQyxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDOzZCQUMxRCxDQUFDLEdBQUE7O3dCQUhJLEtBQWtCLFNBR3RCLEVBSE0sS0FBSyxXQUFBLEVBQUUsSUFBSSxVQUFBOzZCQUtmLENBQUMsSUFBSSxFQUFMLHdCQUFLO3dCQUNQLHFCQUFNLEtBQUssRUFBQTs7d0JBQVgsU0FBVyxDQUFDOzs7d0JBSWQsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzs0QkFDYixjQUFjLEdBQUcsTUFBTSxDQUFDOzRCQUN4QixhQUFhLEdBQUcsT0FBTyxDQUFDO3dCQUMxQixDQUFDO3dCQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNOLGNBQWMsR0FBRyxPQUFPLENBQUM7NEJBQ3pCLGFBQWEsR0FBRyxNQUFNLENBQUM7d0JBQ3pCLENBQUM7NkJBR0csYUFBYSxDQUFDLE1BQU0sRUFBcEIsd0JBQW9CO3dCQUFJLHFDQUFNLGFBQWEsQ0FBQyxNQUFNLEVBQUUsR0FBQTs7d0JBQTVCLFNBQTRCLENBQUM7OzRCQUd6QyxxQ0FBTSxjQUFjLENBQUMsSUFBSSxFQUFFLEdBQUE7OzZCQUFwQyxDQUFDLENBQUMsSUFBSSxHQUFHLFNBQTJCLENBQUMsQ0FBQyxJQUFJO3dCQUMvQyxxQkFBTSxJQUFJLENBQUMsS0FBSyxFQUFBOzt3QkFBaEIsU0FBZ0IsQ0FBQzs7Ozs7O0tBRXBCO0lBQ0gsd0JBQUM7QUFBRCxDQXZDQSxBQXVDQyxDQXZDd0MsOEJBQWMsR0F1Q3REO0FBRUQ7Ozs7O0dBS0c7QUFDSCxjQUNJLElBQTRCLEVBQzVCLEtBQTZCO0lBQy9CLE1BQU0sQ0FBQyxJQUFJLGlCQUFpQixDQUFVLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBSkQsb0JBSUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9yYWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcblxuY2xhc3MgUmFjZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX2xlZnQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX3JpZ2h0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuXG4gIGNvbnN0cnVjdG9yKGxlZnQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sIHJpZ2h0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9sZWZ0ID0gbGVmdDtcbiAgICB0aGlzLl9yaWdodCA9IHJpZ2h0O1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgbGVmdEl0ID0gdGhpcy5fbGVmdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSwgcmlnaHRJdCA9IHRoaXMuX3JpZ2h0W1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIGxldCBsZWZ0V2lucyA9IGZhbHNlLCByaWdodFdpbnMgPSBmYWxzZTtcbiAgICBjb25zdCB7IHZhbHVlLCBkb25lIH0gPSBhd2FpdCBQcm9taXNlLnJhY2UoW1xuICAgICAgbGVmdEl0Lm5leHQoKS50aGVuKHggPT4geyBsZWZ0V2lucyA9IHRydWU7IHJldHVybiB4OyB9KSxcbiAgICAgIHJpZ2h0SXQubmV4dCgpLnRoZW4oeCA9PiB7IHJpZ2h0V2lucyA9IHRydWU7IHJldHVybiB4OyB9KSxcbiAgICBdKTtcblxuICAgIGlmICghZG9uZSkge1xuICAgICAgeWllbGQgdmFsdWU7XG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdEl0ZXJhdG9yOiBBc3luY0l0ZXJhdG9yPFRTb3VyY2U+LCBvdGhlckl0ZXJhdG9yOiBBc3luY0l0ZXJhdG9yPFRTb3VyY2U+O1xuICAgIGlmIChsZWZ0V2lucykge1xuICAgICAgcmVzdWx0SXRlcmF0b3IgPSBsZWZ0SXQ7XG4gICAgICBvdGhlckl0ZXJhdG9yID0gcmlnaHRJdDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0SXRlcmF0b3IgPSByaWdodEl0O1xuICAgICAgb3RoZXJJdGVyYXRvciA9IGxlZnRJdDtcbiAgICB9XG5cbiAgICAvLyBDYW5jZWwvZmluaXNoIG90aGVyIGl0ZXJhdG9yXG4gICAgaWYgKG90aGVySXRlcmF0b3IucmV0dXJuKSB7IGF3YWl0IG90aGVySXRlcmF0b3IucmV0dXJuKCk7IH1cblxuICAgIGxldCBuZXh0O1xuICAgIHdoaWxlICghKG5leHQgPSBhd2FpdCByZXN1bHRJdGVyYXRvci5uZXh0KCkpLmRvbmUpIHtcbiAgICAgIHlpZWxkIG5leHQudmFsdWU7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUHJvcGFnYXRlcyB0aGUgYXN5bmMgc2VxdWVuY2UgdGhhdCByZWFjdHMgZmlyc3QuXG4gKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8VD59IGxlZnQgRmlyc3QgYXN5bmMgc2VxdWVuY2UuXG4gKiBAcGFyYW0ge0FzeW5jSXRlcmFibGU8VD59IHJpZ2h0IFNlY29uZCBhc3luYyBzZXF1ZW5jZS5cbiAqIEByZXR1cm4ge0FzeW5jSXRlcmFibGU8VD59IEFuIGFzeW5jIHNlcXVlbmNlIHRoYXQgc3VyZmFjZXMgZWl0aGVyIG9mIHRoZSBnaXZlbiBzZXF1ZW5jZXMsIHdoaWNoZXZlciByZWFjdGVkIGZpcnN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFjZTxUU291cmNlPihcbiAgICBsZWZ0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHJpZ2h0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFJhY2VBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KGxlZnQsIHJpZ2h0KTtcbn1cbiJdfQ==
