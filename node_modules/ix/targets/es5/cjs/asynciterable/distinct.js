Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var identity_1 = require("../internal/identity");
var arrayindexof_1 = require("../internal/arrayindexof");
var comparer_1 = require("../internal/comparer");
var DistinctAsyncIterable = (function (_super) {
    tslib_1.__extends(DistinctAsyncIterable, _super);
    function DistinctAsyncIterable(source, keySelector, comparer) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._keySelector = keySelector;
        _this._comparer = comparer;
        return _this;
    }
    DistinctAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var set, _a, _b, item, key, e_1_1, e_1, _c;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        set = [];
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 10, 11, 16]);
                        _a = tslib_1.__asyncValues((this._source));
                        _d.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 9];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        item = _d.sent();
                        return [4 /*yield*/, tslib_1.__await(this._keySelector(item))];
                    case 5:
                        key = _d.sent();
                        return [4 /*yield*/, tslib_1.__await(arrayindexof_1.arrayIndexOfAsync(set, key, this._comparer))];
                    case 6:
                        if (!((_d.sent()) === -1)) return [3 /*break*/, 8];
                        set.push(key);
                        return [4 /*yield*/, item];
                    case 7:
                        _d.sent();
                        _d.label = 8;
                    case 8: return [3 /*break*/, 2];
                    case 9: return [3 /*break*/, 16];
                    case 10:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 16];
                    case 11:
                        _d.trys.push([11, , 14, 15]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 13];
                        return [4 /*yield*/, tslib_1.__await(_c.call(_a))];
                    case 12:
                        _d.sent();
                        _d.label = 13;
                    case 13: return [3 /*break*/, 15];
                    case 14:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 15: return [7 /*endfinally*/];
                    case 16: return [2 /*return*/];
                }
            });
        });
    };
    return DistinctAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function distinct(source, keySelector, comparer) {
    if (keySelector === void 0) { keySelector = identity_1.identityAsync; }
    if (comparer === void 0) { comparer = comparer_1.comparerAsync; }
    return new DistinctAsyncIterable(source, keySelector, comparer);
}
exports.distinct = distinct;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZGlzdGluY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrREFBa0Q7QUFDbEQsaURBQXFEO0FBQ3JELHlEQUE2RDtBQUM3RCxpREFBcUQ7QUFFckQ7SUFBbUQsaURBQXVCO0lBS3hFLCtCQUNJLE1BQThCLEVBQzlCLFdBQXFELEVBQ3JELFFBQTBEO1FBSDlELFlBSUUsaUJBQU8sU0FJUjtRQUhDLEtBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDO1FBQ2hDLEtBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDOztJQUM1QixDQUFDO0lBRU0sZ0NBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7O3dCQUNNLEdBQUcsR0FBRyxFQUFFLENBQUM7Ozs7d0JBRVUsS0FBQSxzQkFBd0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7Ozs7Ozs7d0JBQTlDLElBQUksWUFBQTt3QkFDUCxxQ0FBTSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFBOzt3QkFBbkMsR0FBRyxHQUFHLFNBQTZCO3dCQUNuQyxxQ0FBTSxnQ0FBaUIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBQTs7NkJBQWpELENBQUEsQ0FBQSxTQUFpRCxNQUFLLENBQUMsQ0FBQyxDQUFBLEVBQXhELHdCQUF3RDt3QkFDMUQsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQzt3QkFDZCxxQkFBTSxJQUFJLEVBQUE7O3dCQUFWLFNBQVUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR2hCO0lBQ0gsNEJBQUM7QUFBRCxDQTFCQSxBQTBCQyxDQTFCa0QsOEJBQWMsR0EwQmhFO0FBRUQsa0JBQ0ksTUFBOEIsRUFDOUIsV0FBcUUsRUFDckUsUUFBMEU7SUFEMUUsNEJBQUEsRUFBQSxjQUF3RCx3QkFBYTtJQUNyRSx5QkFBQSxFQUFBLFdBQTZELHdCQUFhO0lBQzVFLE1BQU0sQ0FBQyxJQUFJLHFCQUFxQixDQUFnQixNQUFNLEVBQUUsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ2pGLENBQUM7QUFMRCw0QkFLQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL2Rpc3RpbmN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IGlkZW50aXR5QXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5pbXBvcnQgeyBhcnJheUluZGV4T2ZBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2FycmF5aW5kZXhvZic7XG5pbXBvcnQgeyBjb21wYXJlckFzeW5jIH0gZnJvbSAnLi4vaW50ZXJuYWwvY29tcGFyZXInO1xuXG5jbGFzcyBEaXN0aW5jdEFzeW5jSXRlcmFibGU8VFNvdXJjZSwgVEtleT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZSB8IFByb21pc2VMaWtlIDxUU291cmNlPj4gfCBBc3luY0l0ZXJhYmxlIDxUU291cmNlPjtcbiAgcHJpdmF0ZSBfa2V5U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVEtleSB8IFByb21pc2U8VEtleT47XG4gIHByaXZhdGUgX2NvbXBhcmVyOiAoeDogVEtleSwgeTogVEtleSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgICAgIGNvbXBhcmVyOiAoeDogVEtleSwgeTogVEtleSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9rZXlTZWxlY3RvciA9IGtleVNlbGVjdG9yO1xuICAgIHRoaXMuX2NvbXBhcmVyID0gY29tcGFyZXI7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgc2V0ID0gW107XG5cbiAgICBmb3IgYXdhaXQgKGxldCBpdGVtIG9mIDxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pih0aGlzLl9zb3VyY2UpKSB7XG4gICAgICBsZXQga2V5ID0gYXdhaXQgdGhpcy5fa2V5U2VsZWN0b3IoaXRlbSk7XG4gICAgICBpZiAoYXdhaXQgYXJyYXlJbmRleE9mQXN5bmMoc2V0LCBrZXksIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgc2V0LnB1c2goa2V5KTtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3RpbmN0PFRTb3VyY2UsIFRLZXk+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PiA9IGlkZW50aXR5QXN5bmMsXG4gICAgY29tcGFyZXI6ICh4OiBUS2V5LCB5OiBUS2V5KSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiA9IGNvbXBhcmVyQXN5bmMpOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgRGlzdGluY3RBc3luY0l0ZXJhYmxlPFRTb3VyY2UsIFRLZXk+KHNvdXJjZSwga2V5U2VsZWN0b3IsIGNvbXBhcmVyKTtcbn1cbiJdfQ==
