Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var bindcallback_1 = require("../internal/bindcallback");
var identity_1 = require("../internal/identity");
var tolength_1 = require("../internal/tolength");
var isiterable_1 = require("../internal/isiterable");
var FromArrayIterable = (function (_super) {
    tslib_1.__extends(FromArrayIterable, _super);
    function FromArrayIterable(source, selector) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._selector = selector;
        return _this;
    }
    FromArrayIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var i, length;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        length = tolength_1.toLength(this._source.length);
                        _a.label = 1;
                    case 1:
                        if (!(i < length)) return [3 /*break*/, 4];
                        return [4 /*yield*/, tslib_1.__await(this._selector(this._source[i], i++))];
                    case 2: return [4 /*yield*/, _a.sent()];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return FromArrayIterable;
}(asynciterable_1.AsyncIterableX));
var FromAsyncIterable = (function (_super) {
    tslib_1.__extends(FromAsyncIterable, _super);
    function FromAsyncIterable(source, selector) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._selector = selector;
        return _this;
    }
    FromAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var i, _a, _b, item, e_1_1, e_1, _c;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        i = 0;
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 9, 10, 15]);
                        _a = tslib_1.__asyncValues(this._source);
                        _d.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        item = _d.sent();
                        return [4 /*yield*/, tslib_1.__await(this._selector(item, i++))];
                    case 5: return [4 /*yield*/, _d.sent()];
                    case 6:
                        _d.sent();
                        _d.label = 7;
                    case 7: return [3 /*break*/, 2];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _d.trys.push([10, , 13, 14]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, tslib_1.__await(_c.call(_a))];
                    case 11:
                        _d.sent();
                        _d.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15: return [2 /*return*/];
                }
            });
        });
    };
    return FromAsyncIterable;
}(asynciterable_1.AsyncIterableX));
var FromPromiseIterable = (function (_super) {
    tslib_1.__extends(FromPromiseIterable, _super);
    function FromPromiseIterable(source, selector) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._selector = selector;
        return _this;
    }
    FromPromiseIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var item;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, tslib_1.__await(this._source)];
                    case 1:
                        item = _a.sent();
                        return [4 /*yield*/, tslib_1.__await(this._selector(item, 0))];
                    case 2: return [4 /*yield*/, _a.sent()];
                    case 3:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return FromPromiseIterable;
}(asynciterable_1.AsyncIterableX));
var AsyncObserver = (function () {
    function AsyncObserver() {
        this.values = [];
        this.hasCompleted = false;
        this.hasError = false;
        this.errorValue = null;
        this.closed = false;
    }
    AsyncObserver.prototype.next = function (value) {
        if (!this.closed) {
            this.values.push(value);
        }
    };
    AsyncObserver.prototype.error = function (err) {
        if (!this.closed) {
            this.closed = true;
            this.hasError = true;
            this.errorValue = err;
        }
    };
    AsyncObserver.prototype.complete = function () {
        if (!this.closed) {
            this.closed = true;
        }
    };
    return AsyncObserver;
}());
var FromObservableAsyncIterable = (function (_super) {
    tslib_1.__extends(FromObservableAsyncIterable, _super);
    function FromObservableAsyncIterable(observable, selector) {
        var _this = _super.call(this) || this;
        _this._observable = observable;
        _this._selector = selector;
        return _this;
    }
    FromObservableAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var observer, subscription, i;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        observer = new AsyncObserver();
                        subscription = this._observable.subscribe(observer);
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!1) return [3 /*break*/, 6];
                        if (!(observer.values.length > 0)) return [3 /*break*/, 4];
                        return [4 /*yield*/, tslib_1.__await(this._selector(observer.values.shift(), i++))];
                    case 2: return [4 /*yield*/, _a.sent()];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        if (observer.closed) {
                            subscription.unsubscribe();
                            if (observer.hasError) {
                                throw observer.errorValue;
                            }
                            else {
                                return [3 /*break*/, 6];
                            }
                        }
                        _a.label = 5;
                    case 5: return [3 /*break*/, 1];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    return FromObservableAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function isPromise(x) {
    return x != null && Object(x) === x && typeof x['then'] === 'function';
}
function isObservable(x) {
    return x != null && Object(x) === x && typeof x['subscribe'] === 'function';
}
function isArrayLike(x) {
    return x != null && Object(x) === x && typeof x['length'] === 'number';
}
function from(source, selector, thisArg) {
    if (selector === void 0) { selector = identity_1.identityAsync; }
    var fn = bindcallback_1.bindCallback(selector, thisArg, 2);
    if (isiterable_1.isIterable(source) || isiterable_1.isAsyncIterable(source)) {
        return new FromAsyncIterable(source, fn);
    }
    if (isPromise(source)) {
        return new FromPromiseIterable(source, fn);
    }
    if (isObservable(source)) {
        return new FromObservableAsyncIterable(source, fn);
    }
    if (isArrayLike(source)) {
        return new FromArrayIterable(source, fn);
    }
    throw new TypeError('Input type not supported');
}
exports.from = from;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
