Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var isiterable_1 = require("../internal/isiterable");
var FlattenAsyncIterable = (function (_super) {
    tslib_1.__extends(FlattenAsyncIterable, _super);
    function FlattenAsyncIterable(source, depth) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._depth = depth;
        return _this;
    }
    FlattenAsyncIterable.prototype._flatten = function (source, depth) {
        return tslib_1.__asyncGenerator(this, arguments, function _flatten_1() {
            var source_1, source_1_1, item, e_1_1, source_2, source_2_1, item, _a, _b, innerItem, e_2_1, e_3_1, e_1, _c, e_3, _d, e_2, _e;
            return tslib_1.__generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        if (!(depth === 0)) return [3 /*break*/, 15];
                        _f.label = 1;
                    case 1:
                        _f.trys.push([1, 8, 9, 14]);
                        source_1 = tslib_1.__asyncValues(source);
                        _f.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(source_1.next())];
                    case 3:
                        if (!(source_1_1 = _f.sent(), !source_1_1.done)) return [3 /*break*/, 7];
                        return [4 /*yield*/, tslib_1.__await(source_1_1.value)];
                    case 4:
                        item = _f.sent();
                        return [4 /*yield*/, item];
                    case 5:
                        _f.sent();
                        _f.label = 6;
                    case 6: return [3 /*break*/, 2];
                    case 7: return [3 /*break*/, 14];
                    case 8:
                        e_1_1 = _f.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 14];
                    case 9:
                        _f.trys.push([9, , 12, 13]);
                        if (!(source_1_1 && !source_1_1.done && (_c = source_1.return))) return [3 /*break*/, 11];
                        return [4 /*yield*/, tslib_1.__await(_c.call(source_1))];
                    case 10:
                        _f.sent();
                        _f.label = 11;
                    case 11: return [3 /*break*/, 13];
                    case 12:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 13: return [7 /*endfinally*/];
                    case 14: return [2 /*return*/];
                    case 15:
                        _f.trys.push([15, 37, 38, 43]);
                        source_2 = tslib_1.__asyncValues(source);
                        _f.label = 16;
                    case 16: return [4 /*yield*/, tslib_1.__await(source_2.next())];
                    case 17:
                        if (!(source_2_1 = _f.sent(), !source_2_1.done)) return [3 /*break*/, 36];
                        return [4 /*yield*/, tslib_1.__await(source_2_1.value)];
                    case 18:
                        item = _f.sent();
                        if (!isiterable_1.isAsyncIterable(item)) return [3 /*break*/, 33];
                        _f.label = 19;
                    case 19:
                        _f.trys.push([19, 26, 27, 32]);
                        _a = tslib_1.__asyncValues(this._flatten(item, depth - 1));
                        _f.label = 20;
                    case 20: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 21:
                        if (!(_b = _f.sent(), !_b.done)) return [3 /*break*/, 25];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 22:
                        innerItem = _f.sent();
                        return [4 /*yield*/, innerItem];
                    case 23:
                        _f.sent();
                        _f.label = 24;
                    case 24: return [3 /*break*/, 20];
                    case 25: return [3 /*break*/, 32];
                    case 26:
                        e_2_1 = _f.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 32];
                    case 27:
                        _f.trys.push([27, , 30, 31]);
                        if (!(_b && !_b.done && (_e = _a.return))) return [3 /*break*/, 29];
                        return [4 /*yield*/, tslib_1.__await(_e.call(_a))];
                    case 28:
                        _f.sent();
                        _f.label = 29;
                    case 29: return [3 /*break*/, 31];
                    case 30:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 31: return [7 /*endfinally*/];
                    case 32: return [3 /*break*/, 35];
                    case 33: return [4 /*yield*/, item];
                    case 34:
                        _f.sent();
                        _f.label = 35;
                    case 35: return [3 /*break*/, 16];
                    case 36: return [3 /*break*/, 43];
                    case 37:
                        e_3_1 = _f.sent();
                        e_3 = { error: e_3_1 };
                        return [3 /*break*/, 43];
                    case 38:
                        _f.trys.push([38, , 41, 42]);
                        if (!(source_2_1 && !source_2_1.done && (_d = source_2.return))) return [3 /*break*/, 40];
                        return [4 /*yield*/, tslib_1.__await(_d.call(source_2))];
                    case 39:
                        _f.sent();
                        _f.label = 40;
                    case 40: return [3 /*break*/, 42];
                    case 41:
                        if (e_3) throw e_3.error;
                        return [7 /*endfinally*/];
                    case 42: return [7 /*endfinally*/];
                    case 43: return [2 /*return*/];
                }
            });
        });
    };
    FlattenAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return this._flatten(this._source, this._depth)[Symbol.asyncIterator]();
    };
    return FlattenAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function flatten(source, depth) {
    if (depth === void 0) { depth = Infinity; }
    return new FlattenAsyncIterable(source, depth);
}
exports.flatten = flatten;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZmxhdHRlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQUFrRDtBQUNsRCxxREFBeUQ7QUFFekQ7SUFBNEMsZ0RBQXVCO0lBSWpFLDhCQUFZLE1BQThCLEVBQUUsS0FBYTtRQUF6RCxZQUNFLGlCQUFPLFNBR1I7UUFGQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixLQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzs7SUFDdEIsQ0FBQztJQUVjLHVDQUFRLEdBQXZCLFVBQXdCLE1BQThCLEVBQUUsS0FBYTs7Ozs7OzZCQUMvRCxDQUFBLEtBQUssS0FBSyxDQUFDLENBQUEsRUFBWCx5QkFBVzs7Ozt3QkFDVSxXQUFBLHNCQUFBLE1BQU0sQ0FBQTs7Ozs7Ozt3QkFBZCxJQUFJLFlBQUE7d0JBQWMscUJBQU0sSUFBSSxFQUFBOzt3QkFBVixTQUFVLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQUM1QyxzQkFBTzs7O3dCQUVjLFdBQUEsc0JBQUEsTUFBTSxDQUFBOzs7Ozs7O3dCQUFkLElBQUksWUFBQTs2QkFDYiw0QkFBZSxDQUFDLElBQUksQ0FBQyxFQUFyQix5QkFBcUI7Ozs7d0JBQ0ssS0FBQSxzQkFBQSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUE7Ozs7Ozs7d0JBQTNDLFNBQVMsWUFBQTt3QkFBc0MscUJBQU0sU0FBUyxFQUFBOzt3QkFBZixTQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkFFOUUscUJBQU0sSUFBSSxFQUFBOzt3QkFBVixTQUFVLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdoQjtJQUVELCtCQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBdEI7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztJQUMxRSxDQUFDO0lBQ0gsMkJBQUM7QUFBRCxDQTNCQSxBQTJCQyxDQTNCMkMsOEJBQWMsR0EyQnpEO0FBRUQsaUJBQTJCLE1BQXdCLEVBQUUsS0FBd0I7SUFBeEIsc0JBQUEsRUFBQSxnQkFBd0I7SUFDM0UsTUFBTSxDQUFDLElBQUksb0JBQW9CLENBQUksTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3BELENBQUM7QUFGRCwwQkFFQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL2ZsYXR0ZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgaXNBc3luY0l0ZXJhYmxlIH0gZnJvbSAnLi4vaW50ZXJuYWwvaXNpdGVyYWJsZSc7XG5cbmNsYXNzIEZsYXR0ZW5Bc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2RlcHRoOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBkZXB0aDogbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fZGVwdGggPSBkZXB0aDtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgKl9mbGF0dGVuKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgZGVwdGg6IG51bWJlcik6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4ge1xuICAgIGlmIChkZXB0aCA9PT0gMCkge1xuICAgICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiBzb3VyY2UpIHsgeWllbGQgaXRlbTsgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3IgYXdhaXQgKGxldCBpdGVtIG9mIHNvdXJjZSkge1xuICAgICAgaWYgKGlzQXN5bmNJdGVyYWJsZShpdGVtKSkge1xuICAgICAgICBmb3IgYXdhaXQgKGxldCBpbm5lckl0ZW0gb2YgdGhpcy5fZmxhdHRlbihpdGVtLCBkZXB0aCAtIDEpKSB7IHlpZWxkIGlubmVySXRlbTsgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIHJldHVybiB0aGlzLl9mbGF0dGVuKHRoaXMuX3NvdXJjZSwgdGhpcy5fZGVwdGgpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuPFQ+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPiwgZGVwdGg6IG51bWJlciA9IEluZmluaXR5KTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IEZsYXR0ZW5Bc3luY0l0ZXJhYmxlPFQ+KHNvdXJjZSwgZGVwdGgpO1xufVxuIl19
