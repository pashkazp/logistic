Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var iterable_1 = require("../iterable");
var TapIterable = (function (_super) {
    tslib_1.__extends(TapIterable, _super);
    function TapIterable(source, observer) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._observer = observer;
        return _this;
    }
    TapIterable.prototype[Symbol.iterator] = function () {
        var it, next;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    it = this._source[Symbol.iterator]();
                    _a.label = 1;
                case 1:
                    if (!1) return [3 /*break*/, 3];
                    next = void 0;
                    try {
                        next = it.next();
                        if (next.done) {
                            return [3 /*break*/, 3];
                        }
                    }
                    catch (e) {
                        if (this._observer.error) {
                            this._observer.error(e);
                        }
                        throw e;
                    }
                    if (this._observer.next) {
                        this._observer.next(next.value);
                    }
                    return [4 /*yield*/, next.value];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 1];
                case 3:
                    if (this._observer.complete) {
                        this._observer.complete();
                    }
                    return [2 /*return*/];
            }
        });
    };
    return TapIterable;
}(iterable_1.IterableX));
/**
 * Lazily invokes observer methods for each value in the sequence, and upon successful or exceptional termination.
 * @param {Iterable<TSource>} source Source sequence.
 * @param {PartialObserver<TSource>} observer Observer to invoke notification calls on.<
 * @return {Ierable<TSource>} Sequence exhibiting the side-effects of observer method invocation upon iteration.
 */
function tap(source, observer) {
    return new TapIterable(source, observer);
}
exports.tap = tap;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3RhcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUF3QztBQUd4QztJQUFtQyx1Q0FBa0I7SUFJbkQscUJBQVksTUFBeUIsRUFBRSxRQUFrQztRQUF6RSxZQUNFLGlCQUFPLFNBR1I7UUFGQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixLQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQzs7SUFDNUIsQ0FBQztJQUVBLHNCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7O29CQUNRLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDOzs7eUJBQ3BDLENBQUM7b0JBQ0YsSUFBSSxTQUFBLENBQUM7b0JBQ1QsSUFBSSxDQUFDO3dCQUNILElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUM7d0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDOzRCQUFDLE1BQU0sa0JBQUE7d0JBQUMsQ0FBQztvQkFDM0IsQ0FBQztvQkFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNYLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzs0QkFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFBQyxDQUFDO3dCQUN0RCxNQUFNLENBQUMsQ0FBQztvQkFDVixDQUFDO29CQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQUMsQ0FBQztvQkFDN0QscUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQTs7b0JBQWhCLFNBQWdCLENBQUM7OztvQkFHbkIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3dCQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUM7b0JBQUMsQ0FBQzs7OztLQUM1RDtJQUNILGtCQUFDO0FBQUQsQ0E1QkEsQUE0QkMsQ0E1QmtDLG9CQUFTLEdBNEIzQztBQUVEOzs7OztHQUtHO0FBQ0gsYUFBNkIsTUFBeUIsRUFBRSxRQUFrQztJQUN4RixNQUFNLENBQUMsSUFBSSxXQUFXLENBQVUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3BELENBQUM7QUFGRCxrQkFFQyIsImZpbGUiOiJpdGVyYWJsZS90YXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5pbXBvcnQgeyBQYXJ0aWFsT2JzZXJ2ZXIgfSBmcm9tICcuLi9vYnNlcnZlcic7XG5cbmNsYXNzIFRhcEl0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfb2JzZXJ2ZXI6IFBhcnRpYWxPYnNlcnZlcjxUU291cmNlPjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LCBvYnNlcnZlcjogUGFydGlhbE9ic2VydmVyPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fb2JzZXJ2ZXIgPSBvYnNlcnZlcjtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCBpdCA9IHRoaXMuX3NvdXJjZVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgd2hpbGUgKDEpIHtcbiAgICAgIGxldCBuZXh0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgbmV4dCA9IGl0Lm5leHQoKTtcbiAgICAgICAgaWYgKG5leHQuZG9uZSkgeyBicmVhazsgfVxuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAodGhpcy5fb2JzZXJ2ZXIuZXJyb3IpIHsgdGhpcy5fb2JzZXJ2ZXIuZXJyb3IoZSk7IH1cbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX29ic2VydmVyLm5leHQpIHsgdGhpcy5fb2JzZXJ2ZXIubmV4dChuZXh0LnZhbHVlKTsgfVxuICAgICAgeWllbGQgbmV4dC52YWx1ZTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fb2JzZXJ2ZXIuY29tcGxldGUpIHsgdGhpcy5fb2JzZXJ2ZXIuY29tcGxldGUoKTsgfVxuICB9XG59XG5cbi8qKlxuICogTGF6aWx5IGludm9rZXMgb2JzZXJ2ZXIgbWV0aG9kcyBmb3IgZWFjaCB2YWx1ZSBpbiB0aGUgc2VxdWVuY2UsIGFuZCB1cG9uIHN1Y2Nlc3NmdWwgb3IgZXhjZXB0aW9uYWwgdGVybWluYXRpb24uXG4gKiBAcGFyYW0ge0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2UgU291cmNlIHNlcXVlbmNlLlxuICogQHBhcmFtIHtQYXJ0aWFsT2JzZXJ2ZXI8VFNvdXJjZT59IG9ic2VydmVyIE9ic2VydmVyIHRvIGludm9rZSBub3RpZmljYXRpb24gY2FsbHMgb24uPFxuICogQHJldHVybiB7SWVyYWJsZTxUU291cmNlPn0gU2VxdWVuY2UgZXhoaWJpdGluZyB0aGUgc2lkZS1lZmZlY3RzIG9mIG9ic2VydmVyIG1ldGhvZCBpbnZvY2F0aW9uIHVwb24gaXRlcmF0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGFwPFRTb3VyY2U+KHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sIG9ic2VydmVyOiBQYXJ0aWFsT2JzZXJ2ZXI8VFNvdXJjZT4pOiBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFRhcEl0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSwgb2JzZXJ2ZXIpO1xufVxuIl19
