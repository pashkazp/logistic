Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var iterable_1 = require("../iterable");
var OnErrorResumeNextIterable = (function (_super) {
    tslib_1.__extends(OnErrorResumeNextIterable, _super);
    function OnErrorResumeNextIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    OnErrorResumeNextIterable.prototype[Symbol.iterator] = function () {
        var _a, _b, item, it, next, e_1_1, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _d.trys.push([0, 6, 7, 8]);
                    _a = tslib_1.__values(this._source), _b = _a.next();
                    _d.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 5];
                    item = _b.value;
                    it = item[Symbol.iterator]();
                    _d.label = 2;
                case 2:
                    if (!1) return [3 /*break*/, 4];
                    next = void 0;
                    try {
                        next = it.next();
                    }
                    catch (e) {
                        return [3 /*break*/, 4];
                    }
                    if (next.done) {
                        return [3 /*break*/, 4];
                    }
                    return [4 /*yield*/, next.value];
                case 3:
                    _d.sent();
                    return [3 /*break*/, 2];
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    };
    return OnErrorResumeNextIterable;
}(iterable_1.IterableX));
function onErrorResumeNext(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return new OnErrorResumeNextIterable(tslib_1.__spread([source], args));
}
exports.onErrorResumeNext = onErrorResumeNext;
function onErrorResumeNextStatic() {
    var source = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        source[_i] = arguments[_i];
    }
    return new OnErrorResumeNextIterable(source);
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL29uZXJyb3JyZXN1bWVuZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0NBQXdDO0FBRXhDO0lBQWlELHFEQUFrQjtJQUdqRSxtQ0FBWSxNQUFtQztRQUEvQyxZQUNFLGlCQUFPLFNBRVI7UUFEQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQzs7SUFDeEIsQ0FBQztJQUVBLG9DQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7OztvQkFDbUIsS0FBQSxpQkFBQSxJQUFJLENBQUMsT0FBTyxDQUFBOzs7O29CQUFwQixJQUFJO29CQUNQLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7Ozt5QkFDMUIsQ0FBQztvQkFDRixJQUFJLFNBQUEsQ0FBQztvQkFDVCxJQUFJLENBQUM7d0JBQ0gsSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztvQkFDbkIsQ0FBQztvQkFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNYLE1BQU0sa0JBQUE7b0JBQ1IsQ0FBQztvQkFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxNQUFNLGtCQUFBO29CQUFDLENBQUM7b0JBQ3pCLHFCQUFNLElBQUksQ0FBQyxLQUFLLEVBQUE7O29CQUFoQixTQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR3RCO0lBQ0gsZ0NBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCZ0Qsb0JBQVMsR0F3QnpEO0FBRUQsMkJBQXFDLE1BQW1CO0lBQUUsY0FBc0I7U0FBdEIsVUFBc0IsRUFBdEIscUJBQXNCLEVBQXRCLElBQXNCO1FBQXRCLDZCQUFzQjs7SUFDOUUsTUFBTSxDQUFDLElBQUkseUJBQXlCLG1CQUFLLE1BQU0sR0FBSyxJQUFJLEVBQUUsQ0FBQztBQUM3RCxDQUFDO0FBRkQsOENBRUM7QUFFRDtJQUEyQyxnQkFBd0I7U0FBeEIsVUFBd0IsRUFBeEIscUJBQXdCLEVBQXhCLElBQXdCO1FBQXhCLDJCQUF3Qjs7SUFDakUsTUFBTSxDQUFDLElBQUkseUJBQXlCLENBQUksTUFBTSxDQUFDLENBQUM7QUFDbEQsQ0FBQztBQUZELDBEQUVDIiwiZmlsZSI6Iml0ZXJhYmxlL29uZXJyb3JyZXN1bWVuZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuXG5jbGFzcyBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxJdGVyYWJsZTxUU291cmNlPj47XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxJdGVyYWJsZTxUU291cmNlPj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgbGV0IGl0ID0gaXRlbVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBsZXQgbmV4dDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBuZXh0ID0gaXQubmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobmV4dC5kb25lKSB7IGJyZWFrOyB9XG4gICAgICAgIHlpZWxkIG5leHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkVycm9yUmVzdW1lTmV4dDxUPihzb3VyY2U6IEl0ZXJhYmxlPFQ+LCAuLi5hcmdzOiBJdGVyYWJsZTxUPltdKTogSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlPFQ+KFtzb3VyY2UsIC4uLmFyZ3NdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uRXJyb3JSZXN1bWVOZXh0U3RhdGljPFQ+KC4uLnNvdXJjZTogSXRlcmFibGU8VD5bXSk6IEl0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBuZXcgT25FcnJvclJlc3VtZU5leHRJdGVyYWJsZTxUPihzb3VyY2UpO1xufVxuIl19
