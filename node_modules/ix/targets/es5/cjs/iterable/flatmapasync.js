Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var asynciterable_1 = require("../asynciterable");
var bindcallback_1 = require("../internal/bindcallback");
var FlatMapAsyncIterable = (function (_super) {
    tslib_1.__extends(FlatMapAsyncIterable, _super);
    function FlatMapAsyncIterable(source, selector) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._selector = selector;
        return _this;
    }
    FlatMapAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var _a, _b, outer, _c, _d, inner, e_1_1, e_2_1, e_2, _e, e_1, _f;
            return tslib_1.__generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        _g.trys.push([0, 19, 20, 25]);
                        _a = tslib_1.__asyncValues((this._source));
                        _g.label = 1;
                    case 1: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 2:
                        if (!(_b = _g.sent(), !_b.done)) return [3 /*break*/, 18];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 3:
                        outer = _g.sent();
                        _g.label = 4;
                    case 4:
                        _g.trys.push([4, 11, 12, 17]);
                        _c = tslib_1.__asyncValues((this._selector(outer)));
                        _g.label = 5;
                    case 5: return [4 /*yield*/, tslib_1.__await(_c.next())];
                    case 6:
                        if (!(_d = _g.sent(), !_d.done)) return [3 /*break*/, 10];
                        return [4 /*yield*/, tslib_1.__await(_d.value)];
                    case 7:
                        inner = _g.sent();
                        return [4 /*yield*/, inner];
                    case 8:
                        _g.sent();
                        _g.label = 9;
                    case 9: return [3 /*break*/, 5];
                    case 10: return [3 /*break*/, 17];
                    case 11:
                        e_1_1 = _g.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 17];
                    case 12:
                        _g.trys.push([12, , 15, 16]);
                        if (!(_d && !_d.done && (_f = _c.return))) return [3 /*break*/, 14];
                        return [4 /*yield*/, tslib_1.__await(_f.call(_c))];
                    case 13:
                        _g.sent();
                        _g.label = 14;
                    case 14: return [3 /*break*/, 16];
                    case 15:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 16: return [7 /*endfinally*/];
                    case 17: return [3 /*break*/, 1];
                    case 18: return [3 /*break*/, 25];
                    case 19:
                        e_2_1 = _g.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 25];
                    case 20:
                        _g.trys.push([20, , 23, 24]);
                        if (!(_b && !_b.done && (_e = _a.return))) return [3 /*break*/, 22];
                        return [4 /*yield*/, tslib_1.__await(_e.call(_a))];
                    case 21:
                        _g.sent();
                        _g.label = 22;
                    case 22: return [3 /*break*/, 24];
                    case 23:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 24: return [7 /*endfinally*/];
                    case 25: return [2 /*return*/];
                }
            });
        });
    };
    return FlatMapAsyncIterable;
}(asynciterable_1.AsyncIterableX));
/**
 * Projects each element of a sequence to a potentially async iterable and flattens the
 * resulting sequences into one sequence.
 * @param {Iterable<T | Promise<T>> | AsyncIterable<T>} source Source sequence
 * @param {function:(value: T): Iterable<R | Promise<R>> | AsyncIterable<R>} selector A transform function to apply to each element.
 * @param {Object} [thisArg] An optional "this" binding for the selector function.
 * @returns {AsyncIterable<R>} An async iterable whose elements are the result of invoking the one-to-many
 * transform function on each element of the input sequence.
 */
function flatMapAsync(source, selector, thisArg) {
    return new FlatMapAsyncIterable(source, bindcallback_1.bindCallback(selector, thisArg, 1));
}
exports.flatMapAsync = flatMapAsync;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2ZsYXRtYXBhc3luYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQUFrRDtBQUNsRCx5REFBd0Q7QUFFeEQ7SUFBcUQsZ0RBQXVCO0lBSTFFLDhCQUNFLE1BQXlFLEVBQ3pFLFFBQStGO1FBRmpHLFlBR0UsaUJBQU8sU0FHUjtRQUZDLEtBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDOztJQUM1QixDQUFDO0lBRU0sK0JBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7Ozt3QkFDMEIsS0FBQSxzQkFBd0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7Ozs7Ozs7d0JBQS9DLEtBQUssWUFBQTs7Ozt3QkFDTSxLQUFBLHNCQUF3QixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQTs7Ozs7Ozt3QkFBeEQsS0FBSyxZQUFBO3dCQUNsQixxQkFBTSxLQUFLLEVBQUE7O3dCQUFYLFNBQVcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR2pCO0lBQ0gsMkJBQUM7QUFBRCxDQW5CQSxBQW1CQyxDQW5Cb0QsOEJBQWMsR0FtQmxFO0FBRUQ7Ozs7Ozs7O0dBUUc7QUFDSCxzQkFDSSxNQUF5RSxFQUN6RSxRQUErRixFQUMvRixPQUFhO0lBQ2YsTUFBTSxDQUFDLElBQUksb0JBQW9CLENBQW1CLE1BQU0sRUFBRSwyQkFBWSxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRyxDQUFDO0FBTEQsb0NBS0MiLCJmaWxlIjoiaXRlcmFibGUvZmxhdG1hcGFzeW5jLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IGJpbmRDYWxsYmFjayB9IGZyb20gJy4uL2ludGVybmFsL2JpbmRjYWxsYmFjayc7XG5cbmNsYXNzIEZsYXRNYXBBc3luY0l0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2UgfCBQcm9taXNlTGlrZTxUU291cmNlPj4gfCBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9zZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBJdGVyYWJsZTxUUmVzdWx0IHwgUHJvbWlzZUxpa2U8VFJlc3VsdD4+IHwgQXN5bmNJdGVyYWJsZTxUUmVzdWx0PjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2UgfCBQcm9taXNlTGlrZTxUU291cmNlPj4gfCBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEl0ZXJhYmxlPFRSZXN1bHQgfCBQcm9taXNlTGlrZTxUUmVzdWx0Pj4gfCBBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciBhd2FpdCAobGV0IG91dGVyIG9mIDxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pih0aGlzLl9zb3VyY2UpKSB7XG4gICAgICBmb3IgYXdhaXQgKGxldCBpbm5lciBvZiA8QXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj4odGhpcy5fc2VsZWN0b3Iob3V0ZXIpKSkge1xuICAgICAgICB5aWVsZCBpbm5lcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBQcm9qZWN0cyBlYWNoIGVsZW1lbnQgb2YgYSBzZXF1ZW5jZSB0byBhIHBvdGVudGlhbGx5IGFzeW5jIGl0ZXJhYmxlIGFuZCBmbGF0dGVucyB0aGVcbiAqIHJlc3VsdGluZyBzZXF1ZW5jZXMgaW50byBvbmUgc2VxdWVuY2UuXG4gKiBAcGFyYW0ge0l0ZXJhYmxlPFQgfCBQcm9taXNlPFQ+PiB8IEFzeW5jSXRlcmFibGU8VD59IHNvdXJjZSBTb3VyY2Ugc2VxdWVuY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb246KHZhbHVlOiBUKTogSXRlcmFibGU8UiB8IFByb21pc2U8Uj4+IHwgQXN5bmNJdGVyYWJsZTxSPn0gc2VsZWN0b3IgQSB0cmFuc2Zvcm0gZnVuY3Rpb24gdG8gYXBwbHkgdG8gZWFjaCBlbGVtZW50LlxuICogQHBhcmFtIHtPYmplY3R9IFt0aGlzQXJnXSBBbiBvcHRpb25hbCBcInRoaXNcIiBiaW5kaW5nIGZvciB0aGUgc2VsZWN0b3IgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyB7QXN5bmNJdGVyYWJsZTxSPn0gQW4gYXN5bmMgaXRlcmFibGUgd2hvc2UgZWxlbWVudHMgYXJlIHRoZSByZXN1bHQgb2YgaW52b2tpbmcgdGhlIG9uZS10by1tYW55XG4gKiB0cmFuc2Zvcm0gZnVuY3Rpb24gb24gZWFjaCBlbGVtZW50IG9mIHRoZSBpbnB1dCBzZXF1ZW5jZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZsYXRNYXBBc3luYzxUU291cmNlLCBUUmVzdWx0PihcbiAgICBzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2UgfCBQcm9taXNlTGlrZTxUU291cmNlPj4gfCBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEl0ZXJhYmxlPFRSZXN1bHQgfCBQcm9taXNlTGlrZTxUUmVzdWx0Pj4gfCBBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+LFxuICAgIHRoaXNBcmc/OiBhbnkpOiBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgRmxhdE1hcEFzeW5jSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdD4oc291cmNlLCBiaW5kQ2FsbGJhY2soc2VsZWN0b3IsIHRoaXNBcmcsIDEpKTtcbn1cbiJdfQ==
