Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var iterable_1 = require("../iterable");
var ScanIterable = (function (_super) {
    tslib_1.__extends(ScanIterable, _super);
    function ScanIterable(source, fn) {
        var args = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._fn = fn;
        _this._hasSeed = args.length === 1;
        _this._seed = args[0];
        return _this;
    }
    ScanIterable.prototype[Symbol.iterator] = function () {
        var i, hasValue, _a, _b, item, e_1_1, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    i = 0, hasValue = false;
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 7, 8, 9]);
                    _a = tslib_1.__values(this._source), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 6];
                    item = _b.value;
                    if (!(hasValue || (hasValue = this._hasSeed))) return [3 /*break*/, 4];
                    this._seed = this._fn(this._seed, item, i++);
                    return [4 /*yield*/, this._seed];
                case 3:
                    _d.sent();
                    return [3 /*break*/, 5];
                case 4:
                    this._seed = item;
                    hasValue = true;
                    i++;
                    _d.label = 5;
                case 5:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 6: return [3 /*break*/, 9];
                case 7:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 9];
                case 8:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 9: return [2 /*return*/];
            }
        });
    };
    return ScanIterable;
}(iterable_1.IterableX));
function scan(source, accumulator) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    return new (ScanIterable.bind.apply(ScanIterable, tslib_1.__spread([void 0, source, accumulator], args)))();
}
exports.scan = scan;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3NjYW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx3Q0FBd0M7QUFFeEM7SUFBaUMsd0NBQVk7SUFNM0Msc0JBQ0ksTUFBbUIsRUFDbkIsRUFBMEM7UUFDMUMsY0FBa0I7YUFBbEIsVUFBa0IsRUFBbEIscUJBQWtCLEVBQWxCLElBQWtCO1lBQWxCLDZCQUFrQjs7UUFIdEIsWUFJRSxpQkFBTyxTQUtSO1FBSkMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDZCxLQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDOztJQUN2QixDQUFDO0lBRUEsdUJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ00sQ0FBQyxHQUFHLENBQUMsRUFBRSxRQUFRLEdBQUcsS0FBSyxDQUFDOzs7O29CQUNYLEtBQUEsaUJBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQTs7OztvQkFBcEIsSUFBSTt5QkFDUCxDQUFBLFFBQVEsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUEsRUFBdEMsd0JBQXNDO29CQUN4QyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQkFDaEQscUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQTs7b0JBQWhCLFNBQWdCLENBQUM7OztvQkFFakIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7b0JBQ2xCLFFBQVEsR0FBRyxJQUFJLENBQUM7b0JBQ2hCLENBQUMsRUFBRSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR1Q7SUFDSCxtQkFBQztBQUFELENBOUJBLEFBOEJDLENBOUJnQyxvQkFBUyxHQThCekM7QUFTRCxjQUNJLE1BQW1CLEVBQ25CLFdBQXVEO0lBQ3ZELGNBQWtCO1NBQWxCLFVBQWtCLEVBQWxCLHFCQUFrQixFQUFsQixJQUFrQjtRQUFsQiw2QkFBa0I7O0lBQ3BCLE1BQU0sTUFBSyxZQUFZLFlBQVosWUFBWSw0QkFBQyxNQUFNLEVBQUUsV0FBVyxHQUFLLElBQUksTUFBRTtBQUN4RCxDQUFDO0FBTEQsb0JBS0MiLCJmaWxlIjoiaXRlcmFibGUvc2Nhbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcblxuY2xhc3MgU2Nhbkl0ZXJhYmxlPFQsIFI+IGV4dGVuZHMgSXRlcmFibGVYPFI+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUPjtcbiAgcHJpdmF0ZSBfZm46IChhY2M6IFQgfCBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSO1xuICBwcml2YXRlIF9zZWVkPzogVCB8IFI7XG4gIHByaXZhdGUgX2hhc1NlZWQ6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBzb3VyY2U6IEl0ZXJhYmxlPFQ+LFxuICAgICAgZm46IChhY2M6IFQgfCBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSLFxuICAgICAgLi4uYXJnczogKFQgfCBSKVtdKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fZm4gPSBmbjtcbiAgICB0aGlzLl9oYXNTZWVkID0gYXJncy5sZW5ndGggPT09IDE7XG4gICAgdGhpcy5fc2VlZCA9IGFyZ3NbMF07XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgbGV0IGkgPSAwLCBoYXNWYWx1ZSA9IGZhbHNlO1xuICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBpZiAoaGFzVmFsdWUgfHwgKGhhc1ZhbHVlID0gdGhpcy5faGFzU2VlZCkpIHtcbiAgICAgICAgdGhpcy5fc2VlZCA9IHRoaXMuX2ZuKDxSPnRoaXMuX3NlZWQsIGl0ZW0sIGkrKyk7XG4gICAgICAgIHlpZWxkIHRoaXMuX3NlZWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWVkID0gaXRlbTtcbiAgICAgICAgaGFzVmFsdWUgPSB0cnVlO1xuICAgICAgICBpKys7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzY2FuPFQ+KFxuICBzb3VyY2U6IEl0ZXJhYmxlPFQ+LFxuICBhY2N1bXVsYXRvcjogKGFjYzogVCwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFQpOiBJdGVyYWJsZVg8VD47XG5leHBvcnQgZnVuY3Rpb24gc2NhbjxULCBSID0gVD4oXG4gIHNvdXJjZTogSXRlcmFibGU8VD4sXG4gIGFjY3VtdWxhdG9yOiAoYWNjOiBSLCB2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gUixcbiAgc2VlZDogUik6IEl0ZXJhYmxlWDxSPjtcbmV4cG9ydCBmdW5jdGlvbiBzY2FuPFQsIFIgPSBUPihcbiAgICBzb3VyY2U6IEl0ZXJhYmxlPFQ+LFxuICAgIGFjY3VtdWxhdG9yOiAoYWNjOiBUIHwgUiwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFIsXG4gICAgLi4uYXJnczogKFQgfCBSKVtdKTogSXRlcmFibGVYPFQgfCBSPiB7XG4gIHJldHVybiBuZXcgU2Nhbkl0ZXJhYmxlKHNvdXJjZSwgYWNjdW11bGF0b3IsIC4uLmFyZ3MpO1xufVxuIl19
