Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var iterable_1 = require("../iterable");
var identity_1 = require("../internal/identity");
var arrayindexof_1 = require("../internal/arrayindexof");
var comparer_1 = require("../internal/comparer");
var DistinctIterable = (function (_super) {
    tslib_1.__extends(DistinctIterable, _super);
    function DistinctIterable(source, keySelector, cmp) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._keySelector = keySelector;
        _this._cmp = cmp;
        return _this;
    }
    DistinctIterable.prototype[Symbol.iterator] = function () {
        var set, _a, _b, item, key, e_1_1, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    set = [];
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 6, 7, 8]);
                    _a = tslib_1.__values(this._source), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 5];
                    item = _b.value;
                    key = this._keySelector(item);
                    if (!(arrayindexof_1.arrayIndexOf(set, key, this._cmp) === -1)) return [3 /*break*/, 4];
                    set.push(key);
                    return [4 /*yield*/, item];
                case 3:
                    _d.sent();
                    _d.label = 4;
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    };
    return DistinctIterable;
}(iterable_1.IterableX));
/**
 * Returns elements with a distinct key value by using the specified comparer to compare key values.
 * @param source Source sequence.
 * @param {function(value: TSource): TKey} [keySelector] Key selector.
 * @param {function(x: TKey, y: TKey): boolean} [comparer] Comparer used to compare key values.
 * @return {Iterable<T>} Sequence that contains the elements from the source sequence with distinct key values.
 */
function distinct(source, keySelector, comparer) {
    if (keySelector === void 0) { keySelector = identity_1.identity; }
    if (comparer === void 0) { comparer = comparer_1.comparer; }
    return new DistinctIterable(source, keySelector, comparer);
}
exports.distinct = distinct;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2Rpc3RpbmN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0NBQXdDO0FBQ3hDLGlEQUFnRDtBQUNoRCx5REFBd0Q7QUFDeEQsaURBQW1FO0FBRW5FO0lBQThDLDRDQUFrQjtJQUs5RCwwQkFBWSxNQUF5QixFQUFFLFdBQXFDLEVBQUUsR0FBa0M7UUFBaEgsWUFDRSxpQkFBTyxTQUlSO1FBSEMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDaEMsS0FBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7O0lBQ2xCLENBQUM7SUFFQSwyQkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQWxCOzs7OztvQkFDTSxHQUFHLEdBQUcsRUFBRSxDQUFDOzs7O29CQUVJLEtBQUEsaUJBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQTs7OztvQkFBcEIsSUFBSTtvQkFDUCxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQzt5QkFDOUIsQ0FBQSwyQkFBWSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBLEVBQXhDLHdCQUF3QztvQkFDMUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDZCxxQkFBTSxJQUFJLEVBQUE7O29CQUFWLFNBQVUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdoQjtJQUNILHVCQUFDO0FBQUQsQ0F2QkEsQUF1QkMsQ0F2QjZDLG9CQUFTLEdBdUJ0RDtBQUVEOzs7Ozs7R0FNRztBQUNILGtCQUNJLE1BQXlCLEVBQ3pCLFdBQWdELEVBQ2hELFFBQXlEO0lBRHpELDRCQUFBLEVBQUEsY0FBd0MsbUJBQVE7SUFDaEQseUJBQUEsRUFBQSxXQUEwQyxtQkFBZTtJQUMzRCxNQUFNLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQzdELENBQUM7QUFMRCw0QkFLQyIsImZpbGUiOiJpdGVyYWJsZS9kaXN0aW5jdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmltcG9ydCB7IGlkZW50aXR5IH0gZnJvbSAnLi4vaW50ZXJuYWwvaWRlbnRpdHknO1xuaW1wb3J0IHsgYXJyYXlJbmRleE9mIH0gZnJvbSAnLi4vaW50ZXJuYWwvYXJyYXlpbmRleG9mJztcbmltcG9ydCB7IGNvbXBhcmVyIGFzIGRlZmF1bHRDb21wYXJlciB9IGZyb20gJy4uL2ludGVybmFsL2NvbXBhcmVyJztcblxuY2xhc3MgRGlzdGluY3RJdGVyYWJsZTxUU291cmNlLCBUS2V5PiBleHRlbmRzIEl0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2tleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXk7XG4gIHByaXZhdGUgX2NtcDogKHg6IFRLZXksIHk6IFRLZXkpID0+IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiwga2V5U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVEtleSwgY21wOiAoeDogVEtleSwgeTogVEtleSkgPT4gYm9vbGVhbikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2tleVNlbGVjdG9yID0ga2V5U2VsZWN0b3I7XG4gICAgdGhpcy5fY21wID0gY21wO1xuICB9XG5cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGxldCBzZXQgPSBbXTtcblxuICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBsZXQga2V5ID0gdGhpcy5fa2V5U2VsZWN0b3IoaXRlbSk7XG4gICAgICBpZiAoYXJyYXlJbmRleE9mKHNldCwga2V5LCB0aGlzLl9jbXApID09PSAtMSkge1xuICAgICAgICBzZXQucHVzaChrZXkpO1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFJldHVybnMgZWxlbWVudHMgd2l0aCBhIGRpc3RpbmN0IGtleSB2YWx1ZSBieSB1c2luZyB0aGUgc3BlY2lmaWVkIGNvbXBhcmVyIHRvIGNvbXBhcmUga2V5IHZhbHVlcy5cbiAqIEBwYXJhbSBzb3VyY2UgU291cmNlIHNlcXVlbmNlLlxuICogQHBhcmFtIHtmdW5jdGlvbih2YWx1ZTogVFNvdXJjZSk6IFRLZXl9IFtrZXlTZWxlY3Rvcl0gS2V5IHNlbGVjdG9yLlxuICogQHBhcmFtIHtmdW5jdGlvbih4OiBUS2V5LCB5OiBUS2V5KTogYm9vbGVhbn0gW2NvbXBhcmVyXSBDb21wYXJlciB1c2VkIHRvIGNvbXBhcmUga2V5IHZhbHVlcy5cbiAqIEByZXR1cm4ge0l0ZXJhYmxlPFQ+fSBTZXF1ZW5jZSB0aGF0IGNvbnRhaW5zIHRoZSBlbGVtZW50cyBmcm9tIHRoZSBzb3VyY2Ugc2VxdWVuY2Ugd2l0aCBkaXN0aW5jdCBrZXkgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGlzdGluY3Q8VFNvdXJjZSwgVEtleT4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5ID0gaWRlbnRpdHksXG4gICAgY29tcGFyZXI6ICh4OiBUS2V5LCB5OiBUS2V5KSA9PiBib29sZWFuID0gZGVmYXVsdENvbXBhcmVyKTogSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBEaXN0aW5jdEl0ZXJhYmxlKHNvdXJjZSwga2V5U2VsZWN0b3IsIGNvbXBhcmVyKTtcbn1cbiJdfQ==
