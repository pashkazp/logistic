Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var iterable_1 = require("../iterable");
var _grouping_1 = require("./_grouping");
var empty_1 = require("./empty");
var identity_1 = require("../internal/identity");
var GroupJoinIterable = (function (_super) {
    tslib_1.__extends(GroupJoinIterable, _super);
    function GroupJoinIterable(outer, inner, outerSelector, innerSelector, resultSelector) {
        var _this = _super.call(this) || this;
        _this._outer = outer;
        _this._inner = inner;
        _this._outerSelector = outerSelector;
        _this._innerSelector = innerSelector;
        _this._resultSelector = resultSelector;
        return _this;
    }
    GroupJoinIterable.prototype[Symbol.iterator] = function () {
        var map, _a, _b, outerElement, outerKey, innerElements, e_1_1, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    map = _grouping_1.createGrouping(this._inner, this._innerSelector, identity_1.identity);
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 6, 7, 8]);
                    _a = tslib_1.__values(this._outer), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 5];
                    outerElement = _b.value;
                    outerKey = this._outerSelector(outerElement);
                    innerElements = map.has(outerKey) ? map.get(outerKey) : empty_1.empty();
                    return [4 /*yield*/, this._resultSelector(outerElement, innerElements)];
                case 3:
                    _d.sent();
                    _d.label = 4;
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    };
    return GroupJoinIterable;
}(iterable_1.IterableX));
function groupJoin(outer, inner, outerSelector, innerSelector, resultSelector) {
    return new GroupJoinIterable(outer, inner, outerSelector, innerSelector, resultSelector);
}
exports.groupJoin = groupJoin;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2dyb3Vwam9pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUF3QztBQUN4Qyx5Q0FBNkM7QUFDN0MsaUNBQWdDO0FBQ2hDLGlEQUFnRDtBQUVoRDtJQUErRCw2Q0FBa0I7SUFPL0UsMkJBQ0ksS0FBdUIsRUFDdkIsS0FBdUIsRUFDdkIsYUFBc0MsRUFDdEMsYUFBc0MsRUFDdEMsY0FBbUU7UUFMdkUsWUFNRSxpQkFBTyxTQU1SO1FBTEMsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsS0FBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDcEMsS0FBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDcEMsS0FBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7O0lBQ3hDLENBQUM7SUFFQSw0QkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQWxCOzs7OztvQkFDUSxHQUFHLEdBQUcsMEJBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsbUJBQVEsQ0FBQyxDQUFDOzs7O29CQUM5QyxLQUFBLGlCQUFBLElBQUksQ0FBQyxNQUFNLENBQUE7Ozs7b0JBQTNCLFlBQVk7b0JBQ2IsUUFBUSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7b0JBQzdDLGFBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFxQixHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxHQUFHLGFBQUssRUFBVSxDQUFDO29CQUNoRyxxQkFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsRUFBQTs7b0JBQXZELFNBQXVELENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FFM0Q7SUFDSCx3QkFBQztBQUFELENBN0JBLEFBNkJDLENBN0I4RCxvQkFBUyxHQTZCdkU7QUFFRCxtQkFDSSxLQUF1QixFQUN2QixLQUF1QixFQUN2QixhQUFzQyxFQUN0QyxhQUFzQyxFQUN0QyxjQUFtRTtJQUNyRSxNQUFNLENBQUMsSUFBSSxpQkFBaUIsQ0FDMUIsS0FBSyxFQUNMLEtBQUssRUFDTCxhQUFhLEVBQ2IsYUFBYSxFQUNiLGNBQWMsQ0FBQyxDQUFDO0FBQ3BCLENBQUM7QUFaRCw4QkFZQyIsImZpbGUiOiJpdGVyYWJsZS9ncm91cGpvaW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5pbXBvcnQgeyBjcmVhdGVHcm91cGluZyB9IGZyb20gJy4vX2dyb3VwaW5nJztcbmltcG9ydCB7IGVtcHR5IH0gZnJvbSAnLi9lbXB0eSc7XG5pbXBvcnQgeyBpZGVudGl0eSB9IGZyb20gJy4uL2ludGVybmFsL2lkZW50aXR5JztcblxuY2xhc3MgR3JvdXBKb2luSXRlcmFibGU8VE91dGVyLCBUSW5uZXIsIFRLZXksIFRSZXN1bHQ+IGV4dGVuZHMgSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcHJpdmF0ZSBfb3V0ZXI6IEl0ZXJhYmxlPFRPdXRlcj47XG4gIHByaXZhdGUgX2lubmVyOiBJdGVyYWJsZTxUSW5uZXI+O1xuICBwcml2YXRlIF9vdXRlclNlbGVjdG9yOiAodmFsdWU6IFRPdXRlcikgPT4gVEtleTtcbiAgcHJpdmF0ZSBfaW5uZXJTZWxlY3RvcjogKHZhbHVlOiBUSW5uZXIpID0+IFRLZXk7XG4gIHByaXZhdGUgX3Jlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj4pID0+IFRSZXN1bHQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBvdXRlcjogSXRlcmFibGU8VE91dGVyPixcbiAgICAgIGlubmVyOiBJdGVyYWJsZTxUSW5uZXI+LFxuICAgICAgb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXksXG4gICAgICBpbm5lclNlbGVjdG9yOiAodmFsdWU6IFRJbm5lcikgPT4gVEtleSxcbiAgICAgIHJlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj4pID0+IFRSZXN1bHQpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX291dGVyID0gb3V0ZXI7XG4gICAgdGhpcy5faW5uZXIgPSBpbm5lcjtcbiAgICB0aGlzLl9vdXRlclNlbGVjdG9yID0gb3V0ZXJTZWxlY3RvcjtcbiAgICB0aGlzLl9pbm5lclNlbGVjdG9yID0gaW5uZXJTZWxlY3RvcjtcbiAgICB0aGlzLl9yZXN1bHRTZWxlY3RvciA9IHJlc3VsdFNlbGVjdG9yO1xuICB9XG5cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGNvbnN0IG1hcCA9IGNyZWF0ZUdyb3VwaW5nKHRoaXMuX2lubmVyLCB0aGlzLl9pbm5lclNlbGVjdG9yLCBpZGVudGl0eSk7XG4gICAgZm9yIChsZXQgb3V0ZXJFbGVtZW50IG9mIHRoaXMuX291dGVyKSB7XG4gICAgICBjb25zdCBvdXRlcktleSA9IHRoaXMuX291dGVyU2VsZWN0b3Iob3V0ZXJFbGVtZW50KTtcbiAgICAgIGNvbnN0IGlubmVyRWxlbWVudHMgPSBtYXAuaGFzKG91dGVyS2V5KSA/IDxJdGVyYWJsZTxUSW5uZXI+Pm1hcC5nZXQob3V0ZXJLZXkpIDogZW1wdHk8VElubmVyPigpO1xuICAgICAgeWllbGQgdGhpcy5fcmVzdWx0U2VsZWN0b3Iob3V0ZXJFbGVtZW50LCBpbm5lckVsZW1lbnRzKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwSm9pbjxUT3V0ZXIsIFRJbm5lciwgVEtleSwgVFJlc3VsdD4oXG4gICAgb3V0ZXI6IEl0ZXJhYmxlPFRPdXRlcj4sXG4gICAgaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj4sXG4gICAgb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXksXG4gICAgaW5uZXJTZWxlY3RvcjogKHZhbHVlOiBUSW5uZXIpID0+IFRLZXksXG4gICAgcmVzdWx0U2VsZWN0b3I6IChvdXRlcjogVE91dGVyLCBpbm5lcjogSXRlcmFibGU8VElubmVyPikgPT4gVFJlc3VsdCk6IEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgR3JvdXBKb2luSXRlcmFibGU8VE91dGVyLCBUSW5uZXIsIFRLZXksIFRSZXN1bHQ+KFxuICAgIG91dGVyLFxuICAgIGlubmVyLFxuICAgIG91dGVyU2VsZWN0b3IsXG4gICAgaW5uZXJTZWxlY3RvcixcbiAgICByZXN1bHRTZWxlY3Rvcik7XG59XG4iXX0=
