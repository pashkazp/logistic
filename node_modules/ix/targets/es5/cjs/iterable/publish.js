Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var iterable_1 = require("../iterable");
var _refcountlist_1 = require("./_refcountlist");
var create_1 = require("./create");
var PublishedBuffer = (function (_super) {
    tslib_1.__extends(PublishedBuffer, _super);
    function PublishedBuffer(source) {
        var _this = _super.call(this) || this;
        _this._stopped = false;
        _this._source = source;
        _this._buffer = new _refcountlist_1.RefCountList(0);
        return _this;
    }
    PublishedBuffer.prototype._getIterable = function (i) {
        var hasValue, current, next;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, , 6, 7]);
                    _a.label = 1;
                case 1:
                    if (!1) return [3 /*break*/, 5];
                    hasValue = false, current = {};
                    if (i >= this._buffer.count) {
                        if (!this._stopped) {
                            try {
                                next = this._source.next();
                                hasValue = !next.done;
                                if (hasValue) {
                                    current = next.value;
                                }
                            }
                            catch (e) {
                                this._error = e;
                                this._stopped = true;
                            }
                        }
                        if (this._stopped) {
                            if (this._error) {
                                throw this._error;
                            }
                            else {
                                return [3 /*break*/, 5];
                            }
                        }
                        if (hasValue) {
                            this._buffer.push(current);
                        }
                    }
                    else {
                        hasValue = true;
                    }
                    if (!hasValue) return [3 /*break*/, 3];
                    return [4 /*yield*/, this._buffer.get(i)];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 3: return [3 /*break*/, 5];
                case 4:
                    i++;
                    return [3 /*break*/, 1];
                case 5: return [3 /*break*/, 7];
                case 6:
                    this._buffer.done();
                    return [7 /*endfinally*/];
                case 7: return [2 /*return*/];
            }
        });
    };
    PublishedBuffer.prototype[Symbol.iterator] = function () {
        this._buffer.readerCount++;
        return this._getIterable(this._buffer.count)[Symbol.iterator]();
    };
    return PublishedBuffer;
}(iterable_1.IterableX));
function publish(source, selector) {
    return selector ?
        create_1.create(function () { return selector(publish(source))[Symbol.iterator](); }) :
        new PublishedBuffer(source[Symbol.iterator]());
}
exports.publish = publish;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUFRLENBQUMsRUFBRSxFQUE1QyxDQUE0QyxDQUFDO1FBQzFELElBQUksZUFBZSxDQUFVLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzVELENBQUM7QUFORCwwQkFNQyIsImZpbGUiOiJpdGVyYWJsZS9wdWJsaXNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuaW1wb3J0IHsgUmVmQ291bnRMaXN0IH0gZnJvbSAnLi9fcmVmY291bnRsaXN0JztcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJy4vY3JlYXRlJztcblxuY2xhc3MgUHVibGlzaGVkQnVmZmVyPFQ+IGV4dGVuZHMgSXRlcmFibGVYPFQ+IHtcbiAgcHJpdmF0ZSBfYnVmZmVyOiBSZWZDb3VudExpc3Q8VD47XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmF0b3I8VD47XG4gIHByaXZhdGUgX2Vycm9yOiBhbnk7XG4gIHByaXZhdGUgX3N0b3BwZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhdG9yPFQ+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fYnVmZmVyID0gbmV3IFJlZkNvdW50TGlzdDxUPigwKTtcbiAgfVxuXG4gIHByaXZhdGUgKl9nZXRJdGVyYWJsZShpOiBudW1iZXIpOiBJdGVyYWJsZTxUPiB7XG4gICAgdHJ5IHtcbiAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgIGxldCBoYXNWYWx1ZSA9IGZhbHNlLCBjdXJyZW50ID0gPFQ+e307XG4gICAgICAgIGlmIChpID49IHRoaXMuX2J1ZmZlci5jb3VudCkge1xuICAgICAgICAgIGlmICghdGhpcy5fc3RvcHBlZCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgbGV0IG5leHQgPSB0aGlzLl9zb3VyY2UubmV4dCgpO1xuICAgICAgICAgICAgICBoYXNWYWx1ZSA9ICFuZXh0LmRvbmU7XG4gICAgICAgICAgICAgIGlmIChoYXNWYWx1ZSkgeyBjdXJyZW50ID0gbmV4dC52YWx1ZTsgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICB0aGlzLl9lcnJvciA9IGU7XG4gICAgICAgICAgICAgIHRoaXMuX3N0b3BwZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0aGlzLl9zdG9wcGVkKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fZXJyb3IpIHtcbiAgICAgICAgICAgICAgdGhyb3cgdGhpcy5fZXJyb3I7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoaGFzVmFsdWUpIHsgdGhpcy5fYnVmZmVyLnB1c2goY3VycmVudCk7IH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBoYXNWYWx1ZSA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFzVmFsdWUpIHtcbiAgICAgICAgICB5aWVsZCB0aGlzLl9idWZmZXIuZ2V0KGkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaSsrO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLl9idWZmZXIuZG9uZSgpO1xuICAgIH1cbiAgfVxuXG4gIFtTeW1ib2wuaXRlcmF0b3JdKCk6IEl0ZXJhdG9yPFQ+IHtcbiAgICB0aGlzLl9idWZmZXIucmVhZGVyQ291bnQrKztcbiAgICByZXR1cm4gdGhpcy5fZ2V0SXRlcmFibGUodGhpcy5fYnVmZmVyLmNvdW50KVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHB1Ymxpc2g8VFNvdXJjZT4oc291cmNlOiBJdGVyYWJsZTxUU291cmNlPik6IEl0ZXJhYmxlWDxUU291cmNlPjtcbmV4cG9ydCBmdW5jdGlvbiBwdWJsaXNoPFRTb3VyY2UsIFRSZXN1bHQ+KFxuICBzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LFxuICBzZWxlY3Rvcj86ICh2YWx1ZTogSXRlcmFibGU8VFNvdXJjZT4pID0+IEl0ZXJhYmxlPFRSZXN1bHQ+KTogSXRlcmFibGVYPFRSZXN1bHQ+O1xuZXhwb3J0IGZ1bmN0aW9uIHB1Ymxpc2g8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPixcbiAgICBzZWxlY3Rvcj86ICh2YWx1ZTogSXRlcmFibGU8VFNvdXJjZT4pID0+IEl0ZXJhYmxlPFRSZXN1bHQ+KTogSXRlcmFibGVYPFRTb3VyY2UgfCBUUmVzdWx0PiB7XG4gIHJldHVybiBzZWxlY3RvciA/XG4gICAgY3JlYXRlKCgpID0+IHNlbGVjdG9yKHB1Ymxpc2goc291cmNlKSlbU3ltYm9sLml0ZXJhdG9yXSgpKSA6XG4gICAgbmV3IFB1Ymxpc2hlZEJ1ZmZlcjxUU291cmNlPihzb3VyY2VbU3ltYm9sLml0ZXJhdG9yXSgpKTtcbn1cbiJdfQ==
