Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @ignore
 */
var MaxRefCountList = (function () {
    function MaxRefCountList() {
        this._list = [];
    }
    MaxRefCountList.prototype.clear = function () { this._list = []; };
    Object.defineProperty(MaxRefCountList.prototype, "count", {
        get: function () { return this._list.length; },
        enumerable: true,
        configurable: true
    });
    MaxRefCountList.prototype.get = function (index) { return this._list[index]; };
    MaxRefCountList.prototype.push = function (value) { this._list.push(value); };
    // tslint:disable-next-line:no-empty
    MaxRefCountList.prototype.done = function () { };
    return MaxRefCountList;
}());
exports.MaxRefCountList = MaxRefCountList;
/**
 * @ignore
 */
var RefCountList = (function () {
    function RefCountList(readerCount) {
        this._count = 0;
        this._readerCount = readerCount;
        this._list = new Map();
    }
    RefCountList.prototype.clear = function () { this._list.clear(); };
    Object.defineProperty(RefCountList.prototype, "count", {
        get: function () { return this._count; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RefCountList.prototype, "readerCount", {
        get: function () { return this._readerCount; },
        set: function (value) { this._readerCount = value; },
        enumerable: true,
        configurable: true
    });
    RefCountList.prototype.done = function () { this._readerCount--; };
    RefCountList.prototype.get = function (index) {
        if (!this._list.has(index)) {
            throw new Error('Element no longer available in the buffer.');
        }
        var res = this._list.get(index);
        var val = res.value;
        if (--res.count === 0) {
            this._list.delete(index);
        }
        return val;
    };
    RefCountList.prototype.push = function (value) {
        this._list.set(this._count++, { value: value, count: this._readerCount });
    };
    return RefCountList;
}());
exports.RefCountList = RefCountList;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL19yZWZjb3VudGxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQW1CQTs7R0FFRztBQUNIO0lBQUE7UUFDVSxVQUFLLEdBQVEsRUFBRSxDQUFDO0lBUzFCLENBQUM7SUFQQywrQkFBSyxHQUFMLGNBQVUsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzVCLHNCQUFJLGtDQUFLO2FBQVQsY0FBYyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDOzs7T0FBQTtJQUN6Qyw2QkFBRyxHQUFILFVBQUksS0FBYSxJQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuRCw4QkFBSSxHQUFKLFVBQUssS0FBUSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUUxQyxvQ0FBb0M7SUFDcEMsOEJBQUksR0FBSixjQUFTLENBQUM7SUFDWixzQkFBQztBQUFELENBVkEsQUFVQyxJQUFBO0FBVlksMENBQWU7QUFZNUI7O0dBRUc7QUFDSDtJQUtFLHNCQUFZLFdBQW1CO1FBRnZCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFHekIsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDaEMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLEdBQUcsRUFBdUIsQ0FBQztJQUM5QyxDQUFDO0lBRUQsNEJBQUssR0FBTCxjQUFVLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQy9CLHNCQUFJLCtCQUFLO2FBQVQsY0FBYyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7OztPQUFBO0lBQ25DLHNCQUFJLHFDQUFXO2FBQWYsY0FBb0IsTUFBTSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO2FBQy9DLFVBQWdCLEtBQWEsSUFBSSxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7OztPQURkO0lBRS9DLDJCQUFJLEdBQUosY0FBUyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRS9CLDBCQUFHLEdBQUgsVUFBSSxLQUFhO1FBQ2YsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsTUFBTSxJQUFJLEtBQUssQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQ2hFLENBQUM7UUFDRCxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUUsQ0FBQztRQUNuQyxJQUFNLEdBQUcsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ3RCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNCLENBQUM7UUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2IsQ0FBQztJQUVELDJCQUFJLEdBQUosVUFBSyxLQUFRO1FBQ1gsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7SUFDNUUsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0EvQkEsQUErQkMsSUFBQTtBQS9CWSxvQ0FBWSIsImZpbGUiOiJpdGVyYWJsZS9fcmVmY291bnRsaXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaWdub3JlXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVmQ291bnQ8VD4ge1xuICB2YWx1ZTogVDtcbiAgY291bnQ6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVJlZkNvdW50TGlzdDxUPiB7XG4gIGNsZWFyKCk6IHZvaWQ7XG4gIHJlYWRvbmx5IGNvdW50OiBudW1iZXI7XG4gIGdldChpbmRleDogbnVtYmVyKTogVDtcbiAgcHVzaCh2YWx1ZTogVCk6IHZvaWQ7XG4gIGRvbmUoKTogdm9pZDtcbn1cblxuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmV4cG9ydCBjbGFzcyBNYXhSZWZDb3VudExpc3Q8VD4gaW1wbGVtZW50cyBJUmVmQ291bnRMaXN0PFQ+IHtcbiAgcHJpdmF0ZSBfbGlzdDogVFtdID0gW107XG5cbiAgY2xlYXIoKSB7IHRoaXMuX2xpc3QgPSBbXTsgfVxuICBnZXQgY291bnQoKSB7IHJldHVybiB0aGlzLl9saXN0Lmxlbmd0aDsgfVxuICBnZXQoaW5kZXg6IG51bWJlcik6IFQgeyByZXR1cm4gdGhpcy5fbGlzdFtpbmRleF07IH1cbiAgcHVzaCh2YWx1ZTogVCkgeyB0aGlzLl9saXN0LnB1c2godmFsdWUpOyB9XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWVtcHR5XG4gIGRvbmUoKSB7IH1cbn1cblxuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmV4cG9ydCBjbGFzcyBSZWZDb3VudExpc3Q8VD4gaW1wbGVtZW50cyBJUmVmQ291bnRMaXN0PFQ+IHtcbiAgcHJpdmF0ZSBfcmVhZGVyQ291bnQ6IG51bWJlcjtcbiAgcHJpdmF0ZSBfbGlzdDogTWFwPG51bWJlciwgUmVmQ291bnQ8VD4+O1xuICBwcml2YXRlIF9jb3VudDogbnVtYmVyID0gMDtcblxuICBjb25zdHJ1Y3RvcihyZWFkZXJDb3VudDogbnVtYmVyKSB7XG4gICAgdGhpcy5fcmVhZGVyQ291bnQgPSByZWFkZXJDb3VudDtcbiAgICB0aGlzLl9saXN0ID0gbmV3IE1hcDxudW1iZXIsIFJlZkNvdW50PFQ+PigpO1xuICB9XG5cbiAgY2xlYXIoKSB7IHRoaXMuX2xpc3QuY2xlYXIoKTsgfVxuICBnZXQgY291bnQoKSB7IHJldHVybiB0aGlzLl9jb3VudDsgfVxuICBnZXQgcmVhZGVyQ291bnQoKSB7IHJldHVybiB0aGlzLl9yZWFkZXJDb3VudDsgfVxuICBzZXQgcmVhZGVyQ291bnQodmFsdWU6IG51bWJlcikgeyB0aGlzLl9yZWFkZXJDb3VudCA9IHZhbHVlOyB9XG4gIGRvbmUoKSB7IHRoaXMuX3JlYWRlckNvdW50LS07IH1cblxuICBnZXQoaW5kZXg6IG51bWJlcik6IFQge1xuICAgIGlmICghdGhpcy5fbGlzdC5oYXMoaW5kZXgpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VsZW1lbnQgbm8gbG9uZ2VyIGF2YWlsYWJsZSBpbiB0aGUgYnVmZmVyLicpO1xuICAgIH1cbiAgICBjb25zdCByZXMgPSB0aGlzLl9saXN0LmdldChpbmRleCkhO1xuICAgIGNvbnN0IHZhbCA9IHJlcy52YWx1ZTtcbiAgICBpZiAoLS1yZXMuY291bnQgPT09IDApIHtcbiAgICAgIHRoaXMuX2xpc3QuZGVsZXRlKGluZGV4KTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIHB1c2godmFsdWU6IFQpIHtcbiAgICB0aGlzLl9saXN0LnNldCh0aGlzLl9jb3VudCsrLCB7IHZhbHVlOiB2YWx1ZSwgY291bnQ6IHRoaXMuX3JlYWRlckNvdW50IH0pO1xuICB9XG59XG4iXX0=
