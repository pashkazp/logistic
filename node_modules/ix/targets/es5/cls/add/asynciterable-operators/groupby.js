goog.module('targets.es5.cls.add.asynciterable_operators.groupby'); exports = {}; var module = {id: 'targets/es5/cls/add/asynciterable-operators/groupby.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var groupby_1 = goog.require('targets.es5.cls.asynciterable.groupby');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.groupby");
var identity_1 = goog.require('targets.es5.cls.internal.identity');
var tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.identity");
/**
 * @ignore
 * @template TSource, TKey, TValue
 * @this {!AsyncIterable<TSource>}
 * @param {function(TSource): (TKey|!Promise<TKey>)} keySelector
 * @param {function(TSource): (TValue|!Promise<TValue>)=} elementSelector
 * @return {!tsickle_forward_declare_1.AsyncIterableX<!tsickle_forward_declare_2.GroupedAsyncIterable<TKey, TValue>>}
 */
function groupByProto(keySelector, elementSelector) {
    if (elementSelector === void 0) { elementSelector = identity_1.identityAsync; }
    return groupby_1.groupBy(this, keySelector, elementSelector);
}
exports.groupByProto = groupByProto;
asynciterable_1.AsyncIterableX.prototype.groupBy = groupByProto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZGQvYXN5bmNpdGVyYWJsZS1vcGVyYXRvcnMvZ3JvdXBieS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgscURBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU43QztBQU9yRCx1REFOc0M7QUFPdEMsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1EQUFtRCxDQUFDLENBUDlCO0FBUTVFLG9EQVBzQjtBQVF0QixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsK0NBQStDLENBQUMsQ0FSOUM7QUFpQnhEOzs7Ozs7O0dBT0c7QUFaSCxzQkFlSSxXQWJxRCxFQWNyRCxlQWI2RTtJQWE3RSxnQ0FBQSxFQUFBLGtCQWIrRCx3QkFBYztJQWMvRSxNQWJNLENBQUEsaUJBQVEsQ0FBd0IsSUFBSSxFQUFDLFdBQVksRUFBQyxlQUFnQixDQUFDLENBQUM7QUFjNUUsQ0FiQztBQUxELG9DQUtDO0FBZUQsOEJBYmMsQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFFLFlBQWEsQ0FBQyIsImZpbGUiOiJncm91cGJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi8uLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyBncm91cEJ5LCBHcm91cGVkQXN5bmNJdGVyYWJsZSB9IGZyb20gJy4uLy4uL2FzeW5jaXRlcmFibGUvZ3JvdXBieSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlLmdyb3VwYnlcIik7XG5pbXBvcnQgeyBpZGVudGl0eUFzeW5jIH0gZnJvbSAnLi4vLi4vaW50ZXJuYWwvaWRlbnRpdHknO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMyA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwuaWRlbnRpdHlcIik7XG5cbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5UHJvdG88VFNvdXJjZSwgVEtleT4oXG4gICAgdGhpczogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5Pik6IEFzeW5jSXRlcmFibGVYPEdyb3VwZWRBc3luY0l0ZXJhYmxlPFRLZXksIFRTb3VyY2U+PjtcbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5UHJvdG88VFNvdXJjZSwgVEtleSwgVFZhbHVlPihcbiAgICB0aGlzOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+LFxuICAgIGVsZW1lbnRTZWxlY3Rvcj86ICh2YWx1ZTogVFNvdXJjZSkgPT4gVFZhbHVlIHwgUHJvbWlzZTxUVmFsdWU+KTogQXN5bmNJdGVyYWJsZVg8R3JvdXBlZEFzeW5jSXRlcmFibGU8VEtleSwgVFZhbHVlPj47XG4vKipcbiAqIEBpZ25vcmVcbiAqIEB0ZW1wbGF0ZSBUU291cmNlLCBUS2V5LCBUVmFsdWVcbiAqIEB0aGlzIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn1cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSk6IChUS2V5fCFQcm9taXNlPFRLZXk+KX0ga2V5U2VsZWN0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSk6IChUVmFsdWV8IVByb21pc2U8VFZhbHVlPik9fSBlbGVtZW50U2VsZWN0b3JcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPCF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yLkdyb3VwZWRBc3luY0l0ZXJhYmxlPFRLZXksIFRWYWx1ZT4+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBCeVByb3RvPFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4oXG4gICAgdGhpczogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgICBlbGVtZW50U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVFZhbHVlIHwgUHJvbWlzZTxUVmFsdWU+ID0gaWRlbnRpdHlBc3luYyk6IEFzeW5jSXRlcmFibGVYPEdyb3VwZWRBc3luY0l0ZXJhYmxlPFRLZXksIFRWYWx1ZT4+IHtcbiAgcmV0dXJuIGdyb3VwQnk8VFNvdXJjZSwgVEtleSwgVFZhbHVlPih0aGlzLCBrZXlTZWxlY3RvciwgZWxlbWVudFNlbGVjdG9yKTtcbn1cblxuQXN5bmNJdGVyYWJsZVgucHJvdG90eXBlLmdyb3VwQnkgPSBncm91cEJ5UHJvdG87XG5cbmRlY2xhcmUgbW9kdWxlICcuLi8uLi9hc3luY2l0ZXJhYmxlJyB7XG4gIGludGVyZmFjZSBBc3luY0l0ZXJhYmxlWDxUPiB7XG4gICAgZ3JvdXBCeTogdHlwZW9mIGdyb3VwQnlQcm90bztcbiAgfVxufSJdfQ==