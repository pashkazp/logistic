goog.module('targets.es5.cls.add.iterable_operators.groupby'); exports = {}; var module = {id: 'targets/es5/cls/add/iterable-operators/groupby.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
var groupby_1 = goog.require('targets.es5.cls.iterable.groupby');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable.groupby");
var identity_1 = goog.require('targets.es5.cls.internal.identity');
var tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.identity");
/**
 * @ignore
 * @template TSource, TKey, TValue
 * @this {!Iterable<TSource>}
 * @param {function(TSource): TKey} keySelector
 * @param {function(TSource): TValue=} elementSelector
 * @return {!tsickle_forward_declare_1.IterableX<!tsickle_forward_declare_2.GroupedIterable<TKey, TValue>>}
 */
function groupByProto(keySelector, elementSelector) {
    if (elementSelector === void 0) { elementSelector = identity_1.identity; }
    return groupby_1.groupBy(this, keySelector, elementSelector);
}
exports.groupByProto = groupByProto;
iterable_1.IterableX.prototype.groupBy = groupByProto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZGQvaXRlcmFibGUtb3BlcmF0b3JzL2dyb3VwYnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILDJDQUxrQjtBQU1sQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsc0NBQXNDLENBQUMsQ0FObEQ7QUFPM0Msa0RBTmlDO0FBT2pDLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyw4Q0FBOEMsQ0FBQyxDQVBuQztBQVFsRSxvREFQaUI7QUFRakIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLCtDQUErQyxDQUFDLENBUm5EO0FBaUJuRDs7Ozs7OztHQU9HO0FBWkgsc0JBZUUsV0FicUMsRUFjckMsZUFic0Q7SUFhdEQsZ0NBQUEsRUFBQSxrQkFiNkMsbUJBQVM7SUFjdEQsTUFiTSxDQUFBLGlCQUFRLENBQXdCLElBQUksRUFBQyxXQUFZLEVBQUMsZUFBZ0IsQ0FBQyxDQUFDO0FBYzVFLENBYkM7QUFMRCxvQ0FLQztBQWVELG9CQWJTLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRSxZQUFhLENBQUMiLCJmaWxlIjoiZ3JvdXBieS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uLy4uL2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLml0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgZ3JvdXBCeSwgR3JvdXBlZEl0ZXJhYmxlIH0gZnJvbSAnLi4vLi4vaXRlcmFibGUvZ3JvdXBieSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZS5ncm91cGJ5XCIpO1xuaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi8uLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8zID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pbnRlcm5hbC5pZGVudGl0eVwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwQnlQcm90bzxUU291cmNlLCBUS2V5PihcbiAgdGhpczogSXRlcmFibGU8VFNvdXJjZT4sXG4gIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkpOiBJdGVyYWJsZVg8R3JvdXBlZEl0ZXJhYmxlPFRLZXksIFRTb3VyY2U+PjtcbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5UHJvdG88VFNvdXJjZSwgVEtleSwgVFZhbHVlPihcbiAgdGhpczogSXRlcmFibGU8VFNvdXJjZT4sXG4gIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXksXG4gIGVsZW1lbnRTZWxlY3Rvcj86ICh2YWx1ZTogVFNvdXJjZSkgPT4gVFZhbHVlKTogSXRlcmFibGVYPEdyb3VwZWRJdGVyYWJsZTxUS2V5LCBUVmFsdWU+Pjtcbi8qKlxuICogQGlnbm9yZVxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRLZXksIFRWYWx1ZVxuICogQHRoaXMgeyFJdGVyYWJsZTxUU291cmNlPn1cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSk6IFRLZXl9IGtleVNlbGVjdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UpOiBUVmFsdWU9fSBlbGVtZW50U2VsZWN0b3JcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDwhdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMi5Hcm91cGVkSXRlcmFibGU8VEtleSwgVFZhbHVlPj59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5UHJvdG88VFNvdXJjZSwgVEtleSwgVFZhbHVlPihcbiAgdGhpczogSXRlcmFibGU8VFNvdXJjZT4sXG4gIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXksXG4gIGVsZW1lbnRTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUVmFsdWUgPSBpZGVudGl0eSk6IEl0ZXJhYmxlWDxHcm91cGVkSXRlcmFibGU8VEtleSwgVFZhbHVlPj4ge1xuICByZXR1cm4gZ3JvdXBCeTxUU291cmNlLCBUS2V5LCBUVmFsdWU+KHRoaXMsIGtleVNlbGVjdG9yLCBlbGVtZW50U2VsZWN0b3IpO1xufVxuXG5JdGVyYWJsZVgucHJvdG90eXBlLmdyb3VwQnkgPSBncm91cEJ5UHJvdG87XG5cbmRlY2xhcmUgbW9kdWxlICcuLi8uLi9pdGVyYWJsZScge1xuICBpbnRlcmZhY2UgSXRlcmFibGVYPFQ+IHtcbiAgICBncm91cEJ5OiB0eXBlb2YgZ3JvdXBCeVByb3RvO1xuICB9XG59Il19