goog.module('targets.es5.cls.iterable.reduce'); exports = {}; var module = {id: 'targets/es5/cls/iterable/reduce.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @template T, R
 * @param {!Iterable<T>} source
 * @param {function(R, T, number): R} fn
 * @param {(T|R)=} seed
 * @return {(T|R)}
 */
function reduce(source, fn, seed) {
    var /** @type {boolean} */ hasSeed = arguments.length === 3;
    var /** @type {number} */ i = 0, /** @type {boolean} */ hasValue = false;
    try {
        for (var source_1 = __values(source), source_1_1 = source_1.next(); !source_1_1.done; source_1_1 = source_1.next()) {
            var item = source_1_1.value;
            if (hasValue || (hasValue = hasSeed)) {
                seed = fn(/** @type {R} */ (seed), item, i++);
            }
            else {
                seed = item;
                hasValue = true;
                i++;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (source_1_1 && !source_1_1.done && (_a = source_1.return)) _a.call(source_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    if (hasSeed && !hasValue) {
        return ((seed));
    }
    if (!hasValue) {
        throw new Error('Sequence contains no elements');
    }
    return ((seed));
    var e_1, _a;
}
exports.reduce = reduce;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9yZWR1Y2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUtIOzs7Ozs7R0FNRztBQVZILGdCQVlNLE1BWG1CLEVBWW5CLEVBWHNDLEVBWXRDLElBWFk7SUFZaEIsSUFBTSxzQkFYRCxDQUFBLE9BQVEsR0FBRSxTQUFVLENBQUMsTUFBTSxLQUFJLENBQUUsQ0FBQztJQVl2QyxJQUFJLHFCQVhELENBQUEsQ0FBRSxHQUFFLENBQUUsRUFBQSxzQkFBQyxDQUFBLFFBQVMsR0FBRSxLQUFNLENBQUM7O1FBWTVCLEdBQUcsQ0FBQyxDQVhZLElBQUEsV0FBQSxTQUFBLE1BQU8sQ0FBQSw4QkFBQTtZQUFsQixJQUFHLElBQUssbUJBQUE7WUFZWCxFQUFFLENBQUMsQ0FYQyxRQUFRLElBQUcsQ0FBRSxRQUFRLEdBQUUsT0FBUSxDQUFDLENBQUMsQ0FBQSxDQUFFO2dCQVlyQyxJQVhJLEdBQUUsRUFBRyxDQUFBLGdCQUFBLENBQUEsQ0FBSSxJQUFBLENBQUksRUFBQyxJQUFLLEVBQUMsQ0FBRSxFQUFFLENBQUMsQ0FBQztZQVloQyxDQVhDO1lBQUEsSUFBSyxDQUFBLENBQUU7Z0JBWU4sSUFYSSxHQUFFLElBQUssQ0FBQztnQkFZWixRQVhRLEdBQUUsSUFBSyxDQUFDO2dCQVloQixDQVhDLEVBQUUsQ0FBQztZQVlOLENBWEM7U0FDRjs7Ozs7Ozs7O0lBYUQsRUFBRSxDQUFDLENBWEMsT0FBTyxJQUFHLENBQUUsUUFBUSxDQUFDLENBQUEsQ0FBRTtRQVl6QixNQUFNLENBQXFCLENBQUMsQ0FYdEIsSUFBQSxDQUFBLENBQU0sQ0FBQztJQVlmLENBWEM7SUFhRCxFQUFFLENBQUMsQ0FYQyxDQUFDLFFBQVEsQ0FBQyxDQUFBLENBQUU7UUFZZCxNQVhLLElBQUksS0FBTSxDQUFDLCtCQUErQixDQUFDLENBQUM7SUFZbkQsQ0FYQztJQWFELE1BQU0sQ0FBcUIsQ0FBQyxDQVh0QixJQUFBLENBQUEsQ0FBTSxDQUFDOztBQVlmLENBWEM7QUF6QkQsd0JBeUJDIiwiZmlsZSI6InJlZHVjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmV4cG9ydCBmdW5jdGlvbiByZWR1Y2U8VD4oc291cmNlOiBJdGVyYWJsZTxUPiwgYWNjdW11bGF0b3I6IChhY2M6IFQsIHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBULCBzZWVkPzogVCk6IFQ7XG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlPFQ+KHNvdXJjZTogSXRlcmFibGU8VD4sIGFjY3VtdWxhdG9yOiAoYWNjOiBUW10sIHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBUW10sIHNlZWQ/OiBUW10pOiBUW107XG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlPFQsIFI+KHNvdXJjZTogSXRlcmFibGU8VD4sIGFjY3VtdWxhdG9yOiAoYWNjOiBSLCB2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gUiwgc2VlZD86IFIpOiBSO1xuLyoqXG4gKiBAdGVtcGxhdGUgVCwgUlxuICogQHBhcmFtIHshSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihSLCBULCBudW1iZXIpOiBSfSBmblxuICogQHBhcmFtIHsoVHxSKT19IHNlZWRcbiAqIEByZXR1cm4geyhUfFIpfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVkdWNlPFQsIFI+KFxuICAgICAgc291cmNlOiBJdGVyYWJsZTxUPixcbiAgICAgIGZuOiAoYWNjOiBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSLFxuICAgICAgc2VlZD86IFQgfCBSKTogVCB8IFIge1xuICBjb25zdCAvKiogQHR5cGUge2Jvb2xlYW59ICovIGhhc1NlZWQgPSBhcmd1bWVudHMubGVuZ3RoID09PSAzO1xuICBsZXQgLyoqIEB0eXBlIHtudW1iZXJ9ICovIGkgPSAwLCAvKiogQHR5cGUge2Jvb2xlYW59ICovIGhhc1ZhbHVlID0gZmFsc2U7XG4gIGZvciAobGV0IC8qKiBAdHlwZSB7VH0gKi8gaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBpZiAoaGFzVmFsdWUgfHwgKGhhc1ZhbHVlID0gaGFzU2VlZCkpIHtcbiAgICAgIHNlZWQgPSBmbiggLyoqIEB0eXBlIHtSfSAqLygoPFI+c2VlZCkpLCBpdGVtLCBpKyspO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWVkID0gaXRlbTtcbiAgICAgIGhhc1ZhbHVlID0gdHJ1ZTtcbiAgICAgIGkrKztcbiAgICB9XG4gIH1cblxuICBpZiAoaGFzU2VlZCAmJiAhaGFzVmFsdWUpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHsoVHxSKX0gKi8oKCBzZWVkKSk7XG4gIH1cblxuICBpZiAoIWhhc1ZhbHVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTZXF1ZW5jZSBjb250YWlucyBubyBlbGVtZW50cycpO1xuICB9XG5cbiAgcmV0dXJuIC8qKiBAdHlwZSB7KFR8Uil9ICovKCggc2VlZCkpO1xufVxuIl19