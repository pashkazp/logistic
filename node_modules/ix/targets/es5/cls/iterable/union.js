goog.module('targets.es5.cls.iterable.union'); exports = {}; var module = {id: 'targets/es5/cls/iterable/union.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
var arrayindexof_1 = goog.require('targets.es5.cls.internal.arrayindexof');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.arrayindexof");
var comparer_1 = goog.require('targets.es5.cls.internal.comparer');
var tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.comparer");
/**
 * @template TSource
 */
var UnionIterable = (function (_super) {
    __extends(UnionIterable, _super);
    /**
     * @param {!Iterable<TSource>} left
     * @param {!Iterable<TSource>} right
     * @param {function(TSource, TSource): boolean} comparer
     */
    function UnionIterable(left, right, comparer) {
        var _this = _super.call(this) || this;
        _this._left = left;
        _this._right = right;
        _this._comparer = comparer;
        return _this;
    }
    /**
     * @return {!IterableIterator<TSource>}
     */
    UnionIterable.prototype[Symbol.iterator] = function () {
        var map, _a, _b, lItem, e_1_1, _c, _d, rItem, e_2_1, e_1, _e, e_2, _f;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    map = [];
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 6, 7, 8]);
                    _a = __values(this._left), _b = _a.next();
                    _g.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 5];
                    lItem = _b.value;
                    if (!(arrayindexof_1.arrayIndexOf(map, lItem, this._comparer) === -1)) return [3 /*break*/, 4];
                    map.push(lItem);
                    return [4 /*yield*/, lItem];
                case 3:
                    _g.sent();
                    _g.label = 4;
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _g.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_e = _a.return)) _e.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8:
                    _g.trys.push([8, 13, 14, 15]);
                    _c = __values(this._right), _d = _c.next();
                    _g.label = 9;
                case 9:
                    if (!!_d.done) return [3 /*break*/, 12];
                    rItem = _d.value;
                    if (!(arrayindexof_1.arrayIndexOf(map, rItem, this._comparer) === -1)) return [3 /*break*/, 11];
                    map.push(rItem);
                    return [4 /*yield*/, rItem];
                case 10:
                    _g.sent();
                    _g.label = 11;
                case 11:
                    _d = _c.next();
                    return [3 /*break*/, 9];
                case 12: return [3 /*break*/, 15];
                case 13:
                    e_2_1 = _g.sent();
                    e_2 = { error: e_2_1 };
                    return [3 /*break*/, 15];
                case 14:
                    try {
                        if (_d && !_d.done && (_f = _c.return)) _f.call(_c);
                    }
                    finally { if (e_2) throw e_2.error; }
                    return [7 /*endfinally*/];
                case 15: return [2 /*return*/];
            }
        });
    };
    return UnionIterable;
}(iterable_1.IterableX));
function UnionIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<TSource>} */
    UnionIterable.prototype._left;
    /** @type {!Iterable<TSource>} */
    UnionIterable.prototype._right;
    /** @type {function(TSource, TSource): boolean} */
    UnionIterable.prototype._comparer;
}
/**
 * @template TSource
 * @param {!Iterable<TSource>} left
 * @param {!Iterable<TSource>} right
 * @param {function(TSource, TSource): boolean=} comparer
 * @return {!tsickle_forward_declare_1.IterableX<TSource>}
 */
function union(left, right, comparer) {
    if (comparer === void 0) { comparer = comparer_1.comparer; }
    return new UnionIterable(left, right, comparer);
}
exports.union = union;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS91bmlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsd0NBTGtCO0FBTWxCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQU5yRDtBQU94Qyx5REFOcUI7QUFPckIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1EQUFtRCxDQUFDLENBUGxEO0FBUXhELGlEQVBvQztBQVFwQyxJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsK0NBQStDLENBQUMsQ0FBQztBQUN2Rzs7R0FFRztBQVRIO0lBQW9DLGlDQUFtQjtJQWN2RDs7OztPQUlHO0lBYkQsdUJBQVksSUFBdUIsRUFBQyxLQUF5QixFQUFDLFFBQThDO1FBQTVHLFlBZUUsaUJBZE8sU0FrQlI7UUFIQyxLQWRJLENBQUMsS0FBSyxHQUFFLElBQUssQ0FBQztRQWVsQixLQWRJLENBQUMsTUFBTSxHQUFFLEtBQU0sQ0FBQztRQWVwQixLQWRJLENBQUMsU0FBUyxHQUFFLFFBQVMsQ0FBQzs7SUFlNUIsQ0FBQztJQUNIOztPQUVHO0lBZkEsd0JBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ0ssR0FBSSxHQUFFLEVBQUcsQ0FBQzs7OztvQkFDSSxLQUFBLFNBQUEsSUFBSyxDQUFDLEtBQUssQ0FBQTs7OztvQkFBcEIsS0FBTTt5QkFDUixDQUFBLDJCQUFZLENBQUMsR0FBRyxFQUFDLEtBQU0sRUFBQyxJQUFLLENBQUMsU0FBUyxDQUFDLEtBQUksQ0FBRSxDQUFDLENBQUEsRUFBL0Msd0JBQStDO29CQWlCakQsR0FoQkcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBaUJoQixxQkFoQkssS0FBTSxFQUFBOztvQkFnQlgsU0FoQlcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUlDLEtBQUEsU0FBQSxJQUFLLENBQUMsTUFBTSxDQUFBOzs7O29CQUFyQixLQUFNO3lCQUNSLENBQUEsMkJBQVksQ0FBQyxHQUFHLEVBQUMsS0FBTSxFQUFDLElBQUssQ0FBQyxTQUFTLENBQUMsS0FBSSxDQUFFLENBQUMsQ0FBQSxFQUEvQyx5QkFBK0M7b0JBaUJqRCxHQWhCRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFpQmhCLHFCQWhCSyxLQUFNLEVBQUE7O29CQWdCWCxTQWhCVyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR2pCO0lBQ0gsb0JBQUE7QUFBQSxDQTVCQSxBQTRCQSxDQTVCb0Msb0JBQVUsR0E0QjlDO0FBa0JBO0lBQ0EsaUNBQWlDO0lBQ2pDLGFBQWEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO0lBQzlCLGlDQUFpQztJQUNqQyxhQUFhLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUMvQixrREFBa0Q7SUFDbEQsYUFBYSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7QUFDbEMsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQS9CSCxlQWlDSSxJQWhDdUIsRUFpQ3ZCLEtBaEN3QixFQWlDeEIsUUFoQytEO0lBZ0MvRCx5QkFBQSxFQUFBLFdBaEMrQyxtQkFBZ0I7SUFpQ2pFLE1BaENNLENBQUEsSUFBSSxhQUFjLENBQVUsSUFBSSxFQUFDLEtBQU0sRUFBQyxRQUFTLENBQUMsQ0FBQztBQWlDM0QsQ0FoQ0M7QUFMRCxzQkFLQyIsImZpbGUiOiJ1bmlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLml0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgYXJyYXlJbmRleE9mIH0gZnJvbSAnLi4vaW50ZXJuYWwvYXJyYXlpbmRleG9mJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmFycmF5aW5kZXhvZlwiKTtcbmltcG9ydCB7IGNvbXBhcmVyIGFzIGRlZmF1bHRDb21wYXJlciB9IGZyb20gJy4uL2ludGVybmFsL2NvbXBhcmVyJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzMgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmNvbXBhcmVyXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBVbmlvbkl0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX2xlZnQ6IEl0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfcmlnaHQ6IEl0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuO1xuLyoqXG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUU291cmNlPn0gbGVmdFxuICogQHBhcmFtIHshSXRlcmFibGU8VFNvdXJjZT59IHJpZ2h0XG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UsIFRTb3VyY2UpOiBib29sZWFufSBjb21wYXJlclxuICovXG5jb25zdHJ1Y3RvcihsZWZ0OiBJdGVyYWJsZTxUU291cmNlPiwgcmlnaHQ6IEl0ZXJhYmxlPFRTb3VyY2U+LCBjb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2xlZnQgPSBsZWZ0O1xuICAgIHRoaXMuX3JpZ2h0ID0gcmlnaHQ7XG4gICAgdGhpcy5fY29tcGFyZXIgPSBjb21wYXJlcjtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshSXRlcmFibGVJdGVyYXRvcjxUU291cmNlPn1cbiAqL1xuKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGxldCAvKiogQHR5cGUgeyFBcnJheTw/Pn0gKi8gbWFwID0gW107XG4gICAgZm9yIChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBsSXRlbSBvZiB0aGlzLl9sZWZ0KSB7XG4gICAgICBpZiAoYXJyYXlJbmRleE9mKG1hcCwgbEl0ZW0sIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgbWFwLnB1c2gobEl0ZW0pO1xuICAgICAgICB5aWVsZCBsSXRlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIHJJdGVtIG9mIHRoaXMuX3JpZ2h0KSB7XG4gICAgICBpZiAoYXJyYXlJbmRleE9mKG1hcCwgckl0ZW0sIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgbWFwLnB1c2gockl0ZW0pO1xuICAgICAgICB5aWVsZCBySXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gVW5pb25JdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshSXRlcmFibGU8VFNvdXJjZT59ICovXG5Vbmlvbkl0ZXJhYmxlLnByb3RvdHlwZS5fbGVmdDtcbi8qKiBAdHlwZSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuVW5pb25JdGVyYWJsZS5wcm90b3R5cGUuX3JpZ2h0O1xuLyoqIEB0eXBlIHtmdW5jdGlvbihUU291cmNlLCBUU291cmNlKTogYm9vbGVhbn0gKi9cblVuaW9uSXRlcmFibGUucHJvdG90eXBlLl9jb21wYXJlcjtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICogQHBhcmFtIHshSXRlcmFibGU8VFNvdXJjZT59IGxlZnRcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSByaWdodFxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlLCBUU291cmNlKTogYm9vbGVhbj19IGNvbXBhcmVyXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5JdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bmlvbjxUU291cmNlPihcbiAgICBsZWZ0OiBJdGVyYWJsZTxUU291cmNlPixcbiAgICByaWdodDogSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuID0gZGVmYXVsdENvbXBhcmVyKTogSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBVbmlvbkl0ZXJhYmxlPFRTb3VyY2U+KGxlZnQsIHJpZ2h0LCBjb21wYXJlcik7XG59XG4iXX0=