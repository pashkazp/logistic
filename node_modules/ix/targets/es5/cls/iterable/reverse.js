goog.module('targets.es5.cls.iterable.reverse'); exports = {}; var module = {id: 'targets/es5/cls/iterable/reverse.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
var ReverseIterator = (function (_super) {
    __extends(ReverseIterator, _super);
    /**
     * @param {!Iterable<TSource>} source
     */
    function ReverseIterator(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!IterableIterator<TSource>}
     */
    ReverseIterator.prototype[Symbol.iterator] = function () {
        var results, _a, _b, item, e_1, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    results = [];
                    try {
                        for (_a = __values(this._source), _b = _a.next(); !_b.done; _b = _a.next()) {
                            item = _b.value;
                            results.unshift(item);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    return [5 /*yield**/, __values(results)];
                case 1:
                    _d.sent();
                    return [2 /*return*/];
            }
        });
    };
    return ReverseIterator;
}(iterable_1.IterableX));
function ReverseIterator_tsickle_Closure_declarations() {
    /** @type {!Iterable<TSource>} */
    ReverseIterator.prototype._source;
}
/**
 * @template TSource
 * @param {!Iterable<TSource>} source
 * @return {!tsickle_forward_declare_1.IterableX<TSource>}
 */
function reverse(source) {
    return new ReverseIterator(source);
}
exports.reverse = reverse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9yZXZlcnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCx3Q0FMa0I7QUFNbEIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7QUFDOUY7O0dBRUc7QUFQSDtJQUFzQyxtQ0FBbUI7SUFVekQ7O09BRUc7SUFURCx5QkFBWSxNQUF5QjtRQUFyQyxZQVdFLGlCQVZPLFNBWVI7UUFEQyxLQVZJLENBQUMsT0FBTyxHQUFFLE1BQU8sQ0FBQzs7SUFXeEIsQ0FBQztJQUNIOztPQUVHO0lBWEEsMEJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ0ssT0FBUSxHQUFFLEVBQUcsQ0FBQzs7d0JBYWpCLEdBQUcsQ0FBQyxDQVpZLEtBQUEsU0FBQSxJQUFLLENBQUMsT0FBTyxDQUFBOzRCQUFyQixJQUFLOzRCQWFYLE9BWk8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7eUJBQ3ZCOzs7Ozs7Ozs7b0JBYUQsc0JBQUEsU0FaTSxPQUFRLENBQUEsRUFBQTs7b0JBWWQsU0FaYyxDQUFDOzs7O0tBQ2hCO0lBQ0gsc0JBQUE7QUFBQSxDQWZBLEFBZUEsQ0Fmc0Msb0JBQVUsR0FlaEQ7QUFjQTtJQUNBLGlDQUFpQztJQUNqQyxlQUFlLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUNsQyxDQUFDO0FBRUQ7Ozs7R0FJRztBQXJCSCxpQkFBaUMsTUFBeUI7SUF1QnhELE1BdEJNLENBQUEsSUFBSSxlQUFnQixDQUFVLE1BQU0sQ0FBQyxDQUFDO0FBdUI5QyxDQXRCQztBQUZELDBCQUVDIiwiZmlsZSI6InJldmVyc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgUmV2ZXJzZUl0ZXJhdG9yPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT47XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG4qW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7IUFycmF5PD8+fSAqLyByZXN1bHRzID0gW107XG4gICAgZm9yIChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgcmVzdWx0cy51bnNoaWZ0KGl0ZW0pO1xuICAgIH1cbiAgICB5aWVsZCogcmVzdWx0cztcbiAgfVxufVxuXG5mdW5jdGlvbiBSZXZlcnNlSXRlcmF0b3JfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuUmV2ZXJzZUl0ZXJhdG9yLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5JdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXZlcnNlPFRTb3VyY2U+KHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4pOiBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFJldmVyc2VJdGVyYXRvcjxUU291cmNlPihzb3VyY2UpO1xufVxuIl19