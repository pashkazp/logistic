goog.module('targets.es5.cls.iterable.generate'); exports = {}; var module = {id: 'targets/es5/cls/iterable/generate.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TState, TResult
 */
var GenerateIterable = (function (_super) {
    __extends(GenerateIterable, _super);
    /**
     * @param {TState} initialState
     * @param {function(TState): boolean} condition
     * @param {function(TState): TState} iterate
     * @param {function(TState): TResult} resultSelector
     */
    function GenerateIterable(initialState, condition, iterate, resultSelector) {
        var _this = _super.call(this) || this;
        _this._initialState = initialState;
        _this._condition = condition;
        _this._iterate = iterate;
        _this._resultSelector = resultSelector;
        return _this;
    }
    /**
     * @return {!IterableIterator<TResult>}
     */
    GenerateIterable.prototype[Symbol.iterator] = function () {
        var i;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    i = this._initialState;
                    _a.label = 1;
                case 1:
                    if (!this._condition(i)) return [3 /*break*/, 4];
                    return [4 /*yield*/, this._resultSelector(i)];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    i = this._iterate(i);
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    return GenerateIterable;
}(iterable_1.IterableX));
function GenerateIterable_tsickle_Closure_declarations() {
    /** @type {TState} */
    GenerateIterable.prototype._initialState;
    /** @type {function(TState): boolean} */
    GenerateIterable.prototype._condition;
    /** @type {function(TState): TState} */
    GenerateIterable.prototype._iterate;
    /** @type {function(TState): TResult} */
    GenerateIterable.prototype._resultSelector;
}
/**
 * @template TState, TResult
 * @param {TState} initialState
 * @param {function(TState): boolean} condition
 * @param {function(TState): TState} iterate
 * @param {function(TState): TResult} resultSelector
 * @return {!tsickle_forward_declare_1.IterableX<TResult>}
 */
function generate(initialState, condition, iterate, resultSelector) {
    return new GenerateIterable(initialState, condition, iterate, resultSelector);
}
exports.generate = generate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9nZW5lcmF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsd0NBTGtCO0FBTWxCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQzlGOztHQUVHO0FBUEg7SUFBK0Msb0NBQW1CO0lBYWxFOzs7OztPQUtHO0lBWkQsMEJBY0ksWUFib0IsRUFjcEIsU0FicUMsRUFjckMsT0Fia0MsRUFjbEMsY0FiMEM7UUFKOUMsWUFrQkUsaUJBYk8sU0FrQlI7UUFKQyxLQWJJLENBQUMsYUFBYSxHQUFFLFlBQWEsQ0FBQztRQWNsQyxLQWJJLENBQUMsVUFBVSxHQUFFLFNBQVUsQ0FBQztRQWM1QixLQWJJLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQztRQWN4QixLQWJJLENBQUMsZUFBZSxHQUFFLGNBQWUsQ0FBQzs7SUFjeEMsQ0FBQztJQUNIOztPQUVHO0lBZEEsMkJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ1UsQ0FBRSxHQUFFLElBQUssQ0FBQyxhQUFhOzs7eUJBQUMsSUFBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7b0JBZ0JqRCxxQkFmSyxJQUFLLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxFQUFBOztvQkFlN0IsU0FmNkIsQ0FBQzs7O29CQURvQixDQUFFLEdBQUUsSUFBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQTs7Ozs7S0FHMUU7SUFDSCx1QkFBQTtBQUFBLENBdkJBLEFBdUJBLENBdkIrQyxvQkFBVSxHQXVCekQ7QUFpQkE7SUFDQSxxQkFBcUI7SUFDckIsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztJQUN6Qyx3Q0FBd0M7SUFDeEMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztJQUN0Qyx1Q0FBdUM7SUFDdkMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztJQUNwQyx3Q0FBd0M7SUFDeEMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQztBQUMzQyxDQUFDO0FBRUQ7Ozs7Ozs7R0FPRztBQWpDSCxrQkFtQ0ksWUFsQ29CLEVBbUNwQixTQWxDcUMsRUFtQ3JDLE9BbENrQyxFQW1DbEMsY0FsQzBDO0lBbUM1QyxNQWxDTSxDQUFBLElBQUksZ0JBQWlCLENBQWtCLFlBQVksRUFBQyxTQUFVLEVBQUMsT0FBUSxFQUFDLGNBQWUsQ0FBQyxDQUFDO0FBbUNqRyxDQWxDQztBQU5ELDRCQU1DIiwiZmlsZSI6ImdlbmVyYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaXRlcmFibGVcIik7XG4vKipcbiAqIEB0ZW1wbGF0ZSBUU3RhdGUsIFRSZXN1bHRcbiAqL1xuY2xhc3MgR2VuZXJhdGVJdGVyYWJsZTxUU3RhdGUsIFRSZXN1bHQ+IGV4dGVuZHMgSXRlcmFibGVYPFRSZXN1bHQ+IHtcbnByaXZhdGUgX2luaXRpYWxTdGF0ZTogVFN0YXRlO1xucHJpdmF0ZSBfY29uZGl0aW9uOiAodmFsdWU6IFRTdGF0ZSkgPT4gYm9vbGVhbjtcbnByaXZhdGUgX2l0ZXJhdGU6ICh2YWx1ZTogVFN0YXRlKSA9PiBUU3RhdGU7XG5wcml2YXRlIF9yZXN1bHRTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IFRSZXN1bHQ7XG4vKipcbiAqIEBwYXJhbSB7VFN0YXRlfSBpbml0aWFsU3RhdGVcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogYm9vbGVhbn0gY29uZGl0aW9uXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTdGF0ZSk6IFRTdGF0ZX0gaXRlcmF0ZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiBUUmVzdWx0fSByZXN1bHRTZWxlY3RvclxuICovXG5jb25zdHJ1Y3RvcihcbiAgICAgIGluaXRpYWxTdGF0ZTogVFN0YXRlLFxuICAgICAgY29uZGl0aW9uOiAodmFsdWU6IFRTdGF0ZSkgPT4gYm9vbGVhbixcbiAgICAgIGl0ZXJhdGU6ICh2YWx1ZTogVFN0YXRlKSA9PiBUU3RhdGUsXG4gICAgICByZXN1bHRTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IFRSZXN1bHQpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2luaXRpYWxTdGF0ZSA9IGluaXRpYWxTdGF0ZTtcbiAgICB0aGlzLl9jb25kaXRpb24gPSBjb25kaXRpb247XG4gICAgdGhpcy5faXRlcmF0ZSA9IGl0ZXJhdGU7XG4gICAgdGhpcy5fcmVzdWx0U2VsZWN0b3IgPSByZXN1bHRTZWxlY3RvcjtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshSXRlcmFibGVJdGVyYXRvcjxUUmVzdWx0Pn1cbiAqL1xuKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IC8qKiBAdHlwZSB7VFN0YXRlfSAqLyBpID0gdGhpcy5faW5pdGlhbFN0YXRlOyB0aGlzLl9jb25kaXRpb24oaSk7IGkgPSB0aGlzLl9pdGVyYXRlKGkpKSB7XG4gICAgICB5aWVsZCB0aGlzLl9yZXN1bHRTZWxlY3RvcihpKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gR2VuZXJhdGVJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHtUU3RhdGV9ICovXG5HZW5lcmF0ZUl0ZXJhYmxlLnByb3RvdHlwZS5faW5pdGlhbFN0YXRlO1xuLyoqIEB0eXBlIHtmdW5jdGlvbihUU3RhdGUpOiBib29sZWFufSAqL1xuR2VuZXJhdGVJdGVyYWJsZS5wcm90b3R5cGUuX2NvbmRpdGlvbjtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFN0YXRlKTogVFN0YXRlfSAqL1xuR2VuZXJhdGVJdGVyYWJsZS5wcm90b3R5cGUuX2l0ZXJhdGU7XG4vKiogQHR5cGUge2Z1bmN0aW9uKFRTdGF0ZSk6IFRSZXN1bHR9ICovXG5HZW5lcmF0ZUl0ZXJhYmxlLnByb3RvdHlwZS5fcmVzdWx0U2VsZWN0b3I7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRTdGF0ZSwgVFJlc3VsdFxuICogQHBhcmFtIHtUU3RhdGV9IGluaXRpYWxTdGF0ZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiBib29sZWFufSBjb25kaXRpb25cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogVFN0YXRlfSBpdGVyYXRlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTdGF0ZSk6IFRSZXN1bHR9IHJlc3VsdFNlbGVjdG9yXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5JdGVyYWJsZVg8VFJlc3VsdD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZTxUU3RhdGUsIFRSZXN1bHQ+KFxuICAgIGluaXRpYWxTdGF0ZTogVFN0YXRlLFxuICAgIGNvbmRpdGlvbjogKHZhbHVlOiBUU3RhdGUpID0+IGJvb2xlYW4sXG4gICAgaXRlcmF0ZTogKHZhbHVlOiBUU3RhdGUpID0+IFRTdGF0ZSxcbiAgICByZXN1bHRTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IFRSZXN1bHQpOiBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IEdlbmVyYXRlSXRlcmFibGU8VFN0YXRlLCBUUmVzdWx0Pihpbml0aWFsU3RhdGUsIGNvbmRpdGlvbiwgaXRlcmF0ZSwgcmVzdWx0U2VsZWN0b3IpO1xufVxuIl19