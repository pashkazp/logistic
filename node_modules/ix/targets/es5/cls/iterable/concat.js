goog.module('targets.es5.cls.iterable.concat'); exports = {}; var module = {id: 'targets/es5/cls/iterable/concat.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
var ConcatIterable = (function (_super) {
    __extends(ConcatIterable, _super);
    /**
     * @param {!Iterable<!Iterable<TSource>>} source
     */
    function ConcatIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!IterableIterator<TSource>}
     */
    ConcatIterable.prototype[Symbol.iterator] = function () {
        var _a, _b, outer, e_1_1, e_1, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _d.trys.push([0, 5, 6, 7]);
                    _a = __values(this._source), _b = _a.next();
                    _d.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 4];
                    outer = _b.value;
                    return [5 /*yield**/, __values(outer)];
                case 2:
                    _d.sent();
                    _d.label = 3;
                case 3:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 4: return [3 /*break*/, 7];
                case 5:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 7];
                case 6:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 7: return [2 /*return*/];
            }
        });
    };
    return ConcatIterable;
}(iterable_1.IterableX));
function ConcatIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<!Iterable<TSource>>} */
    ConcatIterable.prototype._source;
}
/**
 * Concatenates the input sequences.
 * @template TSource
 * @param {!Iterable<!Iterable<TSource>>} source
 * @return {!tsickle_forward_declare_1.IterableX<TSource>}
 */
function concatAll(source) {
    return new ConcatIterable(source);
}
exports.concatAll = concatAll;
/**
 * Concatenates the input sequences.
 * @template T
 * @param {!Iterable<T>} source
 * @param {...!Iterable<T>} args
 * @return {!tsickle_forward_declare_1.IterableX<T>}
 */
function concat(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return new ConcatIterable(__spread([source], args));
}
exports.concat = concat;
/**
 * Concatenates the input sequences.
 * @template T
 * @param {...!Iterable<T>} args
 * @return {!tsickle_forward_declare_1.IterableX<T>}
 */
function concatStatic() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return new ConcatIterable(args);
}
exports.concatStatic = concatStatic;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9jb25jYXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILHdDQUxrQjtBQU1sQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsc0NBQXNDLENBQUMsQ0FBQztBQUM5Rjs7R0FFRztBQVBIO0lBQXFDLGtDQUFtQjtJQVV4RDs7T0FFRztJQVRELHdCQUFZLE1BQW1DO1FBQS9DLFlBV0UsaUJBVk8sU0FZUjtRQURDLEtBVkksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDOztJQVd4QixDQUFDO0lBQ0g7O09BRUc7SUFYQSx5QkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQWxCOzs7Ozs7b0JBQ21CLEtBQUEsU0FBQSxJQUFLLENBQUMsT0FBTyxDQUFBOzs7O29CQUF0QixLQUFNO29CQUFtQixzQkFBQSxTQUFPLEtBQU0sQ0FBQSxFQUFBOztvQkFBYixTQUFhLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FDaEQ7SUFDSCxxQkFBQTtBQUFBLENBWEEsQUFXQSxDQVhxQyxvQkFBVSxHQVcvQztBQWNBO0lBQ0EsNENBQTRDO0lBQzVDLGNBQWMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQ2pDLENBQUM7QUFFRDs7Ozs7R0FLRztBQWpCSCxtQkFBbUMsTUFBbUM7SUFtQnBFLE1BbEJNLENBQUEsSUFBSSxjQUFlLENBQVUsTUFBTSxDQUFDLENBQUM7QUFtQjdDLENBQUM7QUFwQkQsOEJBb0JDO0FBQ0Q7Ozs7OztHQU1HO0FBakJILGdCQUEwQixNQUFtQjtJQUFDLGNBQXVCO1NBQXZCLFVBQXVCLEVBQXZCLHFCQUF1QixFQUF2QixJQUF1QjtRQUF2Qiw2QkFBdUI7O0lBbUJuRSxNQWxCTSxDQUFBLElBQUksY0FBZSxXQUFFLE1BQU0sR0FBSyxJQUFJLEVBQUUsQ0FBQztBQW1CL0MsQ0FBQztBQXBCRCx3QkFvQkM7QUFDRDs7Ozs7R0FLRztBQWpCSDtJQUFnQyxjQUFzQjtTQUF0QixVQUFzQixFQUF0QixxQkFBc0IsRUFBdEIsSUFBc0I7UUFBdEIseUJBQXNCOztJQW1CcEQsTUFsQk0sQ0FBQSxJQUFJLGNBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQW1CbEMsQ0FsQkM7QUFGRCxvQ0FFQyIsImZpbGUiOiJjb25jYXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgQ29uY2F0SXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxJdGVyYWJsZTxUU291cmNlPj47XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPCFJdGVyYWJsZTxUU291cmNlPj59IHNvdXJjZVxuICovXG5jb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPEl0ZXJhYmxlPFRTb3VyY2U+Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG4qW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgZm9yIChsZXQgLyoqIEB0eXBlIHshSXRlcmFibGU8VFNvdXJjZT59ICovIG91dGVyIG9mIHRoaXMuX3NvdXJjZSkgeyB5aWVsZCogb3V0ZXI7IH1cbiAgfVxufVxuXG5mdW5jdGlvbiBDb25jYXRJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshSXRlcmFibGU8IUl0ZXJhYmxlPFRTb3VyY2U+Pn0gKi9cbkNvbmNhdEl0ZXJhYmxlLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIENvbmNhdGVuYXRlcyB0aGUgaW5wdXQgc2VxdWVuY2VzLlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPCFJdGVyYWJsZTxUU291cmNlPj59IHNvdXJjZVxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuSXRlcmFibGVYPFRTb3VyY2U+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0QWxsPFRTb3VyY2U+KHNvdXJjZTogSXRlcmFibGU8SXRlcmFibGU8VFNvdXJjZT4+KTogSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBDb25jYXRJdGVyYWJsZTxUU291cmNlPihzb3VyY2UpO1xufVxuLyoqXG4gKiBDb25jYXRlbmF0ZXMgdGhlIGlucHV0IHNlcXVlbmNlcy5cbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUPn0gc291cmNlXG4gKiBAcGFyYW0gey4uLiFJdGVyYWJsZTxUPn0gYXJnc1xuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0PFQ+KHNvdXJjZTogSXRlcmFibGU8VD4sIC4uLmFyZ3M6IEl0ZXJhYmxlPFQ+W10pOiBJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IENvbmNhdEl0ZXJhYmxlKFtzb3VyY2UsIC4uLmFyZ3NdKTtcbn1cbi8qKlxuICogQ29uY2F0ZW5hdGVzIHRoZSBpbnB1dCBzZXF1ZW5jZXMuXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHsuLi4hSXRlcmFibGU8VD59IGFyZ3NcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdFN0YXRpYzxUPiguLi5hcmdzOiBJdGVyYWJsZTxUPltdKTogSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBDb25jYXRJdGVyYWJsZShhcmdzKTtcbn1cbiJdfQ==