goog.module('targets.es5.cls.iterable.of'); exports = {}; var module = {id: 'targets/es5/cls/iterable/of.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
var OfIterable = (function (_super) {
    __extends(OfIterable, _super);
    /**
     * @param {!Array<TSource>} args
     */
    function OfIterable(args) {
        var _this = _super.call(this) || this;
        _this._args = args;
        return _this;
    }
    /**
     * @return {!IterableIterator<TSource>}
     */
    OfIterable.prototype[Symbol.iterator] = function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [5 /*yield**/, __values(this._args)];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    };
    return OfIterable;
}(iterable_1.IterableX));
function OfIterable_tsickle_Closure_declarations() {
    /** @type {!Array<TSource>} */
    OfIterable.prototype._args;
}
/**
 * @template TSource
 * @param {...TSource} args
 * @return {!tsickle_forward_declare_1.IterableX<TSource>}
 */
function of() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return new OfIterable(args);
}
exports.of = of;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9vZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsd0NBTGtCO0FBTWxCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQzlGOztHQUVHO0FBUEg7SUFBaUMsOEJBQW1CO0lBVXBEOztPQUVHO0lBVEQsb0JBQVksSUFBZTtRQUEzQixZQVdFLGlCQVZPLFNBWVI7UUFEQyxLQVZJLENBQUMsS0FBSyxHQUFFLElBQUssQ0FBQzs7SUFXcEIsQ0FBQztJQUNIOztPQUVHO0lBWEEscUJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7O3dCQWFFLHNCQUFBLFNBWk0sSUFBSyxDQUFDLEtBQUssQ0FBQSxFQUFBOztvQkFZakIsU0FaaUIsQ0FBQzs7OztLQUNuQjtJQUNILGlCQUFBO0FBQUEsQ0FYQSxBQVdBLENBWGlDLG9CQUFVLEdBVzNDO0FBY0E7SUFDQSw4QkFBOEI7SUFDOUIsVUFBVSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7QUFDM0IsQ0FBQztBQUVEOzs7O0dBSUc7QUFyQkg7SUFBNEIsY0FBa0I7U0FBbEIsVUFBa0IsRUFBbEIscUJBQWtCLEVBQWxCLElBQWtCO1FBQWxCLHlCQUFrQjs7SUF1QjVDLE1BdEJNLENBQUEsSUFBSSxVQUFXLENBQVUsSUFBSSxDQUFDLENBQUM7QUF1QnZDLENBdEJDO0FBRkQsZ0JBRUMiLCJmaWxlIjoib2YuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgT2ZJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUU291cmNlPiB7XG5wcml2YXRlIF9hcmdzOiBUU291cmNlW107XG4vKipcbiAqIEBwYXJhbSB7IUFycmF5PFRTb3VyY2U+fSBhcmdzXG4gKi9cbmNvbnN0cnVjdG9yKGFyZ3M6IFRTb3VyY2VbXSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fYXJncyA9IGFyZ3M7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUl0ZXJhYmxlSXRlcmF0b3I8VFNvdXJjZT59XG4gKi9cbipbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICB5aWVsZCogdGhpcy5fYXJncztcbiAgfVxufVxuXG5mdW5jdGlvbiBPZkl0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBcnJheTxUU291cmNlPn0gKi9cbk9mSXRlcmFibGUucHJvdG90eXBlLl9hcmdzO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0gey4uLlRTb3VyY2V9IGFyZ3NcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDxUU291cmNlPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9mPFRTb3VyY2U+KC4uLmFyZ3M6IFRTb3VyY2VbXSk6IEl0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgT2ZJdGVyYWJsZTxUU291cmNlPihhcmdzKTtcbn1cbiJdfQ==