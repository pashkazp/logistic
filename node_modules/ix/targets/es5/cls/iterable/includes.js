goog.module('targets.es5.cls.iterable.includes'); exports = {}; var module = {id: 'targets/es5/cls/iterable/includes.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var comparer_1 = goog.require('targets.es5.cls.internal.comparer');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.comparer");
/**
 * @template T
 * @param {!Iterable<T>} source
 * @param {T} searchElement
 * @param {number=} fromIndex
 * @return {boolean}
 */
function includes(source, searchElement, fromIndex) {
    if (fromIndex === void 0) { fromIndex = 0; }
    var /** @type {number} */ i = 0;
    if (Math.abs(fromIndex)) {
        fromIndex = 0;
    }
    try {
        for (var source_1 = __values(source), source_1_1 = source_1.next(); !source_1_1.done; source_1_1 = source_1.next()) {
            var item = source_1_1.value;
            if (i++ > fromIndex && comparer_1.comparer(item, searchElement)) {
                return true;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (source_1_1 && !source_1_1.done && (_a = source_1.return)) _a.call(source_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return false;
    var e_1, _a;
}
exports.includes = includes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9pbmNsdWRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsaURBTGlCO0FBTWpCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0FBQ3ZHOzs7Ozs7R0FNRztBQVhILGtCQWFJLE1BWm1CLEVBYW5CLGFBWmdCLEVBYWhCLFNBWnFCO0lBWXJCLDBCQUFBLEVBQUEsYUFacUI7SUFhdkIsSUFBSSxxQkFaRCxDQUFBLENBQUUsR0FBRSxDQUFFLENBQUM7SUFhVixFQUFFLENBQUMsQ0FaQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUEsQ0FBRTtRQUFBLFNBQVUsR0FBRSxDQUFFLENBQUM7SUFBQSxDQUFFOztRQWEzQyxHQUFHLENBQUMsQ0FaWSxJQUFBLFdBQUEsU0FBQSxNQUFPLENBQUEsOEJBQUE7WUFBbEIsSUFBRyxJQUFLLG1CQUFBO1lBYVgsRUFBRSxDQUFDLENBWkMsQ0FBQyxFQUFFLEdBQUUsU0FBVSxJQUFHLG1CQUFTLENBQUMsSUFBSSxFQUFDLGFBQWMsQ0FBQyxDQUFDLENBQUEsQ0FBRTtnQkFBQSxNQUFPLENBQUEsSUFBSyxDQUFDO1lBQUEsQ0FBRTtTQUN2RTs7Ozs7Ozs7O0lBYUQsTUFaTSxDQUFBLEtBQU0sQ0FBQzs7QUFhZixDQVpDO0FBVkQsNEJBVUMiLCJmaWxlIjoiaW5jbHVkZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBjb21wYXJlciB9IGZyb20gJy4uL2ludGVybmFsL2NvbXBhcmVyJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmNvbXBhcmVyXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHshSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHtUfSBzZWFyY2hFbGVtZW50XG4gKiBAcGFyYW0ge251bWJlcj19IGZyb21JbmRleFxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluY2x1ZGVzPFQ+KFxuICAgIHNvdXJjZTogSXRlcmFibGU8VD4sXG4gICAgc2VhcmNoRWxlbWVudDogVCxcbiAgICBmcm9tSW5kZXg6IG51bWJlciA9IDApOiBib29sZWFuIHtcbiAgbGV0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBpID0gMDtcbiAgaWYgKE1hdGguYWJzKGZyb21JbmRleCkpIHsgZnJvbUluZGV4ID0gMDsgfVxuICBmb3IgKGxldCAvKiogQHR5cGUge1R9ICovIGl0ZW0gb2Ygc291cmNlKSB7XG4gICAgaWYgKGkrKyA+IGZyb21JbmRleCAmJiBjb21wYXJlcihpdGVtLCBzZWFyY2hFbGVtZW50KSkgeyByZXR1cm4gdHJ1ZTsgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==