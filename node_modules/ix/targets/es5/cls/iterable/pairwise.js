goog.module('targets.es5.cls.iterable.pairwise'); exports = {}; var module = {id: 'targets/es5/cls/iterable/pairwise.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
var PairwiseIterable = (function (_super) {
    __extends(PairwiseIterable, _super);
    /**
     * @param {!Iterable<TSource>} source
     */
    function PairwiseIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!IterableIterator<!Array<TSource>>}
     */
    PairwiseIterable.prototype[Symbol.iterator] = function () {
        var value, hasValue, _a, _b, item, e_1_1, e_1, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    hasValue = false;
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 8, 9, 10]);
                    _a = __values(this._source), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 7];
                    item = _b.value;
                    if (!!hasValue) return [3 /*break*/, 3];
                    hasValue = true;
                    return [3 /*break*/, 5];
                case 3: return [4 /*yield*/, [/** @type {TSource} */ ((value)), item]];
                case 4:
                    _d.sent();
                    _d.label = 5;
                case 5:
                    value = item;
                    _d.label = 6;
                case 6:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 10];
                case 8:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 10];
                case 9:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 10: return [2 /*return*/];
            }
        });
    };
    return PairwiseIterable;
}(iterable_1.IterableX));
function PairwiseIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<TSource>} */
    PairwiseIterable.prototype._source;
}
/**
 * Returns a new sequence that triggers on the second and subsequent triggerings of the input sequence.
 * @template TSource
 * @param {!Iterable<TSource>} source
 * @return {!tsickle_forward_declare_1.IterableX<!Array<TSource>>}
 */
function pairwise(source) {
    return new PairwiseIterable(source);
}
exports.pairwise = pairwise;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9wYWlyd2lzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsd0NBTGtCO0FBTWxCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQzlGOztHQUVHO0FBUEg7SUFBdUMsb0NBQXFCO0lBVTVEOztPQUVHO0lBVEQsMEJBQVksTUFBeUI7UUFBckMsWUFXRSxpQkFWTyxTQVlSO1FBREMsS0FWSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7O0lBV3hCLENBQUM7SUFDSDs7T0FFRztJQVhBLDJCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7O29CQUNpQyxRQUFTLEdBQUUsS0FBTSxDQUFDOzs7O29CQUMvQixLQUFBLFNBQUEsSUFBSyxDQUFDLE9BQU8sQ0FBQTs7OztvQkFBckIsSUFBSzt5QkFDVCxDQUFDLFFBQVEsRUFBVCx3QkFBUztvQkFhWCxRQVpRLEdBQUUsSUFBSyxDQUFDOzt3QkFjaEIscUJBWkssQ0FBQSxzQkFBQSxDQUFBLENBQUEsQ0FBRSxLQUFBLENBQUEsQ0FBTSxFQUFDLElBQUssQ0FBQyxFQUFBOztvQkFZcEIsU0Fab0IsQ0FBQzs7O29CQWN2QixLQVpLLEdBQUUsSUFBSyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBRWhCO0lBQ0gsdUJBQUE7QUFBQSxDQW5CQSxBQW1CQSxDQW5CdUMsb0JBQVUsR0FtQmpEO0FBY0E7SUFDQSxpQ0FBaUM7SUFDakMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUNuQyxDQUFDO0FBRUQ7Ozs7O0dBS0c7QUFqQkgsa0JBQWtDLE1BQXlCO0lBbUJ6RCxNQWxCTSxDQUFBLElBQUksZ0JBQWlCLENBQVUsTUFBTSxDQUFDLENBQUM7QUFtQi9DLENBbEJDO0FBRkQsNEJBRUMiLCJmaWxlIjoicGFpcndpc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgUGFpcndpc2VJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUU291cmNlW10+IHtcbnByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT47XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPCFBcnJheTxUU291cmNlPj59XG4gKi9cbipbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyB2YWx1ZTogVFNvdXJjZSB8IHVuZGVmaW5lZCwgLyoqIEB0eXBlIHtib29sZWFufSAqLyBoYXNWYWx1ZSA9IGZhbHNlO1xuICAgIGZvciAoY29uc3QgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgaWYgKCFoYXNWYWx1ZSkge1xuICAgICAgICBoYXNWYWx1ZSA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB5aWVsZCBbIC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8oKHZhbHVlKSksIGl0ZW1dO1xuICAgICAgfVxuICAgICAgdmFsdWUgPSBpdGVtO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBQYWlyd2lzZUl0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFJdGVyYWJsZTxUU291cmNlPn0gKi9cblBhaXJ3aXNlSXRlcmFibGUucHJvdG90eXBlLl9zb3VyY2U7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIG5ldyBzZXF1ZW5jZSB0aGF0IHRyaWdnZXJzIG9uIHRoZSBzZWNvbmQgYW5kIHN1YnNlcXVlbnQgdHJpZ2dlcmluZ3Mgb2YgdGhlIGlucHV0IHNlcXVlbmNlLlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDwhQXJyYXk8VFNvdXJjZT4+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFpcndpc2U8VFNvdXJjZT4oc291cmNlOiBJdGVyYWJsZTxUU291cmNlPik6IEl0ZXJhYmxlWDxUU291cmNlW10+IHtcbiAgcmV0dXJuIG5ldyBQYWlyd2lzZUl0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSk7XG59XG4iXX0=