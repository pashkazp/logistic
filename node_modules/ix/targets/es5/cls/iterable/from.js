goog.module('targets.es5.cls.iterable.from'); exports = {}; var module = {id: 'targets/es5/cls/iterable/from.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
var bindcallback_1 = goog.require('targets.es5.cls.internal.bindcallback');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.bindcallback");
var identity_1 = goog.require('targets.es5.cls.internal.identity');
var tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.identity");
var tolength_1 = goog.require('targets.es5.cls.internal.tolength');
var tsickle_forward_declare_4 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.tolength");
var isiterable_1 = goog.require('targets.es5.cls.internal.isiterable');
var tsickle_forward_declare_5 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.isiterable");
/**
 * @template TSource, TResult
 */
var FromIterable = (function (_super) {
    __extends(FromIterable, _super);
    /**
     * @param {(!Iterable<TSource>|!ArrayLike<TSource>)} source
     * @param {function(TSource, number): TResult} fn
     */
    function FromIterable(source, fn) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._fn = fn;
        return _this;
    }
    /**
     * @return {!IterableIterator<TResult>}
     */
    FromIterable.prototype[Symbol.iterator] = function () {
        var iterable, i, _a, _b, item, e_1_1, length_1, val, e_1, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    iterable = isiterable_1.isIterable(this._source);
                    i = 0;
                    if (!iterable) return [3 /*break*/, 9];
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 6, 7, 8]);
                    _a = __values(/** @type {!Iterable<TSource>} */ (this._source)), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 5];
                    item = _b.value;
                    return [4 /*yield*/, this._fn(item, i++)];
                case 3:
                    _d.sent();
                    _d.label = 4;
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [3 /*break*/, 12];
                case 9:
                    length_1 = tolength_1.toLength(((this._source)).length);
                    _d.label = 10;
                case 10:
                    if (!(i < length_1)) return [3 /*break*/, 12];
                    val = ((this._source))[i];
                    return [4 /*yield*/, this._fn(val, i++)];
                case 11:
                    _d.sent();
                    return [3 /*break*/, 10];
                case 12: return [2 /*return*/];
            }
        });
    };
    return FromIterable;
}(iterable_1.IterableX));
function FromIterable_tsickle_Closure_declarations() {
    /** @type {(!Iterable<TSource>|!ArrayLike<TSource>)} */
    FromIterable.prototype._source;
    /** @type {function(TSource, number): TResult} */
    FromIterable.prototype._fn;
}
/**
 * @template TSource, TResult
 * @param {(!Iterable<TSource>|!ArrayLike<TSource>)} source
 * @param {function(TSource, number): TResult=} fn
 * @param {?=} thisArg
 * @return {!tsickle_forward_declare_1.IterableX<TResult>}
 */
function from(source, fn, thisArg) {
    if (fn === void 0) { fn = identity_1.identity; }
    return new FromIterable(source, bindcallback_1.bindCallback(fn, thisArg, 2));
}
exports.from = from;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9mcm9tLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCx3Q0FMa0I7QUFNbEIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHNDQUFzQyxDQUFDLENBTnJEO0FBT3hDLHlEQU5xQjtBQU9yQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsbURBQW1ELENBQUMsQ0FQbEQ7QUFReEQsaURBUGlCO0FBUWpCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywrQ0FBK0MsQ0FBQyxDQVJ0RDtBQVNoRCxpREFSaUI7QUFTakIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLCtDQUErQyxDQUFDLENBVHREO0FBVWhELHFEQVRtQjtBQVVuQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsaURBQWlELENBQUMsQ0FBQztBQUN6Rzs7R0FFRztBQVhIO0lBQXNELGdDQUFtQjtJQWV6RTs7O09BR0c7SUFkRCxzQkFBWSxNQUE4QyxFQUFDLEVBQStDO1FBQTFHLFlBZ0JFLGlCQWZPLFNBa0JSO1FBRkMsS0FmSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7UUFnQnRCLEtBZkksQ0FBQyxHQUFHLEdBQUUsRUFBRyxDQUFDOztJQWdCaEIsQ0FBQztJQUNIOztPQUVHO0lBaEJBLHVCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7O29CQUNPLFFBQVMsR0FBRSx1QkFBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDdkMsQ0FBRSxHQUFFLENBQUUsQ0FBQzt5QkFDTixRQUFRLEVBQVIsd0JBQVE7Ozs7b0JBQ0csS0FBQSxTQUFBLGlDQUFBLENBQUEsQ0FBdUIsSUFBSSxDQUFDLE9BQUEsQ0FBTyxDQUFBOzs7O29CQUF4QyxJQUFLO29CQWtCWCxxQkFqQkssSUFBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUMsQ0FBRSxFQUFFLENBQUMsRUFBQTs7b0JBaUJ6QixTQWpCeUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUd6QixXQUFTLG1CQUFTLENBQUMsQ0FBQSxDQUFxQixJQUFJLENBQUMsT0FBQSxDQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQzs7O3lCQUMxRCxDQUFBLENBQUMsR0FBRSxRQUFPLENBQUE7b0JBQ1osR0FBSSxHQUFFLENBQUEsQ0FBc0IsSUFBSSxDQUFDLE9BQUEsQ0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBa0JoRCxxQkFqQkssSUFBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUMsQ0FBRSxFQUFFLENBQUMsRUFBQTs7b0JBaUJ4QixTQWpCd0IsQ0FBQzs7Ozs7S0FHOUI7SUFDSCxtQkFBQTtBQUFBLENBekJBLEFBeUJBLENBekJzRCxvQkFBVSxHQXlCaEU7QUFtQkE7SUFDQSx1REFBdUQ7SUFDdkQsWUFBWSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7SUFDL0IsaURBQWlEO0lBQ2pELFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQzNCLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUE5QkgsY0FnQ0ksTUEvQjhDLEVBZ0M5QyxFQS9CeUQsRUFnQ3pELE9BL0JhO0lBOEJiLG1CQUFBLEVBQUEsS0EvQmdELG1CQUFTO0lBaUMzRCxNQS9CTSxDQUFBLElBQUksWUFBYSxDQUFtQixNQUFNLEVBQUMsMkJBQWEsQ0FBQyxFQUFFLEVBQUMsT0FBUSxFQUFDLENBQUUsQ0FBQyxDQUFDLENBQUM7QUFnQ2xGLENBL0JDO0FBTEQsb0JBS0MiLCJmaWxlIjoiZnJvbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLml0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgYmluZENhbGxiYWNrIH0gZnJvbSAnLi4vaW50ZXJuYWwvYmluZGNhbGxiYWNrJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmJpbmRjYWxsYmFja1wiKTtcbmltcG9ydCB7IGlkZW50aXR5IH0gZnJvbSAnLi4vaW50ZXJuYWwvaWRlbnRpdHknO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMyA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwuaWRlbnRpdHlcIik7XG5pbXBvcnQgeyB0b0xlbmd0aCB9IGZyb20gJy4uL2ludGVybmFsL3RvbGVuZ3RoJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzQgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLnRvbGVuZ3RoXCIpO1xuaW1wb3J0IHsgaXNJdGVyYWJsZSB9IGZyb20gJy4uL2ludGVybmFsL2lzaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfNSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwuaXNpdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqL1xuY2xhc3MgRnJvbUl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQgPSBUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG5wcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+IHwgQXJyYXlMaWtlPFRTb3VyY2U+O1xucHJpdmF0ZSBfZm46ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gVFJlc3VsdDtcbi8qKlxuICogQHBhcmFtIHsoIUl0ZXJhYmxlPFRTb3VyY2U+fCFBcnJheUxpa2U8VFNvdXJjZT4pfSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSwgbnVtYmVyKTogVFJlc3VsdH0gZm5cbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiB8IEFycmF5TGlrZTxUU291cmNlPiwgZm46ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gVFJlc3VsdCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2ZuID0gZm47XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUl0ZXJhYmxlSXRlcmF0b3I8VFJlc3VsdD59XG4gKi9cbipbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCAvKiogQHR5cGUge2Jvb2xlYW59ICovIGl0ZXJhYmxlID0gaXNJdGVyYWJsZSh0aGlzLl9zb3VyY2UpO1xuICAgIGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gaSA9IDA7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICBmb3IgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGl0ZW0gb2YgLyoqIEB0eXBlIHshSXRlcmFibGU8VFNvdXJjZT59ICovKCggPEl0ZXJhYmxlPFRTb3VyY2U+PnRoaXMuX3NvdXJjZSkpKSB7XG4gICAgICAgIHlpZWxkIHRoaXMuX2ZuKGl0ZW0sIGkrKyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gbGVuZ3RoID0gdG9MZW5ndGgoKCAvKiogQHR5cGUgeyFBcnJheUxpa2U8VFNvdXJjZT59ICovKCg8QXJyYXlMaWtlPFRTb3VyY2U+PnRoaXMuX3NvdXJjZSkpKS5sZW5ndGgpO1xuICAgICAgd2hpbGUgKGkgPCBsZW5ndGgpIHtcbiAgICAgICAgbGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gdmFsID0gKCAvKiogQHR5cGUgeyFBcnJheUxpa2U8VFNvdXJjZT59ICovKCg8QXJyYXlMaWtlPFRTb3VyY2U+PnRoaXMuX3NvdXJjZSkpKVtpXTtcbiAgICAgICAgeWllbGQgdGhpcy5fZm4odmFsLCBpKyspO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBGcm9tSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7KCFJdGVyYWJsZTxUU291cmNlPnwhQXJyYXlMaWtlPFRTb3VyY2U+KX0gKi9cbkZyb21JdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFNvdXJjZSwgbnVtYmVyKTogVFJlc3VsdH0gKi9cbkZyb21JdGVyYWJsZS5wcm90b3R5cGUuX2ZuO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlLCBUUmVzdWx0XG4gKiBAcGFyYW0geyghSXRlcmFibGU8VFNvdXJjZT58IUFycmF5TGlrZTxUU291cmNlPil9IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlLCBudW1iZXIpOiBUUmVzdWx0PX0gZm5cbiAqIEBwYXJhbSB7Pz19IHRoaXNBcmdcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDxUUmVzdWx0Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb208VFNvdXJjZSwgVFJlc3VsdCA9IFRTb3VyY2U+KFxuICAgIHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4gfCBBcnJheUxpa2U8VFNvdXJjZT4sXG4gICAgZm46ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gVFJlc3VsdCA9IGlkZW50aXR5LFxuICAgIHRoaXNBcmc/OiBhbnkpOiBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IEZyb21JdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0Pihzb3VyY2UsIGJpbmRDYWxsYmFjayhmbiwgdGhpc0FyZywgMikpO1xufVxuIl19