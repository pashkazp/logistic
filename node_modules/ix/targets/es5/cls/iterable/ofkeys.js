goog.module('targets.es5.cls.iterable.ofkeys'); exports = {}; var module = {id: 'targets/es5/cls/iterable/ofkeys.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
var OfKeysIterable = (function (_super) {
    __extends(OfKeysIterable, _super);
    /**
     * @param {!Object<string,TSource>} source
     */
    function OfKeysIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!IterableIterator<string>}
     */
    OfKeysIterable.prototype[Symbol.iterator] = function () {
        return Object.keys(this._source)[Symbol.iterator]();
    };
    return OfKeysIterable;
}(iterable_1.IterableX));
function OfKeysIterable_tsickle_Closure_declarations() {
    /** @type {!Object<string,TSource>} */
    OfKeysIterable.prototype._source;
}
/**
 * @template TSource
 * @param {!Object<string,TSource>} source
 * @return {!tsickle_forward_declare_1.IterableX<string>}
 */
function ofKeys(source) {
    return new OfKeysIterable(source);
}
exports.ofKeys = ofKeys;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9vZmtleXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILHdDQUxrQjtBQU1sQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsc0NBQXNDLENBQUMsQ0FBQztBQUM5Rjs7R0FFRztBQVBIO0lBQXFDLGtDQUFrQjtJQVV2RDs7T0FFRztJQVRELHdCQUFZLE1BQWtDO1FBQTlDLFlBV0UsaUJBVk8sU0FZUjtRQURDLEtBVkksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDOztJQVd4QixDQUFDO0lBQ0g7O09BRUc7SUFYRCx5QkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQWpCO1FBYUUsTUFaTSxDQUFBLE1BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO0lBYXRELENBWkM7SUFDSCxxQkFBQTtBQUFBLENBWEEsQUFXQSxDQVhxQyxvQkFBVSxHQVcvQztBQWNBO0lBQ0Esc0NBQXNDO0lBQ3RDLGNBQWMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQ2pDLENBQUM7QUFFRDs7OztHQUlHO0FBckJILGdCQUFnQyxNQUFrQztJQXVCaEUsTUF0Qk0sQ0FBQSxJQUFJLGNBQWUsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQXVCN0MsQ0F0QkM7QUFGRCx3QkFFQyIsImZpbGUiOiJvZmtleXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgT2ZLZXlzSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBJdGVyYWJsZVg8c3RyaW5nPiB7XG5wcml2YXRlIF9zb3VyY2U6IHsgW2tleTogc3RyaW5nXTogVFNvdXJjZSB9O1xuLyoqXG4gKiBAcGFyYW0geyFPYmplY3Q8c3RyaW5nLFRTb3VyY2U+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiB7IFtrZXk6IHN0cmluZ106IFRTb3VyY2UgfSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPHN0cmluZz59XG4gKi9cbltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLl9zb3VyY2UpW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBPZktleXNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshT2JqZWN0PHN0cmluZyxUU291cmNlPn0gKi9cbk9mS2V5c0l0ZXJhYmxlLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFPYmplY3Q8c3RyaW5nLFRTb3VyY2U+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDxzdHJpbmc+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gb2ZLZXlzPFRTb3VyY2U+KHNvdXJjZTogeyBba2V5OiBzdHJpbmddOiBUU291cmNlIH0pOiBJdGVyYWJsZVg8c3RyaW5nPiB7XG4gIHJldHVybiBuZXcgT2ZLZXlzSXRlcmFibGU8VFNvdXJjZT4oc291cmNlKTtcbn1cbiJdfQ==