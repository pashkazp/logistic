goog.module('targets.es5.cls.iterable.flatten'); exports = {}; var module = {id: 'targets/es5/cls/iterable/flatten.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
var isiterable_1 = goog.require('targets.es5.cls.internal.isiterable');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.isiterable");
/**
 * @template TSource
 */
var FlattenIterable = (function (_super) {
    __extends(FlattenIterable, _super);
    /**
     * @param {!Iterable<TSource>} source
     * @param {number} depth
     */
    function FlattenIterable(source, depth) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._depth = depth;
        return _this;
    }
    /**
     * @param {!Iterable<TSource>} source
     * @param {number} depth
     * @return {!Iterable<TSource>}
     */
    FlattenIterable.prototype._flatten = function (source, depth) {
        var source_1, source_1_1, item, e_1_1, source_2, source_2_1, item, _a, _b, innerItem, e_2_1, e_3_1, e_1, _c, e_3, _d, e_2, _e;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    if (!(depth === 0)) return [3 /*break*/, 9];
                    _f.label = 1;
                case 1:
                    _f.trys.push([1, 6, 7, 8]);
                    source_1 = __values(source), source_1_1 = source_1.next();
                    _f.label = 2;
                case 2:
                    if (!!source_1_1.done) return [3 /*break*/, 5];
                    item = source_1_1.value;
                    return [4 /*yield*/, item];
                case 3:
                    _f.sent();
                    _f.label = 4;
                case 4:
                    source_1_1 = source_1.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _f.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (source_1_1 && !source_1_1.done && (_c = source_1.return)) _c.call(source_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
                case 9:
                    _f.trys.push([9, 23, 24, 25]);
                    source_2 = __values(source), source_2_1 = source_2.next();
                    _f.label = 10;
                case 10:
                    if (!!source_2_1.done) return [3 /*break*/, 22];
                    item = source_2_1.value;
                    if (!isiterable_1.isIterable(item)) return [3 /*break*/, 19];
                    _f.label = 11;
                case 11:
                    _f.trys.push([11, 16, 17, 18]);
                    _a = __values(this._flatten(item, depth - 1)), _b = _a.next();
                    _f.label = 12;
                case 12:
                    if (!!_b.done) return [3 /*break*/, 15];
                    innerItem = _b.value;
                    return [4 /*yield*/, innerItem];
                case 13:
                    _f.sent();
                    _f.label = 14;
                case 14:
                    _b = _a.next();
                    return [3 /*break*/, 12];
                case 15: return [3 /*break*/, 18];
                case 16:
                    e_2_1 = _f.sent();
                    e_2 = { error: e_2_1 };
                    return [3 /*break*/, 18];
                case 17:
                    try {
                        if (_b && !_b.done && (_e = _a.return)) _e.call(_a);
                    }
                    finally { if (e_2) throw e_2.error; }
                    return [7 /*endfinally*/];
                case 18: return [3 /*break*/, 21];
                case 19: return [4 /*yield*/, item];
                case 20:
                    _f.sent();
                    _f.label = 21;
                case 21:
                    source_2_1 = source_2.next();
                    return [3 /*break*/, 10];
                case 22: return [3 /*break*/, 25];
                case 23:
                    e_3_1 = _f.sent();
                    e_3 = { error: e_3_1 };
                    return [3 /*break*/, 25];
                case 24:
                    try {
                        if (source_2_1 && !source_2_1.done && (_d = source_2.return)) _d.call(source_2);
                    }
                    finally { if (e_3) throw e_3.error; }
                    return [7 /*endfinally*/];
                case 25: return [2 /*return*/];
            }
        });
    };
    /**
     * @return {!Iterator<TSource>}
     */
    FlattenIterable.prototype[Symbol.iterator] = function () {
        return this._flatten(this._source, this._depth)[Symbol.iterator]();
    };
    return FlattenIterable;
}(iterable_1.IterableX));
function FlattenIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<TSource>} */
    FlattenIterable.prototype._source;
    /** @type {number} */
    FlattenIterable.prototype._depth;
}
/**
 * Flattens the source sequence until the specified depth.
 * @template T
 * @param {!Iterable<T>} source
 * @param {number=} depth
 * @return {!tsickle_forward_declare_1.IterableX<T>}
 */
function flatten(source, depth) {
    if (depth === void 0) { depth = Infinity; }
    return new FlattenIterable(source, depth);
}
exports.flatten = flatten;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9mbGF0dGVuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCx3Q0FMa0I7QUFNbEIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHNDQUFzQyxDQUFDLENBTnJEO0FBT3hDLHFEQU5tQjtBQU9uQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsaURBQWlELENBQUMsQ0FBQztBQUN6Rzs7R0FFRztBQVJIO0lBQXNDLG1DQUFtQjtJQVl6RDs7O09BR0c7SUFYRCx5QkFBWSxNQUF5QixFQUFDLEtBQWM7UUFBcEQsWUFhRSxpQkFaTyxTQWVSO1FBRkMsS0FaSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7UUFhdEIsS0FaSSxDQUFDLE1BQU0sR0FBRSxLQUFNLENBQUM7O0lBYXRCLENBQUM7SUFDSDs7OztPQUlHO0lBZlEsa0NBQVEsR0FBakIsVUFBa0IsTUFBeUIsRUFBQyxLQUFjOzs7Ozt5QkFDcEQsQ0FBQSxLQUFLLEtBQUksQ0FBRSxDQUFBLEVBQVgsd0JBQVc7Ozs7b0JBQ0csV0FBQSxTQUFBLE1BQU8sQ0FBQTs7OztvQkFBZixJQUFLO29CQUFhLHFCQUFNLElBQUssRUFBQTs7b0JBQVgsU0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O3dCQWtCdEMsc0JBakJPOzs7b0JBRU8sV0FBQSxTQUFBLE1BQU8sQ0FBQTs7OztvQkFBZixJQUFLO3lCQUNQLHVCQUFVLENBQUMsSUFBSSxDQUFDLEVBQWhCLHlCQUFnQjs7OztvQkFDRyxLQUFBLFNBQUEsSUFBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUMsS0FBTSxHQUFFLENBQUUsQ0FBQyxDQUFBOzs7O29CQUE1QyxTQUFVO29CQUFxQyxxQkFBTSxTQUFVLEVBQUE7O29CQUFoQixTQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFtQnhFLHFCQWpCSyxJQUFLLEVBQUE7O29CQWlCVixTQWpCVSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBb0JoQjtJQUNIOztPQUVHO0lBbEJELDBCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBakI7UUFvQkUsTUFuQk0sQ0FBQSxJQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUMsSUFBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO0lBb0JyRSxDQW5CQztJQUNILHNCQUFBO0FBQUEsQ0EzQkEsQUEyQkEsQ0EzQnNDLG9CQUFVLEdBMkJoRDtBQXFCQTtJQUNBLGlDQUFpQztJQUNqQyxlQUFlLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztJQUNsQyxxQkFBcUI7SUFDckIsZUFBZSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7QUFDakMsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQTFCSCxpQkFBMkIsTUFBbUIsRUFBQyxLQUF5QjtJQUF6QixzQkFBQSxFQUFBLGdCQUF5QjtJQTRCdEUsTUEzQk0sQ0FBQSxJQUFJLGVBQWdCLENBQUksTUFBTSxFQUFDLEtBQU0sQ0FBQyxDQUFDO0FBNEIvQyxDQTNCQztBQUZELDBCQUVDIiwiZmlsZSI6ImZsYXR0ZW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbmltcG9ydCB7IGlzSXRlcmFibGUgfSBmcm9tICcuLi9pbnRlcm5hbC9pc2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmlzaXRlcmFibGVcIik7XG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKi9cbmNsYXNzIEZsYXR0ZW5JdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUU291cmNlPiB7XG5wcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfZGVwdGg6IG51bWJlcjtcbi8qKlxuICogQHBhcmFtIHshSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtudW1iZXJ9IGRlcHRoXG4gKi9cbmNvbnN0cnVjdG9yKHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sIGRlcHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9kZXB0aCA9IGRlcHRoO1xuICB9XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7bnVtYmVyfSBkZXB0aFxuICogQHJldHVybiB7IUl0ZXJhYmxlPFRTb3VyY2U+fVxuICovXG5cbnByaXZhdGUgKl9mbGF0dGVuKHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sIGRlcHRoOiBudW1iZXIpOiBJdGVyYWJsZTxUU291cmNlPiB7XG4gICAgaWYgKGRlcHRoID09PSAwKSB7XG4gICAgICBmb3IgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGl0ZW0gb2Ygc291cmNlKSB7IHlpZWxkIGl0ZW07IH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHNvdXJjZSkge1xuICAgICAgaWYgKGlzSXRlcmFibGUoaXRlbSkpIHtcbiAgICAgICAgZm9yIChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpbm5lckl0ZW0gb2YgdGhpcy5fZmxhdHRlbihpdGVtLCBkZXB0aCAtIDEpKSB7IHlpZWxkIGlubmVySXRlbTsgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5bU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcy5fZmxhdHRlbih0aGlzLl9zb3VyY2UsIHRoaXMuX2RlcHRoKVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gRmxhdHRlbkl0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFJdGVyYWJsZTxUU291cmNlPn0gKi9cbkZsYXR0ZW5JdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuRmxhdHRlbkl0ZXJhYmxlLnByb3RvdHlwZS5fZGVwdGg7XG59XG5cbi8qKlxuICogRmxhdHRlbnMgdGhlIHNvdXJjZSBzZXF1ZW5jZSB1bnRpbCB0aGUgc3BlY2lmaWVkIGRlcHRoLlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEBwYXJhbSB7bnVtYmVyPX0gZGVwdGhcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW48VD4oc291cmNlOiBJdGVyYWJsZTxUPiwgZGVwdGg6IG51bWJlciA9IEluZmluaXR5KTogSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBGbGF0dGVuSXRlcmFibGU8VD4oc291cmNlLCBkZXB0aCk7XG59XG4iXX0=