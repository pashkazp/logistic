goog.module('targets.es5.cls.iterable.onerrorresumenext'); exports = {}; var module = {id: 'targets/es5/cls/iterable/onerrorresumenext.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
var OnErrorResumeNextIterable = (function (_super) {
    __extends(OnErrorResumeNextIterable, _super);
    /**
     * @param {!Iterable<!Iterable<TSource>>} source
     */
    function OnErrorResumeNextIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!IterableIterator<TSource>}
     */
    OnErrorResumeNextIterable.prototype[Symbol.iterator] = function () {
        var _a, _b, item, it, next, e_1_1, e_1, _c;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _d.trys.push([0, 6, 7, 8]);
                    _a = __values(this._source), _b = _a.next();
                    _d.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 5];
                    item = _b.value;
                    it = item[Symbol.iterator]();
                    _d.label = 2;
                case 2:
                    if (!1) return [3 /*break*/, 4];
                    next = void 0;
                    try {
                        next = it.next();
                    }
                    catch (e) {
                        return [3 /*break*/, 4];
                    }
                    if (next.done) {
                        return [3 /*break*/, 4];
                    }
                    return [4 /*yield*/, next.value];
                case 3:
                    _d.sent();
                    return [3 /*break*/, 2];
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    };
    return OnErrorResumeNextIterable;
}(iterable_1.IterableX));
function OnErrorResumeNextIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<!Iterable<TSource>>} */
    OnErrorResumeNextIterable.prototype._source;
}
/**
 * @template T
 * @param {!Iterable<T>} source
 * @param {...!Iterable<T>} args
 * @return {!tsickle_forward_declare_1.IterableX<T>}
 */
function onErrorResumeNext(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return new OnErrorResumeNextIterable(__spread([source], args));
}
exports.onErrorResumeNext = onErrorResumeNext;
/**
 * @template T
 * @param {...!Iterable<T>} source
 * @return {!tsickle_forward_declare_1.IterableX<T>}
 */
function onErrorResumeNextStatic() {
    var source = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        source[_i] = arguments[_i];
    }
    return new OnErrorResumeNextIterable(source);
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9vbmVycm9ycmVzdW1lbmV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsd0NBTGtCO0FBTWxCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQzlGOztHQUVHO0FBUEg7SUFBZ0QsNkNBQW1CO0lBVW5FOztPQUVHO0lBVEQsbUNBQVksTUFBbUM7UUFBL0MsWUFXRSxpQkFWTyxTQVlSO1FBREMsS0FWSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7O0lBV3hCLENBQUM7SUFDSDs7T0FFRztJQVhBLG9DQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7OztvQkFDa0IsS0FBQSxTQUFBLElBQUssQ0FBQyxPQUFPLENBQUE7Ozs7b0JBQXJCLElBQUs7b0JBQ1IsRUFBRyxHQUFFLElBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQzs7O3lCQUMxQixDQUFDO29CQUNILElBQUssU0FBQSxDQUFDO29CQWFULElBWkcsQ0FBRTt3QkFhSCxJQVpJLEdBQUUsRUFBRyxDQUFDLElBQUksRUFBRSxDQUFDO29CQWFuQixDQVpDO29CQUFBLEtBQUEsQ0FBQSxDQUFRLENBQUMsQ0FBQyxDQUFBLENBQUU7d0JBYVgsTUFaTSxrQkFBQTtvQkFhUixDQVpDO29CQWNELEVBQUUsQ0FBQyxDQVpDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFFO3dCQUFBLE1BQU8sa0JBQUE7b0JBQUEsQ0FBRTtvQkFhekIscUJBWkssSUFBSyxDQUFDLEtBQUssRUFBQTs7b0JBWWhCLFNBWmdCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FHdEI7SUFDSCxnQ0FBQTtBQUFBLENBeEJBLEFBd0JBLENBeEJnRCxvQkFBVSxHQXdCMUQ7QUFjQTtJQUNBLDRDQUE0QztJQUM1Qyx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQzVDLENBQUM7QUFFRDs7Ozs7R0FLRztBQXRCSCwyQkFBcUMsTUFBbUI7SUFBQyxjQUF1QjtTQUF2QixVQUF1QixFQUF2QixxQkFBdUIsRUFBdkIsSUFBdUI7UUFBdkIsNkJBQXVCOztJQXdCOUUsTUF2Qk0sQ0FBQSxJQUFJLHlCQUEwQixXQUFLLE1BQU0sR0FBSyxJQUFJLEVBQUUsQ0FBQztBQXdCN0QsQ0FBQztBQXpCRCw4Q0F5QkM7QUFDRDs7OztHQUlHO0FBMUJIO0lBQTJDLGdCQUF3QjtTQUF4QixVQUF3QixFQUF4QixxQkFBd0IsRUFBeEIsSUFBd0I7UUFBeEIsMkJBQXdCOztJQTRCakUsTUEzQk0sQ0FBQSxJQUFJLHlCQUEwQixDQUFJLE1BQU0sQ0FBQyxDQUFDO0FBNEJsRCxDQTNCQztBQUZELDBEQUVDIiwiZmlsZSI6Im9uZXJyb3JyZXN1bWVuZXh0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaXRlcmFibGVcIik7XG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKi9cbmNsYXNzIE9uRXJyb3JSZXN1bWVOZXh0SXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxJdGVyYWJsZTxUU291cmNlPj47XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPCFJdGVyYWJsZTxUU291cmNlPj59IHNvdXJjZVxuICovXG5jb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPEl0ZXJhYmxlPFRTb3VyY2U+Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG4qW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgZm9yIChsZXQgLyoqIEB0eXBlIHshSXRlcmFibGU8VFNvdXJjZT59ICovIGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBsZXQgLyoqIEB0eXBlIHshSXRlcmF0b3I8VFNvdXJjZT59ICovIGl0ID0gaXRlbVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBsZXQgLyoqIEB0eXBlIHs/fSAqLyBuZXh0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgIG5leHQgPSBpdC5uZXh0KCk7XG4gICAgICAgIH0gY2F0Y2ggKCAvKiogQHR5cGUgez99ICovZSkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG5leHQuZG9uZSkgeyBicmVhazsgfVxuICAgICAgICB5aWVsZCBuZXh0LnZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFJdGVyYWJsZTwhSXRlcmFibGU8VFNvdXJjZT4+fSAqL1xuT25FcnJvclJlc3VtZU5leHRJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHshSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHsuLi4hSXRlcmFibGU8VD59IGFyZ3NcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkl0ZXJhYmxlWDxUPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uRXJyb3JSZXN1bWVOZXh0PFQ+KHNvdXJjZTogSXRlcmFibGU8VD4sIC4uLmFyZ3M6IEl0ZXJhYmxlPFQ+W10pOiBJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IE9uRXJyb3JSZXN1bWVOZXh0SXRlcmFibGU8VD4oW3NvdXJjZSwgLi4uYXJnc10pO1xufVxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHsuLi4hSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gb25FcnJvclJlc3VtZU5leHRTdGF0aWM8VD4oLi4uc291cmNlOiBJdGVyYWJsZTxUPltdKTogSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlPFQ+KHNvdXJjZSk7XG59XG4iXX0=