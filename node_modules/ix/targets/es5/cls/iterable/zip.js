goog.module('targets.es5.cls.iterable.zip'); exports = {}; var module = {id: 'targets/es5/cls/iterable/zip.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es5.cls.iterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource, TResult
 */
var ZipIterable = (function (_super) {
    __extends(ZipIterable, _super);
    /**
     * @param {!Iterable<TSource>} left
     * @param {!Iterable<TSource>} right
     * @param {function(TSource, TSource): TResult} fn
     */
    function ZipIterable(left, right, fn) {
        var _this = _super.call(this) || this;
        _this._left = left;
        _this._right = right;
        _this._fn = fn;
        return _this;
    }
    /**
     * @return {!IterableIterator<TResult>}
     */
    ZipIterable.prototype[Symbol.iterator] = function () {
        var it1, it2, next1, next2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    it1 = this._left[Symbol.iterator](), it2 = this._right[Symbol.iterator]();
                    _a.label = 1;
                case 1:
                    if (!(!(next1 = it1.next()).done && (!(next2 = it2.next()).done))) return [3 /*break*/, 3];
                    return [4 /*yield*/, this._fn(next1.value, next2.value)];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 1];
                case 3: return [2 /*return*/];
            }
        });
    };
    return ZipIterable;
}(iterable_1.IterableX));
function ZipIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<TSource>} */
    ZipIterable.prototype._left;
    /** @type {!Iterable<TSource>} */
    ZipIterable.prototype._right;
    /** @type {function(TSource, TSource): TResult} */
    ZipIterable.prototype._fn;
}
/**
 * @template TSource, TResult
 * @param {!Iterable<TSource>} left
 * @param {!Iterable<TSource>} right
 * @param {function(TSource, TSource): TResult} fn
 * @return {!tsickle_forward_declare_1.IterableX<TResult>}
 */
function zip(left, right, fn) {
    return new ZipIterable(left, right, fn);
}
exports.zip = zip;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS96aXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILHdDQUxrQjtBQU1sQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsc0NBQXNDLENBQUMsQ0FBQztBQUM5Rjs7R0FFRztBQVBIO0lBQTJDLCtCQUFtQjtJQVk5RDs7OztPQUlHO0lBWEQscUJBQVksSUFBdUIsRUFBQyxLQUF5QixFQUFDLEVBQStDO1FBQTdHLFlBYUUsaUJBWk8sU0FnQlI7UUFIQyxLQVpJLENBQUMsS0FBSyxHQUFFLElBQUssQ0FBQztRQWFsQixLQVpJLENBQUMsTUFBTSxHQUFFLEtBQU0sQ0FBQztRQWFwQixLQVpJLENBQUMsR0FBRyxHQUFFLEVBQUcsQ0FBQzs7SUFhaEIsQ0FBQztJQUNIOztPQUVHO0lBYkEsc0JBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ08sR0FBSSxHQUFFLElBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUMsR0FBSSxHQUFFLElBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7Ozt5QkFFekUsQ0FBQSxDQUFDLENBQUMsS0FBSyxHQUFFLEdBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBRyxDQUFFLENBQUMsQ0FBQyxLQUFLLEdBQUUsR0FBSSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7b0JBZS9ELHFCQWRLLElBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBQyxLQUFNLENBQUMsS0FBSyxDQUFDLEVBQUE7O29CQWN4QyxTQWR3QyxDQUFDOzs7OztLQUU1QztJQUNILGtCQUFBO0FBQUEsQ0FuQkEsQUFtQkEsQ0FuQjJDLG9CQUFVLEdBbUJyRDtBQWdCQTtJQUNBLGlDQUFpQztJQUNqQyxXQUFXLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztJQUM1QixpQ0FBaUM7SUFDakMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFDN0Isa0RBQWtEO0lBQ2xELFdBQVcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO0FBQzFCLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUE3QkgsYUErQkksSUE5QnVCLEVBK0J2QixLQTlCd0IsRUErQnhCLEVBOUI4QztJQStCaEQsTUE5Qk0sQ0FBQSxJQUFJLFdBQVksQ0FBbUIsSUFBSSxFQUFDLEtBQU0sRUFBQyxFQUFHLENBQUMsQ0FBQztBQStCNUQsQ0E5QkM7QUFMRCxrQkFLQyIsImZpbGUiOiJ6aXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqL1xuY2xhc3MgWmlwSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdD4gZXh0ZW5kcyBJdGVyYWJsZVg8VFJlc3VsdD4ge1xucHJpdmF0ZSBfbGVmdDogSXRlcmFibGU8VFNvdXJjZT47XG5wcml2YXRlIF9yaWdodDogSXRlcmFibGU8VFNvdXJjZT47XG5wcml2YXRlIF9mbjogKGxlZnQ6IFRTb3VyY2UsIHJpZ2h0OiBUU291cmNlKSA9PiBUUmVzdWx0O1xuLyoqXG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUU291cmNlPn0gbGVmdFxuICogQHBhcmFtIHshSXRlcmFibGU8VFNvdXJjZT59IHJpZ2h0XG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UsIFRTb3VyY2UpOiBUUmVzdWx0fSBmblxuICovXG5jb25zdHJ1Y3RvcihsZWZ0OiBJdGVyYWJsZTxUU291cmNlPiwgcmlnaHQ6IEl0ZXJhYmxlPFRTb3VyY2U+LCBmbjogKGxlZnQ6IFRTb3VyY2UsIHJpZ2h0OiBUU291cmNlKSA9PiBUUmVzdWx0KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9sZWZ0ID0gbGVmdDtcbiAgICB0aGlzLl9yaWdodCA9IHJpZ2h0O1xuICAgIHRoaXMuX2ZuID0gZm47XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUl0ZXJhYmxlSXRlcmF0b3I8VFJlc3VsdD59XG4gKi9cbipbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCAvKiogQHR5cGUgeyFJdGVyYXRvcjxUU291cmNlPn0gKi8gaXQxID0gdGhpcy5fbGVmdFtTeW1ib2wuaXRlcmF0b3JdKCksIC8qKiBAdHlwZSB7IUl0ZXJhdG9yPFRTb3VyY2U+fSAqLyBpdDIgPSB0aGlzLl9yaWdodFtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgbGV0IC8qKiBAdHlwZSB7P30gKi8gbmV4dDEsIC8qKiBAdHlwZSB7P30gKi8gbmV4dDI7XG4gICAgd2hpbGUgKCEobmV4dDEgPSBpdDEubmV4dCgpKS5kb25lICYmICghKG5leHQyID0gaXQyLm5leHQoKSkuZG9uZSkpIHtcbiAgICAgIHlpZWxkIHRoaXMuX2ZuKG5leHQxLnZhbHVlLCBuZXh0Mi52YWx1ZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIFppcEl0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFJdGVyYWJsZTxUU291cmNlPn0gKi9cblppcEl0ZXJhYmxlLnByb3RvdHlwZS5fbGVmdDtcbi8qKiBAdHlwZSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuWmlwSXRlcmFibGUucHJvdG90eXBlLl9yaWdodDtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFNvdXJjZSwgVFNvdXJjZSk6IFRSZXN1bHR9ICovXG5aaXBJdGVyYWJsZS5wcm90b3R5cGUuX2ZuO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlLCBUUmVzdWx0XG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUU291cmNlPn0gbGVmdFxuICogQHBhcmFtIHshSXRlcmFibGU8VFNvdXJjZT59IHJpZ2h0XG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UsIFRTb3VyY2UpOiBUUmVzdWx0fSBmblxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuSXRlcmFibGVYPFRSZXN1bHQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gemlwPFRTb3VyY2UsIFRSZXN1bHQ+KFxuICAgIGxlZnQ6IEl0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHJpZ2h0OiBJdGVyYWJsZTxUU291cmNlPixcbiAgICBmbjogKGxlZnQ6IFRTb3VyY2UsIHJpZ2h0OiBUU291cmNlKSA9PiBUUmVzdWx0KTogSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBaaXBJdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0PihsZWZ0LCByaWdodCwgZm4pO1xufVxuIl19