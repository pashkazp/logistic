goog.module('targets.es5.cls.iterable.foreach'); exports = {}; var module = {id: 'targets/es5/cls/iterable/foreach.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var bindcallback_1 = goog.require('targets.es5.cls.internal.bindcallback');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.bindcallback");
/**
 * Iterates the sequence and invokes the given action for each value in the sequence.
 * @template TSource
 * @param {!Iterable<TSource>} source
 * @param {function(TSource, number): void} callback
 * @param {?=} thisArg
 * @return {void}
 */
function forEach(source, callback, thisArg) {
    var /** @type {number} */ i = 0;
    var /** @type {?} */ fn = bindcallback_1.bindCallback(callback, thisArg, 2);
    try {
        for (var source_1 = __values(source), source_1_1 = source_1.next(); !source_1_1.done; source_1_1 = source_1.next()) {
            var item = source_1_1.value;
            fn(item, i++);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (source_1_1 && !source_1_1.done && (_a = source_1.return)) _a.call(source_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    var e_1, _a;
}
exports.forEach = forEach;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9mb3JlYWNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCx5REFMcUI7QUFNckIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1EQUFtRCxDQUFDLENBQUM7QUFDM0c7Ozs7Ozs7R0FPRztBQU5ILGlCQVFJLE1BUHlCLEVBUXpCLFFBUGlELEVBUWpELE9BUGE7SUFRZixJQUFJLHFCQVBELENBQUEsQ0FBRSxHQUFFLENBQUUsQ0FBQztJQVFWLElBQU0sZ0JBUEQsQ0FBQSxFQUFHLEdBQUUsMkJBQWEsQ0FBQyxRQUFRLEVBQUMsT0FBUSxFQUFDLENBQUUsQ0FBQyxDQUFDOztRQVE5QyxHQUFHLENBQUMsQ0FQWSxJQUFBLFdBQUEsU0FBQSxNQUFPLENBQUEsOEJBQUE7WUFBbEIsSUFBRyxJQUFLLG1CQUFBO1lBUVgsRUFQRSxDQUFDLElBQUksRUFBQyxDQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2Y7Ozs7Ozs7Ozs7QUFRSCxDQVBDO0FBVEQsMEJBU0MiLCJmaWxlIjoiZm9yZWFjaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IGJpbmRDYWxsYmFjayB9IGZyb20gJy4uL2ludGVybmFsL2JpbmRjYWxsYmFjayc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pbnRlcm5hbC5iaW5kY2FsbGJhY2tcIik7XG4vKipcbiAqIEl0ZXJhdGVzIHRoZSBzZXF1ZW5jZSBhbmQgaW52b2tlcyB0aGUgZ2l2ZW4gYWN0aW9uIGZvciBlYWNoIHZhbHVlIGluIHRoZSBzZXF1ZW5jZS5cbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UsIG51bWJlcik6IHZvaWR9IGNhbGxiYWNrXG4gKiBAcGFyYW0gez89fSB0aGlzQXJnXG4gKiBAcmV0dXJuIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9yRWFjaDxUU291cmNlPihcbiAgICBzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGNhbGxiYWNrOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IHZvaWQsXG4gICAgdGhpc0FyZz86IGFueSk6IHZvaWQge1xuICBsZXQgLyoqIEB0eXBlIHtudW1iZXJ9ICovIGkgPSAwO1xuICBjb25zdCAvKiogQHR5cGUgez99ICovIGZuID0gYmluZENhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAyKTtcbiAgZm9yIChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHNvdXJjZSkge1xuICAgIGZuKGl0ZW0sIGkrKyk7XG4gIH1cbn1cbiJdfQ==