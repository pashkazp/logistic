goog.module('targets.es5.cls.iterable.count'); exports = {}; var module = {id: 'targets/es5/cls/iterable/count.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * Returns a number that represents how many elements in the specified sequence satisfy a condition if present,
 * else the number of items in the collection.
 * @template T
 * @param {!Iterable<T>} source
 * @param {function(T): boolean=} predicate
 * @return {number}
 */
function count(source, predicate) {
    if (predicate === void 0) { predicate = function () { return true; }; }
    var /** @type {number} */ i = 0;
    try {
        for (var source_1 = __values(source), source_1_1 = source_1.next(); !source_1_1.done; source_1_1 = source_1.next()) {
            var item = source_1_1.value;
            if (predicate(item)) {
                i++;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (source_1_1 && !source_1_1.done && (_a = source_1.return)) _a.call(source_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return i;
    var e_1, _a;
}
exports.count = count;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9jb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBR0g7Ozs7Ozs7R0FPRztBQVBILGVBU0ksTUFSbUIsRUFTbkIsU0FSNkM7SUFRN0MsMEJBQUEsRUFBQSwwQkFSd0MsT0FBQSxJQUFLLEVBQUwsQ0FBSztJQVMvQyxJQUFJLHFCQVJELENBQUEsQ0FBRSxHQUFFLENBQUUsQ0FBQzs7UUFVVixHQUFHLENBQUMsQ0FSWSxJQUFBLFdBQUEsU0FBQSxNQUFPLENBQUEsOEJBQUE7WUFBbEIsSUFBRyxJQUFLLG1CQUFBO1lBU1gsRUFBRSxDQUFDLENBUkMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUEsQ0FBRTtnQkFTcEIsQ0FSQyxFQUFFLENBQUM7WUFTTixDQVJDO1NBQ0Y7Ozs7Ozs7OztJQVVELE1BUk0sQ0FBQSxDQUFFLENBQUM7O0FBU1gsQ0FSQztBQVpELHNCQVlDIiwiZmlsZSI6ImNvdW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuXG4vKipcbiAqIFJldHVybnMgYSBudW1iZXIgdGhhdCByZXByZXNlbnRzIGhvdyBtYW55IGVsZW1lbnRzIGluIHRoZSBzcGVjaWZpZWQgc2VxdWVuY2Ugc2F0aXNmeSBhIGNvbmRpdGlvbiBpZiBwcmVzZW50LFxuICogZWxzZSB0aGUgbnVtYmVyIG9mIGl0ZW1zIGluIHRoZSBjb2xsZWN0aW9uLlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVCk6IGJvb2xlYW49fSBwcmVkaWNhdGVcbiAqIEByZXR1cm4ge251bWJlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvdW50PFQ+KFxuICAgIHNvdXJjZTogSXRlcmFibGU8VD4sXG4gICAgcHJlZGljYXRlOiAodmFsdWU6IFQpID0+IGJvb2xlYW4gPSAoKSA9PiB0cnVlKTogbnVtYmVyIHtcbiAgbGV0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBpID0gMDtcblxuICBmb3IgKGxldCAvKiogQHR5cGUge1R9ICovIGl0ZW0gb2Ygc291cmNlKSB7XG4gICAgaWYgKHByZWRpY2F0ZShpdGVtKSkge1xuICAgICAgaSsrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBpO1xufVxuIl19