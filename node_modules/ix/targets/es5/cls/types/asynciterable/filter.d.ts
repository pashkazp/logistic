/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AsyncIterableX } from '../asynciterable';
/**
 * @template TSource
 * @param {(!Iterable<(TSource|!PromiseLike<TSource>)>|!AsyncIterable<TSource>)} source
 * @param {function(TSource, number): (boolean|!Promise<boolean>)} predicate
 * @param {?=} thisArg
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
export declare function filter<TSource>(source: Iterable<TSource | PromiseLike<TSource>> | AsyncIterable<TSource>, predicate: (value: TSource, index: number) => Promise<boolean> | boolean, thisArg?: any): AsyncIterableX<TSource>;
