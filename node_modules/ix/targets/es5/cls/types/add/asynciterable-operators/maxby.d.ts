/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AsyncIterableX } from '../../asynciterable';
/**
 * @ignore
 * @template TSource, TKey
 * @this {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 * @param {function(TSource): (TKey|!Promise<TKey>)} keySelector
 * @param {function(TKey, TKey): (number|!Promise<number>)=} comparer
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
export declare function maxByProto<TSource, TKey>(this: AsyncIterableX<TSource>, keySelector: (x: TSource) => TKey | Promise<TKey>, comparer?: (x: TKey, y: TKey) => number | Promise<number>): AsyncIterableX<TSource>;
declare module '../../asynciterable' {
    interface AsyncIterableX<T> {
        maxBy: typeof maxByProto;
    }
}
