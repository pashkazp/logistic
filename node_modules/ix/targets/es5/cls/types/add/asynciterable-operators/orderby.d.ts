/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AsyncIterableX } from '../../asynciterable';
import { OrderedAsyncIterableX } from '../../asynciterable/orderby';
import { thenBy as _thenBy, thenByDescending as _thenByDescending } from '../../asynciterable/orderby';
/**
 * @ignore
 * @template TKey, TSource
 * @this {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 * @param {function(TSource): TKey} keySelector
 * @param {function(TKey, TKey): number=} comparer
 * @return {!tsickle_forward_declare_2.OrderedAsyncIterableX<TKey, TSource>}
 */
export declare function orderByProto<TKey, TSource>(this: AsyncIterableX<TSource>, keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableX<TKey, TSource>;
/**
 * @ignore
 * @template TKey, TSource
 * @this {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 * @param {function(TSource): TKey} keySelector
 * @param {function(TKey, TKey): number=} comparer
 * @return {!tsickle_forward_declare_2.OrderedAsyncIterableX<TKey, TSource>}
 */
export declare function orderByDescendingProto<TKey, TSource>(this: AsyncIterableX<TSource>, keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableX<TKey, TSource>;
export declare namespace asynciterable {
    let thenBy: typeof _thenBy;
    let thenByDescending: typeof _thenByDescending;
}
declare module '../../asynciterable' {
    interface AsyncIterableX<T> {
        orderBy: typeof orderByProto;
        orderByDescending: typeof orderByDescendingProto;
    }
}
