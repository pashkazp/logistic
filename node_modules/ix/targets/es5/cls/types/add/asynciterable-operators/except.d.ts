/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AsyncIterableX } from '../../asynciterable';
/**
 * @ignore
 * @template TSource
 * @this {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 * @param {!AsyncIterable<TSource>} second
 * @param {function(TSource, TSource): (boolean|!Promise<boolean>)=} comparer
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
export declare function exceptProto<TSource>(this: AsyncIterableX<TSource>, second: AsyncIterable<TSource>, comparer?: (x: TSource, y: TSource) => boolean | Promise<boolean>): AsyncIterableX<TSource>;
declare module '../../asynciterable' {
    interface AsyncIterableX<T> {
        except: typeof exceptProto;
    }
}
