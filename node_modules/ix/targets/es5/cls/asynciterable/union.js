goog.module('targets.es5.cls.asynciterable.union'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/union.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var arrayindexof_1 = goog.require('targets.es5.cls.internal.arrayindexof');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.arrayindexof");
var comparer_1 = goog.require('targets.es5.cls.internal.comparer');
var tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.comparer");
/**
 * @template TSource
 */
var UnionAsyncIterable = (function (_super) {
    __extends(UnionAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} left
     * @param {!AsyncIterable<TSource>} right
     * @param {function(TSource, TSource): (boolean|!Promise<boolean>)} comparer
     */
    function UnionAsyncIterable(left, right, comparer) {
        var _this = _super.call(this) || this;
        _this._left = left;
        _this._right = right;
        _this._comparer = comparer;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    UnionAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var map, _a, _b, lItem, e_1_1, _c, _d, rItem, e_2_1, e_1, _e, e_2, _f;
            return __generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        map = [];
                        _g.label = 1;
                    case 1:
                        _g.trys.push([1, 9, 10, 15]);
                        _a = __asyncValues(this._left);
                        _g.label = 2;
                    case 2: return [4 /*yield*/, __await(_a.next())];
                    case 3:
                        if (!(_b = _g.sent(), !_b.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, __await(_b.value)];
                    case 4:
                        lItem = _g.sent();
                        return [4 /*yield*/, __await(arrayindexof_1.arrayIndexOfAsync(map, lItem, this._comparer))];
                    case 5:
                        if (!((_g.sent()) === -1)) return [3 /*break*/, 7];
                        map.push(lItem);
                        return [4 /*yield*/, lItem];
                    case 6:
                        _g.sent();
                        _g.label = 7;
                    case 7: return [3 /*break*/, 2];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_1_1 = _g.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _g.trys.push([10, , 13, 14]);
                        if (!(_b && !_b.done && (_e = _a.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, __await(_e.call(_a))];
                    case 11:
                        _g.sent();
                        _g.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15:
                        _g.trys.push([15, 23, 24, 29]);
                        _c = __asyncValues(this._right);
                        _g.label = 16;
                    case 16: return [4 /*yield*/, __await(_c.next())];
                    case 17:
                        if (!(_d = _g.sent(), !_d.done)) return [3 /*break*/, 22];
                        return [4 /*yield*/, __await(_d.value)];
                    case 18:
                        rItem = _g.sent();
                        return [4 /*yield*/, __await(arrayindexof_1.arrayIndexOfAsync(map, rItem, this._comparer))];
                    case 19:
                        if (!((_g.sent()) === -1)) return [3 /*break*/, 21];
                        map.push(rItem);
                        return [4 /*yield*/, rItem];
                    case 20:
                        _g.sent();
                        _g.label = 21;
                    case 21: return [3 /*break*/, 16];
                    case 22: return [3 /*break*/, 29];
                    case 23:
                        e_2_1 = _g.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 29];
                    case 24:
                        _g.trys.push([24, , 27, 28]);
                        if (!(_d && !_d.done && (_f = _c.return))) return [3 /*break*/, 26];
                        return [4 /*yield*/, __await(_f.call(_c))];
                    case 25:
                        _g.sent();
                        _g.label = 26;
                    case 26: return [3 /*break*/, 28];
                    case 27:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 28: return [7 /*endfinally*/];
                    case 29: return [2 /*return*/];
                }
            });
        });
    };
    return UnionAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function UnionAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    UnionAsyncIterable.prototype._left;
    /** @type {!AsyncIterable<TSource>} */
    UnionAsyncIterable.prototype._right;
    /** @type {function(TSource, TSource): (boolean|!Promise<boolean>)} */
    UnionAsyncIterable.prototype._comparer;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} left
 * @param {!AsyncIterable<TSource>} right
 * @param {function(TSource, TSource): (boolean|!Promise<boolean>)=} comparer
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function union(left, right, comparer) {
    if (comparer === void 0) { comparer = comparer_1.comparerAsync; }
    return new UnionAsyncIterable(left, right, comparer);
}
exports.union = union;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3VuaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxrREFMdUI7QUFNdkIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBTmhEO0FBT2xELHlEQU4wQjtBQU8xQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsbURBQW1ELENBQUMsQ0FQN0M7QUFRN0QsaURBUHNCO0FBUXRCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0FBQ3ZHOztHQUVHO0FBVEg7SUFBeUMsc0NBQXdCO0lBY2pFOzs7O09BSUc7SUFiRCw0QkFlSSxJQWQ0QixFQWU1QixLQWQ2QixFQWU3QixRQWRnRTtRQUhwRSxZQWtCRSxpQkFkTyxTQWtCUjtRQUhDLEtBZEksQ0FBQyxLQUFLLEdBQUUsSUFBSyxDQUFDO1FBZWxCLEtBZEksQ0FBQyxNQUFNLEdBQUUsS0FBTSxDQUFDO1FBZXBCLEtBZEksQ0FBQyxTQUFTLEdBQUUsUUFBUyxDQUFDOztJQWU1QixDQUFDO0lBQ0g7O09BRUc7SUFmTSw2QkFBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ0ssR0FBSSxHQUFFLEVBQUcsQ0FBQzs7Ozt3QkFDVSxLQUFBLGNBQUEsSUFBSyxDQUFDLEtBQUssQ0FBQTs7Ozs7Ozt3QkFBcEIsS0FBTSxZQUFBO3dCQUNkLDZCQUFLLGdDQUFrQixDQUFDLEdBQUcsRUFBQyxLQUFNLEVBQUMsSUFBSyxDQUFDLFNBQVMsQ0FBQyxHQUFBOzs2QkFBbkQsQ0FBQSxDQUFBLFNBQW1ELE1BQUksQ0FBRSxDQUFDLENBQUEsRUFBMUQsd0JBQTBEO3dCQWlCNUQsR0FoQkcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBaUJoQixxQkFoQkssS0FBTSxFQUFBOzt3QkFnQlgsU0FoQlcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFJTyxLQUFBLGNBQUEsSUFBSyxDQUFDLE1BQU0sQ0FBQTs7Ozs7Ozt3QkFBckIsS0FBTSxZQUFBO3dCQUNkLDZCQUFLLGdDQUFrQixDQUFDLEdBQUcsRUFBQyxLQUFNLEVBQUMsSUFBSyxDQUFDLFNBQVMsQ0FBQyxHQUFBOzs2QkFBbkQsQ0FBQSxDQUFBLFNBQW1ELE1BQUksQ0FBRSxDQUFDLENBQUEsRUFBMUQseUJBQTBEO3dCQWlCNUQsR0FoQkcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBaUJoQixxQkFoQkssS0FBTSxFQUFBOzt3QkFnQlgsU0FoQlcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR2pCO0lBQ0gseUJBQUE7QUFBQSxDQS9CQSxBQStCQSxDQS9CeUMsOEJBQWUsR0ErQnhEO0FBa0JBO0lBQ0Esc0NBQXNDO0lBQ3RDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7SUFDbkMsc0NBQXNDO0lBQ3RDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7SUFDcEMsc0VBQXNFO0lBQ3RFLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7QUFDdkMsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQS9CSCxlQWlDSSxJQWhDNEIsRUFpQzVCLEtBaEM2QixFQWlDN0IsUUFoQ2dGO0lBZ0NoRix5QkFBQSxFQUFBLFdBaENrRSx3QkFBYztJQWlDbEYsTUFoQ00sQ0FBQSxJQUFJLGtCQUFtQixDQUFVLElBQUksRUFBQyxLQUFNLEVBQUMsUUFBUyxDQUFDLENBQUM7QUFpQ2hFLENBaENDO0FBTEQsc0JBS0MiLCJmaWxlIjoidW5pb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZVwiKTtcbmltcG9ydCB7IGFycmF5SW5kZXhPZkFzeW5jIH0gZnJvbSAnLi4vaW50ZXJuYWwvYXJyYXlpbmRleG9mJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmFycmF5aW5kZXhvZlwiKTtcbmltcG9ydCB7IGNvbXBhcmVyQXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9jb21wYXJlcic7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8zID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pbnRlcm5hbC5jb21wYXJlclwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgVW5pb25Bc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfbGVmdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbnByaXZhdGUgX3JpZ2h0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPjtcbi8qKlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gbGVmdFxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gcmlnaHRcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSwgVFNvdXJjZSk6IChib29sZWFufCFQcm9taXNlPGJvb2xlYW4+KX0gY29tcGFyZXJcbiAqL1xuY29uc3RydWN0b3IoXG4gICAgICBsZWZ0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgcmlnaHQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBjb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9sZWZ0ID0gbGVmdDtcbiAgICB0aGlzLl9yaWdodCA9IHJpZ2h0O1xuICAgIHRoaXMuX2NvbXBhcmVyID0gY29tcGFyZXI7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGVJdGVyYXRvcjxUU291cmNlPn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7IUFycmF5PD8+fSAqLyBtYXAgPSBbXTtcbiAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGxJdGVtIG9mIHRoaXMuX2xlZnQpIHtcbiAgICAgIGlmIChhd2FpdCBhcnJheUluZGV4T2ZBc3luYyhtYXAsIGxJdGVtLCB0aGlzLl9jb21wYXJlcikgPT09IC0xKSB7XG4gICAgICAgIG1hcC5wdXNoKGxJdGVtKTtcbiAgICAgICAgeWllbGQgbEl0ZW07XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBySXRlbSBvZiB0aGlzLl9yaWdodCkge1xuICAgICAgaWYgKGF3YWl0IGFycmF5SW5kZXhPZkFzeW5jKG1hcCwgckl0ZW0sIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgbWFwLnB1c2gockl0ZW0pO1xuICAgICAgICB5aWVsZCBySXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gVW5pb25Bc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuVW5pb25Bc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fbGVmdDtcbi8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovXG5VbmlvbkFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9yaWdodDtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFNvdXJjZSwgVFNvdXJjZSk6IChib29sZWFufCFQcm9taXNlPGJvb2xlYW4+KX0gKi9cblVuaW9uQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2NvbXBhcmVyO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBsZWZ0XG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSByaWdodFxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlLCBUU291cmNlKTogKGJvb2xlYW58IVByb21pc2U8Ym9vbGVhbj4pPX0gY29tcGFyZXJcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFRTb3VyY2U+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gdW5pb248VFNvdXJjZT4oXG4gICAgbGVmdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICByaWdodDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBjb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+ID0gY29tcGFyZXJBc3luYyk6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBVbmlvbkFzeW5jSXRlcmFibGU8VFNvdXJjZT4obGVmdCwgcmlnaHQsIGNvbXBhcmVyKTtcbn1cbiJdfQ==