goog.module('targets.es5.cls.asynciterable.single'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/single.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {function(T): (boolean|!Promise<boolean>)=} selector
 * @return {!Promise<T>}
 */
function single(source, selector) {
    if (selector === void 0) { selector = function () { return true; }; }
    return __awaiter(this, void 0, void 0, function () {
        var result, hasResult, source_1, source_1_1, item, _a, e_1_1, e_1, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    hasResult = false;
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 10, 11, 16]);
                    source_1 = __asyncValues(source);
                    _c.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _c.sent(), !source_1_1.done)) return [3 /*break*/, 9];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _c.sent();
                    _a = hasResult;
                    if (!_a) return [3 /*break*/, 6];
                    return [4 /*yield*/, selector(item)];
                case 5:
                    _a = (_c.sent());
                    _c.label = 6;
                case 6:
                    if (_a) {
                        throw new Error('More than one element was found');
                    }
                    return [4 /*yield*/, selector(item)];
                case 7:
                    if (_c.sent()) {
                        result = item;
                        hasResult = true;
                    }
                    _c.label = 8;
                case 8: return [3 /*break*/, 2];
                case 9: return [3 /*break*/, 16];
                case 10:
                    e_1_1 = _c.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 16];
                case 11:
                    _c.trys.push([11, , 14, 15]);
                    if (!(source_1_1 && !source_1_1.done && (_b = source_1.return))) return [3 /*break*/, 13];
                    return [4 /*yield*/, _b.call(source_1)];
                case 12:
                    _c.sent();
                    _c.label = 13;
                case 13: return [3 /*break*/, 15];
                case 14:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 15: return [7 /*endfinally*/];
                case 16: return [2 /*return*/, result];
            }
        });
    });
}
exports.single = single;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3NpbmdsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBR0g7Ozs7O0dBS0c7QUFYSCxnQkFhSSxNQVp3QixFQWF4QixRQVorRDtJQVkvRCx5QkFBQSxFQUFBLHlCQVowRCxPQUFBLElBQUssRUFBTCxDQUFLOzs7Ozs7b0JBRTlELFNBQVUsR0FBRSxLQUFNLENBQUM7Ozs7b0JBQ0EsV0FBQSxjQUFBLE1BQU8sQ0FBQTs7Ozs7OztvQkFBZixJQUFLLFlBQUE7b0JBQ2IsS0FBQSxTQUFTLENBQUE7NkJBQVQsd0JBQVM7b0JBQUcscUJBQU0sUUFBUyxDQUFDLElBQUksQ0FBQyxFQUFBOzswQkFBckIsU0FBcUI7OztvQkFZckMsRUFBRSxDQUFDLENBWkMsSUFBa0MsQ0FBRTt3QkFhdEMsTUFaSyxJQUFJLEtBQU0sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO29CQWFyRCxDQVpDO29CQUNHLHFCQUFLLFFBQVMsQ0FBQyxJQUFJLENBQUMsRUFBQTs7b0JBWXhCLEVBQUUsQ0FBQyxDQVpDLFNBQW9CLENBQUMsQ0FBQSxDQUFFO3dCQWF6QixNQVpNLEdBQUUsSUFBSyxDQUFDO3dCQWFkLFNBWlMsR0FBRSxJQUFLLENBQUM7b0JBYW5CLENBWkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQWVILHNCQVpNLE1BQU8sRUFBQzs7OztDQUNmO0FBaEJELHdCQWdCQyIsImZpbGUiOiJzaW5nbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihUKTogKGJvb2xlYW58IVByb21pc2U8Ym9vbGVhbj4pPX0gc2VsZWN0b3JcbiAqIEByZXR1cm4geyFQcm9taXNlPFQ+fVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2luZ2xlPFQ+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgICBzZWxlY3RvcjogKHZhbHVlOiBUKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiA9ICgpID0+IHRydWUpOiBQcm9taXNlPFQgfCB1bmRlZmluZWQ+IHtcbiAgbGV0IC8qKiBAdHlwZSB7VH0gKi8gcmVzdWx0OiBUIHwgdW5kZWZpbmVkO1xuICBsZXQgLyoqIEB0eXBlIHtib29sZWFufSAqLyBoYXNSZXN1bHQgPSBmYWxzZTtcbiAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUfSAqLyBpdGVtIG9mIHNvdXJjZSkge1xuICAgIGlmIChoYXNSZXN1bHQgJiYgYXdhaXQgc2VsZWN0b3IoaXRlbSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTW9yZSB0aGFuIG9uZSBlbGVtZW50IHdhcyBmb3VuZCcpO1xuICAgIH1cbiAgICBpZiAoYXdhaXQgc2VsZWN0b3IoaXRlbSkpIHtcbiAgICAgIHJlc3VsdCA9IGl0ZW07XG4gICAgICBoYXNSZXN1bHQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4iXX0=