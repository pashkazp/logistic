goog.module('targets.es5.cls.asynciterable.sum'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/sum.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var identity_1 = goog.require('targets.es5.cls.internal.identity');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.identity");
/**
 * @param {!AsyncIterable<?>} source
 * @param {function(?): (number|!Promise<number>)=} selector
 * @return {!Promise<number>}
 */
function sum(source, selector) {
    if (selector === void 0) { selector = identity_1.identityAsync; }
    return __awaiter(this, void 0, void 0, function () {
        var sum, source_1, source_1_1, item, _a, e_1_1, e_1, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    sum = 0;
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 8, 9, 14]);
                    source_1 = __asyncValues(source);
                    _c.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _c.sent(), !source_1_1.done)) return [3 /*break*/, 7];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _c.sent();
                    _a = sum;
                    return [4 /*yield*/, selector(item)];
                case 5:
                    sum = _a + _c.sent();
                    _c.label = 6;
                case 6: return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 14];
                case 8:
                    e_1_1 = _c.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 14];
                case 9:
                    _c.trys.push([9, , 12, 13]);
                    if (!(source_1_1 && !source_1_1.done && (_b = source_1.return))) return [3 /*break*/, 11];
                    return [4 /*yield*/, _b.call(source_1)];
                case 10:
                    _c.sent();
                    _c.label = 11;
                case 11: return [3 /*break*/, 13];
                case 12:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 13: return [7 /*endfinally*/];
                case 14: return [2 /*return*/, sum];
            }
        });
    });
}
exports.sum = sum;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3N1bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsaURBTHNCO0FBTXRCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywrQ0FBK0MsQ0FBQyxDQU5qRDtBQWNyRDs7OztHQUlHO0FBVkgsYUFZSSxNQVgwQixFQVkxQixRQVg4RDtJQVc5RCx5QkFBQSxFQUFBLFdBWGdELHdCQUFjOzs7Ozs7b0JBQzdELEdBQUksR0FBRSxDQUFFLENBQUM7Ozs7b0JBQ1UsV0FBQSxjQUFBLE1BQU8sQ0FBQTs7Ozs7OztvQkFBZixJQUFLLFlBQUE7b0JBWWpCLEtBQUEsR0FYRyxDQUFBO29CQUFHLHFCQUFNLFFBQVMsQ0FBQyxJQUFJLENBQUMsRUFBQTs7b0JBVzNCLEdBWEcsR0FXSCxLQVhNLFNBQXFCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQWM5QixzQkFYTSxHQUFJLEVBQUM7Ozs7Q0FDWjtBQVRELGtCQVNDIiwiZmlsZSI6InN1bS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IGlkZW50aXR5QXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pbnRlcm5hbC5pZGVudGl0eVwiKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1bShcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8bnVtYmVyPixcbiAgICBzZWxlY3Rvcj86ICh4OiBudW1iZXIpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPik6IFByb21pc2U8bnVtYmVyPjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdW08VD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgIHNlbGVjdG9yOiAoeDogVCkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+KTogUHJvbWlzZTxudW1iZXI+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPD8+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oPyk6IChudW1iZXJ8IVByb21pc2U8bnVtYmVyPik9fSBzZWxlY3RvclxuICogQHJldHVybiB7IVByb21pc2U8bnVtYmVyPn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHN1bShcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8YW55PixcbiAgICBzZWxlY3RvcjogKHg6IGFueSkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+ID0gaWRlbnRpdHlBc3luYyk6IFByb21pc2U8bnVtYmVyPiB7XG4gIGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gc3VtID0gMDtcbiAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHs/fSAqLyBpdGVtIG9mIHNvdXJjZSkge1xuICAgIHN1bSArPSBhd2FpdCBzZWxlY3RvcihpdGVtKTtcbiAgfVxuXG4gIHJldHVybiBzdW07XG59XG4iXX0=