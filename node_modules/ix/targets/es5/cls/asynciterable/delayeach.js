goog.module('targets.es5.cls.asynciterable.delayeach'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/delayeach.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var _sleep_1 = goog.require('targets.es5.cls.asynciterable._sleep');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable._sleep");
/**
 * @template TSource
 */
var DelayEachAsyncIterable = (function (_super) {
    __extends(DelayEachAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {number} dueTime
     */
    function DelayEachAsyncIterable(source, dueTime) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._dueTime = dueTime;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    DelayEachAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var _a, _b, item, e_1_1, e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 8, 9, 14]);
                        _a = __asyncValues(this._source);
                        _d.label = 1;
                    case 1: return [4 /*yield*/, __await(_a.next())];
                    case 2:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 7];
                        return [4 /*yield*/, __await(_b.value)];
                    case 3:
                        item = _d.sent();
                        return [4 /*yield*/, __await(_sleep_1.sleep(this._dueTime))];
                    case 4:
                        _d.sent();
                        return [4 /*yield*/, item];
                    case 5:
                        _d.sent();
                        _d.label = 6;
                    case 6: return [3 /*break*/, 1];
                    case 7: return [3 /*break*/, 14];
                    case 8:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 14];
                    case 9:
                        _d.trys.push([9, , 12, 13]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 11];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 10:
                        _d.sent();
                        _d.label = 11;
                    case 11: return [3 /*break*/, 13];
                    case 12:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 13: return [7 /*endfinally*/];
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    return DelayEachAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function DelayEachAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    DelayEachAsyncIterable.prototype._source;
    /** @type {number} */
    DelayEachAsyncIterable.prototype._dueTime;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @param {number} dueTime
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function delayEach(source, dueTime) {
    return new DelayEachAsyncIterable(source, dueTime);
}
exports.delayEach = delayEach;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2RlbGF5ZWFjaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsa0RBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU5oRDtBQU9sRCxtQ0FOYztBQU9kLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO0FBQzFHOztHQUVHO0FBUkg7SUFBNkMsMENBQXdCO0lBWXJFOzs7T0FHRztJQVhELGdDQUFZLE1BQThCLEVBQUMsT0FBZ0I7UUFBM0QsWUFhRSxpQkFaTyxTQWVSO1FBRkMsS0FaSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7UUFhdEIsS0FaSSxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUM7O0lBYTFCLENBQUM7SUFDSDs7T0FFRztJQWJNLGlDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozs7d0JBQzBCLEtBQUEsY0FBQSxJQUFLLENBQUMsT0FBTyxDQUFBOzs7Ozs7O3dCQUFyQixJQUFLLFlBQUE7d0JBZW5CLDZCQWRLLGNBQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUE7O3dCQWMxQixTQWQwQixDQUFDO3dCQWUzQixxQkFkSyxJQUFLLEVBQUE7O3dCQWNWLFNBZFUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBRWQ7SUFDSCw2QkFBQTtBQUFBLENBaEJBLEFBZ0JBLENBaEI2Qyw4QkFBZSxHQWdCNUQ7QUFnQkE7SUFDQSxzQ0FBc0M7SUFDdEMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztJQUN6QyxxQkFBcUI7SUFDckIsc0JBQXNCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztBQUMxQyxDQUFDO0FBRUQ7Ozs7O0dBS0c7QUExQkgsbUJBNEJJLE1BM0I4QixFQTRCOUIsT0EzQmU7SUE0QmpCLE1BM0JNLENBQUEsSUFBSSxzQkFBdUIsQ0FBVSxNQUFNLEVBQUMsT0FBUSxDQUFDLENBQUM7QUE0QjlELENBQUM7QUEvQkQsOEJBK0JDIiwiZmlsZSI6ImRlbGF5ZWFjaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgc2xlZXAgfSBmcm9tICcuL19zbGVlcCc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlLl9zbGVlcFwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgRGVsYXlFYWNoQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbnByaXZhdGUgX2R1ZVRpbWU6IG51bWJlcjtcbi8qKlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge251bWJlcn0gZHVlVGltZVxuICovXG5jb25zdHJ1Y3Rvcihzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sIGR1ZVRpbWU6IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2R1ZVRpbWUgPSBkdWVUaW1lO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8VFNvdXJjZT59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciBhd2FpdCAoY29uc3QgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgYXdhaXQgc2xlZXAodGhpcy5fZHVlVGltZSk7XG4gICAgICB5aWVsZCBpdGVtO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBEZWxheUVhY2hBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuRGVsYXlFYWNoQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuRGVsYXlFYWNoQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2R1ZVRpbWU7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtudW1iZXJ9IGR1ZVRpbWVcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFRTb3VyY2U+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVsYXlFYWNoPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBkdWVUaW1lOiBudW1iZXIpOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgRGVsYXlFYWNoQXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UsIGR1ZVRpbWUpO1xufSJdfQ==