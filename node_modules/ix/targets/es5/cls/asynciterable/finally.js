goog.module('targets.es5.cls.asynciterable.finally'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/finally.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
var FinalyAsyncIterable = (function (_super) {
    __extends(FinalyAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {function(): (void|!Promise<void>)} action
     */
    function FinalyAsyncIterable(source, action) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._action = action;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    FinalyAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var _a, _b, item, e_1_1, e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, , 15, 17]);
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 8, 9, 14]);
                        _a = __asyncValues(this._source);
                        _d.label = 2;
                    case 2: return [4 /*yield*/, __await(_a.next())];
                    case 3:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 7];
                        return [4 /*yield*/, __await(_b.value)];
                    case 4:
                        item = _d.sent();
                        return [4 /*yield*/, item];
                    case 5:
                        _d.sent();
                        _d.label = 6;
                    case 6: return [3 /*break*/, 2];
                    case 7: return [3 /*break*/, 14];
                    case 8:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 14];
                    case 9:
                        _d.trys.push([9, , 12, 13]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 11];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 10:
                        _d.sent();
                        _d.label = 11;
                    case 11: return [3 /*break*/, 13];
                    case 12:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 13: return [7 /*endfinally*/];
                    case 14: return [3 /*break*/, 17];
                    case 15: return [4 /*yield*/, __await(this._action())];
                    case 16:
                        _d.sent();
                        return [7 /*endfinally*/];
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    return FinalyAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function FinalyAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    FinalyAsyncIterable.prototype._source;
    /** @type {function(): (void|!Promise<void>)} */
    FinalyAsyncIterable.prototype._action;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @param {function(): (void|!Promise<void>)} action
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function _finally(source, action) {
    return new FinalyAsyncIterable(source, action);
}
exports._finally = _finally;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2ZpbmFsbHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILGtEQUx1QjtBQU12QixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsMkNBQTJDLENBQUMsQ0FBQztBQUNuRzs7R0FFRztBQVBIO0lBQTBDLHVDQUF3QjtJQVdsRTs7O09BR0c7SUFWRCw2QkFBWSxNQUE4QixFQUFDLE1BQW1DO1FBQTlFLFlBWUUsaUJBWE8sU0FjUjtRQUZDLEtBWEksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDO1FBWXRCLEtBWEksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDOztJQVl4QixDQUFDO0lBQ0g7O09BRUc7SUFaTSw4QkFBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7Ozs7O3dCQUUwQixLQUFBLGNBQUEsSUFBSyxDQUFDLE9BQU8sQ0FBQTs7Ozs7Ozt3QkFBckIsSUFBSyxZQUFBO3dCQUFtQixxQkFBTSxJQUFLLEVBQUE7O3dCQUFYLFNBQVcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQWVsRCw2QkFiSyxJQUFLLENBQUMsT0FBTyxFQUFFLEdBQUE7O3dCQWFwQixTQWJvQixDQUFDOzs7Ozs7S0FFeEI7SUFDSCwwQkFBQTtBQUFBLENBakJBLEFBaUJBLENBakIwQyw4QkFBZSxHQWlCekQ7QUFlQTtJQUNBLHNDQUFzQztJQUN0QyxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0lBQ3RDLGdEQUFnRDtJQUNoRCxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQ3RDLENBQUM7QUFFRDs7Ozs7R0FLRztBQXpCSCxrQkEyQkksTUExQjhCLEVBMkI5QixNQTFCa0M7SUEyQnBDLE1BMUJNLENBQUEsSUFBSSxtQkFBb0IsQ0FBVSxNQUFNLEVBQUMsTUFBTyxDQUFDLENBQUM7QUEyQjFELENBMUJDO0FBSkQsNEJBSUMiLCJmaWxlIjoiZmluYWxseS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBGaW5hbHlBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfYWN0aW9uOiAoKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPjtcbi8qKlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6ICh2b2lkfCFQcm9taXNlPHZvaWQ+KX0gYWN0aW9uXG4gKi9cbmNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgYWN0aW9uOiAoKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2FjdGlvbiA9IGFjdGlvbjtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICB0cnkge1xuICAgICAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHRoaXMuX3NvdXJjZSkgeyB5aWVsZCBpdGVtOyB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGF3YWl0IHRoaXMuX2FjdGlvbigpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBGaW5hbHlBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuRmluYWx5QXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oKTogKHZvaWR8IVByb21pc2U8dm9pZD4pfSAqL1xuRmluYWx5QXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2FjdGlvbjtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6ICh2b2lkfCFQcm9taXNlPHZvaWQ+KX0gYWN0aW9uXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5Bc3luY0l0ZXJhYmxlWDxUU291cmNlPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIF9maW5hbGx5PFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBhY3Rpb246ICgpID0+IHZvaWQgfCBQcm9taXNlPHZvaWQ+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IEZpbmFseUFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBhY3Rpb24pO1xufVxuIl19