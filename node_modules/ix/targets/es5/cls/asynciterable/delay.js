goog.module('targets.es5.cls.asynciterable.delay'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/delay.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var _sleep_1 = goog.require('targets.es5.cls.asynciterable._sleep');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable._sleep");
/**
 * @template TSource
 */
var DelayAsyncIterable = (function (_super) {
    __extends(DelayAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {number} dueTime
     */
    function DelayAsyncIterable(source, dueTime) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._dueTime = dueTime;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    DelayAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var _a, _b, item, e_1_1, e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4 /*yield*/, __await(_sleep_1.sleep(this._dueTime))];
                    case 1:
                        _d.sent();
                        _d.label = 2;
                    case 2:
                        _d.trys.push([2, 9, 10, 15]);
                        _a = __asyncValues(this._source);
                        _d.label = 3;
                    case 3: return [4 /*yield*/, __await(_a.next())];
                    case 4:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, __await(_b.value)];
                    case 5:
                        item = _d.sent();
                        return [4 /*yield*/, item];
                    case 6:
                        _d.sent();
                        _d.label = 7;
                    case 7: return [3 /*break*/, 3];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _d.trys.push([10, , 13, 14]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 11:
                        _d.sent();
                        _d.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15: return [2 /*return*/];
                }
            });
        });
    };
    return DelayAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function DelayAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    DelayAsyncIterable.prototype._source;
    /** @type {number} */
    DelayAsyncIterable.prototype._dueTime;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @param {number} dueTime
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function delay(source, dueTime) {
    return new DelayAsyncIterable(source, dueTime);
}
exports.delay = delay;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2RlbGF5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxrREFMdUI7QUFNdkIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBTmhEO0FBT2xELG1DQU5jO0FBT2QsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7QUFDMUc7O0dBRUc7QUFSSDtJQUF5QyxzQ0FBd0I7SUFZakU7OztPQUdHO0lBWEQsNEJBQVksTUFBOEIsRUFBQyxPQUFnQjtRQUEzRCxZQWFFLGlCQVpPLFNBZVI7UUFGQyxLQVpJLENBQUMsT0FBTyxHQUFFLE1BQU8sQ0FBQztRQWF0QixLQVpJLENBQUMsUUFBUSxHQUFFLE9BQVEsQ0FBQzs7SUFhMUIsQ0FBQztJQUNIOztPQUVHO0lBYk0sNkJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7NEJBZUUsNkJBZEssY0FBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBQTs7d0JBYzFCLFNBZDBCLENBQUM7Ozs7d0JBQ0gsS0FBQSxjQUFBLElBQUssQ0FBQyxPQUFPLENBQUE7Ozs7Ozs7d0JBQXJCLElBQUssWUFBQTt3QkFlbkIscUJBZEssSUFBSyxFQUFBOzt3QkFjVixTQWRVLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUVkO0lBQ0gseUJBQUE7QUFBQSxDQWhCQSxBQWdCQSxDQWhCeUMsOEJBQWUsR0FnQnhEO0FBZ0JBO0lBQ0Esc0NBQXNDO0lBQ3RDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7SUFDckMscUJBQXFCO0lBQ3JCLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDdEMsQ0FBQztBQUVEOzs7OztHQUtHO0FBMUJILGVBNEJJLE1BM0I4QixFQTRCOUIsT0EzQmU7SUE0QmpCLE1BM0JNLENBQUEsSUFBSSxrQkFBbUIsQ0FBVSxNQUFNLEVBQUMsT0FBUSxDQUFDLENBQUM7QUE0QjFELENBQUM7QUEvQkQsc0JBK0JDIiwiZmlsZSI6ImRlbGF5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gJy4vX3NsZWVwJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGUuX3NsZWVwXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBEZWxheUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG5wcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG5wcml2YXRlIF9kdWVUaW1lOiBudW1iZXI7XG4vKipcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtudW1iZXJ9IGR1ZVRpbWVcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBkdWVUaW1lOiBudW1iZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9kdWVUaW1lID0gZHVlVGltZTtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBhd2FpdCBzbGVlcCh0aGlzLl9kdWVUaW1lKTtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIHlpZWxkIGl0ZW07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIERlbGF5QXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gKi9cbkRlbGF5QXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuRGVsYXlBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fZHVlVGltZTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge251bWJlcn0gZHVlVGltZVxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWxheTxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgZHVlVGltZTogbnVtYmVyKTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IERlbGF5QXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UsIGR1ZVRpbWUpO1xufSJdfQ==