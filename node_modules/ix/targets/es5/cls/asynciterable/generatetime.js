goog.module('targets.es5.cls.asynciterable.generatetime'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/generatetime.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var _sleep_1 = goog.require('targets.es5.cls.asynciterable._sleep');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable._sleep");
/**
 * @template TState, TResult
 */
var GenerateTimeAsyncIterable = (function (_super) {
    __extends(GenerateTimeAsyncIterable, _super);
    /**
     * @param {TState} initialState
     * @param {function(TState): (boolean|!Promise<boolean>)} condition
     * @param {function(TState): (TState|!Promise<TState>)} iterate
     * @param {function(TState): (TResult|!Promise<TResult>)} resultSelector
     * @param {function(TState): (number|!Promise<number>)} timeSelector
     */
    function GenerateTimeAsyncIterable(initialState, condition, iterate, resultSelector, timeSelector) {
        var _this = _super.call(this) || this;
        _this._initialState = initialState;
        _this._condition = condition;
        _this._iterate = iterate;
        _this._resultSelector = resultSelector;
        _this._timeSelector = timeSelector;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TResult>}
     */
    GenerateTimeAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var i, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        i = this._initialState;
                        _b.label = 1;
                    case 1: return [4 /*yield*/, __await(this._condition(i))];
                    case 2:
                        if (!_b.sent()) return [3 /*break*/, 9];
                        _a = _sleep_1.sleep;
                        return [4 /*yield*/, __await(this._timeSelector(i))];
                    case 3: return [4 /*yield*/, __await.apply(void 0, [_a.apply(void 0, [_b.sent()])])];
                    case 4:
                        _b.sent();
                        return [4 /*yield*/, __await(this._resultSelector(i))];
                    case 5: return [4 /*yield*/, _b.sent()];
                    case 6:
                        _b.sent();
                        _b.label = 7;
                    case 7: return [4 /*yield*/, __await(this._iterate(i))];
                    case 8:
                        i = _b.sent();
                        return [3 /*break*/, 1];
                    case 9: return [2 /*return*/];
                }
            });
        });
    };
    return GenerateTimeAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function GenerateTimeAsyncIterable_tsickle_Closure_declarations() {
    /** @type {TState} */
    GenerateTimeAsyncIterable.prototype._initialState;
    /** @type {function(TState): (boolean|!Promise<boolean>)} */
    GenerateTimeAsyncIterable.prototype._condition;
    /** @type {function(TState): (TState|!Promise<TState>)} */
    GenerateTimeAsyncIterable.prototype._iterate;
    /** @type {function(TState): (TResult|!Promise<TResult>)} */
    GenerateTimeAsyncIterable.prototype._resultSelector;
    /** @type {function(TState): (number|!Promise<number>)} */
    GenerateTimeAsyncIterable.prototype._timeSelector;
}
/**
 * @template TState, TResult
 * @param {TState} initialState
 * @param {function(TState): (boolean|!Promise<boolean>)} condition
 * @param {function(TState): (TState|!Promise<TState>)} iterate
 * @param {function(TState): (TResult|!Promise<TResult>)} resultSelector
 * @param {function(TState): (number|!Promise<number>)} timeSelector
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TResult>}
 */
function generateTime(initialState, condition, iterate, resultSelector, timeSelector) {
    return new GenerateTimeAsyncIterable(initialState, condition, iterate, resultSelector, timeSelector);
}
exports.generateTime = generateTime;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2dlbmVyYXRldGltZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsa0RBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU5oRDtBQU9sRCxtQ0FOYztBQU9kLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO0FBQzFHOztHQUVHO0FBUkg7SUFBd0QsNkNBQXdCO0lBZWhGOzs7Ozs7T0FNRztJQWRELG1DQWdCSSxZQWZvQixFQWdCcEIsU0Fmd0QsRUFnQnhELE9BZm9ELEVBZ0JwRCxjQWY2RCxFQWdCN0QsWUFmeUQ7UUFMN0QsWUFxQkUsaUJBZk8sU0FxQlI7UUFMQyxLQWZJLENBQUMsYUFBYSxHQUFFLFlBQWEsQ0FBQztRQWdCbEMsS0FmSSxDQUFDLFVBQVUsR0FBRSxTQUFVLENBQUM7UUFnQjVCLEtBZkksQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDO1FBZ0J4QixLQWZJLENBQUMsZUFBZSxHQUFFLGNBQWUsQ0FBQztRQWdCdEMsS0FmSSxDQUFDLGFBQWEsR0FBRSxZQUFhLENBQUM7O0lBZ0JwQyxDQUFDO0lBQ0g7O09BRUc7SUFoQk0sb0NBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7O3dCQUNVLENBQUUsR0FBRSxJQUFLLENBQUMsYUFBYTs7NEJBQUMsNkJBQU0sSUFBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBQTs7NkJBQXpCLFNBQXlCO3dCQUNsRCxLQUFBLGNBQU0sQ0FBQTt3QkFBQyw2QkFBSyxJQUFLLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxHQUFBOzRCQWlCdkMsNENBakJLLGtCQUFPLFNBQTJCLEVBQUMsSUFBQTs7d0JBaUJ4QyxTQWpCd0MsQ0FBQzt3QkFDcEMsNkJBQU0sSUFBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsR0FBQTs0QkFpQm5DLHFCQWpCSyxTQUE4QixFQUFBOzt3QkFpQm5DLFNBakJtQyxDQUFDOzs0QkFGd0IsNkJBQU0sSUFBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBQTs7d0JBQTNCLENBQUUsR0FBRSxTQUF1QixDQUFBOzs7Ozs7S0FJdEY7SUFDSCxnQ0FBQTtBQUFBLENBM0JBLEFBMkJBLENBM0J3RCw4QkFBZSxHQTJCdkU7QUFtQkE7SUFDQSxxQkFBcUI7SUFDckIseUJBQXlCLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztJQUNsRCw0REFBNEQ7SUFDNUQseUJBQXlCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztJQUMvQywwREFBMEQ7SUFDMUQseUJBQXlCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztJQUM3Qyw0REFBNEQ7SUFDNUQseUJBQXlCLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQztJQUNwRCwwREFBMEQ7SUFDMUQseUJBQXlCLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztBQUNsRCxDQUFDO0FBRUQ7Ozs7Ozs7O0dBUUc7QUF0Q0gsc0JBd0NJLFlBdkNvQixFQXdDcEIsU0F2Q3dELEVBd0N4RCxPQXZDb0QsRUF3Q3BELGNBdkM2RCxFQXdDN0QsWUF2Q3lEO0lBd0MzRCxNQXZDTSxDQUFBLElBQUkseUJBQTBCLENBd0NsQyxZQXZDWSxFQXdDWixTQXZDUyxFQXdDVCxPQXZDTyxFQXdDUCxjQXZDYyxFQXdDZCxZQXZDWSxDQUFDLENBQUM7QUF3Q2xCLENBdkNDO0FBWkQsb0NBWUMiLCJmaWxlIjoiZ2VuZXJhdGV0aW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gJy4vX3NsZWVwJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGUuX3NsZWVwXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFN0YXRlLCBUUmVzdWx0XG4gKi9cbmNsYXNzIEdlbmVyYXRlVGltZUFzeW5jSXRlcmFibGU8VFN0YXRlLCBUUmVzdWx0PiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbnByaXZhdGUgX2luaXRpYWxTdGF0ZTogVFN0YXRlO1xucHJpdmF0ZSBfY29uZGl0aW9uOiAodmFsdWU6IFRTdGF0ZSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj47XG5wcml2YXRlIF9pdGVyYXRlOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFN0YXRlIHwgUHJvbWlzZTxUU3RhdGU+O1xucHJpdmF0ZSBfcmVzdWx0U2VsZWN0b3I6ICh2YWx1ZTogVFN0YXRlKSA9PiBUUmVzdWx0IHwgUHJvbWlzZTxUUmVzdWx0PjtcbnByaXZhdGUgX3RpbWVTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPjtcbi8qKlxuICogQHBhcmFtIHtUU3RhdGV9IGluaXRpYWxTdGF0ZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiAoYm9vbGVhbnwhUHJvbWlzZTxib29sZWFuPil9IGNvbmRpdGlvblxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiAoVFN0YXRlfCFQcm9taXNlPFRTdGF0ZT4pfSBpdGVyYXRlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTdGF0ZSk6IChUUmVzdWx0fCFQcm9taXNlPFRSZXN1bHQ+KX0gcmVzdWx0U2VsZWN0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogKG51bWJlcnwhUHJvbWlzZTxudW1iZXI+KX0gdGltZVNlbGVjdG9yXG4gKi9cbmNvbnN0cnVjdG9yKFxuICAgICAgaW5pdGlhbFN0YXRlOiBUU3RhdGUsXG4gICAgICBjb25kaXRpb246ICh2YWx1ZTogVFN0YXRlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPixcbiAgICAgIGl0ZXJhdGU6ICh2YWx1ZTogVFN0YXRlKSA9PiBUU3RhdGUgfCBQcm9taXNlPFRTdGF0ZT4sXG4gICAgICByZXN1bHRTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IFRSZXN1bHQgfCBQcm9taXNlPFRSZXN1bHQ+LFxuICAgICAgdGltZVNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9pbml0aWFsU3RhdGUgPSBpbml0aWFsU3RhdGU7XG4gICAgdGhpcy5fY29uZGl0aW9uID0gY29uZGl0aW9uO1xuICAgIHRoaXMuX2l0ZXJhdGUgPSBpdGVyYXRlO1xuICAgIHRoaXMuX3Jlc3VsdFNlbGVjdG9yID0gcmVzdWx0U2VsZWN0b3I7XG4gICAgdGhpcy5fdGltZVNlbGVjdG9yID0gdGltZVNlbGVjdG9yO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8VFJlc3VsdD59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IC8qKiBAdHlwZSB7VFN0YXRlfSAqLyBpID0gdGhpcy5faW5pdGlhbFN0YXRlOyBhd2FpdCB0aGlzLl9jb25kaXRpb24oaSk7IGkgPSBhd2FpdCB0aGlzLl9pdGVyYXRlKGkpKSB7XG4gICAgICBhd2FpdCBzbGVlcChhd2FpdCB0aGlzLl90aW1lU2VsZWN0b3IoaSkpO1xuICAgICAgeWllbGQgYXdhaXQgdGhpcy5fcmVzdWx0U2VsZWN0b3IoaSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIEdlbmVyYXRlVGltZUFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7VFN0YXRlfSAqL1xuR2VuZXJhdGVUaW1lQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2luaXRpYWxTdGF0ZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFN0YXRlKTogKGJvb2xlYW58IVByb21pc2U8Ym9vbGVhbj4pfSAqL1xuR2VuZXJhdGVUaW1lQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2NvbmRpdGlvbjtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFN0YXRlKTogKFRTdGF0ZXwhUHJvbWlzZTxUU3RhdGU+KX0gKi9cbkdlbmVyYXRlVGltZUFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9pdGVyYXRlO1xuLyoqIEB0eXBlIHtmdW5jdGlvbihUU3RhdGUpOiAoVFJlc3VsdHwhUHJvbWlzZTxUUmVzdWx0Pil9ICovXG5HZW5lcmF0ZVRpbWVBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fcmVzdWx0U2VsZWN0b3I7XG4vKiogQHR5cGUge2Z1bmN0aW9uKFRTdGF0ZSk6IChudW1iZXJ8IVByb21pc2U8bnVtYmVyPil9ICovXG5HZW5lcmF0ZVRpbWVBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fdGltZVNlbGVjdG9yO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU3RhdGUsIFRSZXN1bHRcbiAqIEBwYXJhbSB7VFN0YXRlfSBpbml0aWFsU3RhdGVcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogKGJvb2xlYW58IVByb21pc2U8Ym9vbGVhbj4pfSBjb25kaXRpb25cbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogKFRTdGF0ZXwhUHJvbWlzZTxUU3RhdGU+KX0gaXRlcmF0ZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiAoVFJlc3VsdHwhUHJvbWlzZTxUUmVzdWx0Pil9IHJlc3VsdFNlbGVjdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTdGF0ZSk6IChudW1iZXJ8IVByb21pc2U8bnVtYmVyPil9IHRpbWVTZWxlY3RvclxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVRpbWU8VFN0YXRlLCBUUmVzdWx0PihcbiAgICBpbml0aWFsU3RhdGU6IFRTdGF0ZSxcbiAgICBjb25kaXRpb246ICh2YWx1ZTogVFN0YXRlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPixcbiAgICBpdGVyYXRlOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFN0YXRlIHwgUHJvbWlzZTxUU3RhdGU+LFxuICAgIHJlc3VsdFNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD4sXG4gICAgdGltZVNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+KTogQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IEdlbmVyYXRlVGltZUFzeW5jSXRlcmFibGU8VFN0YXRlLCBUUmVzdWx0PihcbiAgICBpbml0aWFsU3RhdGUsXG4gICAgY29uZGl0aW9uLFxuICAgIGl0ZXJhdGUsXG4gICAgcmVzdWx0U2VsZWN0b3IsXG4gICAgdGltZVNlbGVjdG9yKTtcbn1cbiJdfQ==