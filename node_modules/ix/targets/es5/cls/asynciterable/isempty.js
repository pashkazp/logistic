goog.module('targets.es5.cls.asynciterable.isempty'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/isempty.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @return {!Promise<boolean>}
 */
function isEmpty(source) {
    return __awaiter(this, void 0, void 0, function () {
        var source_1, source_1_1, _, e_1_1, e_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _b.trys.push([0, 6, 7, 12]);
                    source_1 = __asyncValues(source);
                    _b.label = 1;
                case 1: return [4 /*yield*/, source_1.next()];
                case 2:
                    if (!(source_1_1 = _b.sent(), !source_1_1.done)) return [3 /*break*/, 5];
                    return [4 /*yield*/, source_1_1.value];
                case 3:
                    _ = _b.sent();
                    return [2 /*return*/, false];
                case 4: return [3 /*break*/, 1];
                case 5: return [3 /*break*/, 12];
                case 6:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 12];
                case 7:
                    _b.trys.push([7, , 10, 11]);
                    if (!(source_1_1 && !source_1_1.done && (_a = source_1.return))) return [3 /*break*/, 9];
                    return [4 /*yield*/, _a.call(source_1)];
                case 8:
                    _b.sent();
                    _b.label = 9;
                case 9: return [3 /*break*/, 11];
                case 10:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 11: return [7 /*endfinally*/];
                case 12: return [2 /*return*/, true];
            }
        });
    });
}
exports.isEmpty = isEmpty;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2lzZW1wdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUdIOzs7O0dBSUc7QUFWSCxpQkFBaUMsTUFBd0I7Ozs7Ozs7b0JBQ3BDLFdBQUEsY0FBQSxNQUFPLENBQUE7Ozs7Ozs7b0JBQVosQ0FBRSxZQUFBO29CQVlkLHNCQVhNLEtBQU0sRUFBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFhZixzQkFYTSxJQUFLLEVBQUM7Ozs7Q0FDYjtBQUxELDBCQUtDIiwiZmlsZSI6ImlzZW1wdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHJldHVybiB7IVByb21pc2U8Ym9vbGVhbj59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc0VtcHR5PFQ+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPik6IFByb21pc2U8Ym9vbGVhbj4ge1xuICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1R9ICovIF8gb2Ygc291cmNlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuIl19