goog.module('targets.es5.cls.asynciterable.reduce'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/reduce.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @template T, R
 * @param {!AsyncIterable<T>} source
 * @param {function((T|R), T, number): (R|!Promise<R>)} accumulator
 * @param {...(T|R)} args
 * @return {!Promise<(T|R)>}
 */
function reduce(source, accumulator) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    return __awaiter(this, void 0, void 0, function () {
        var _a, seed, hasSeed, i, hasValue, source_1, source_1_1, item, e_1_1, e_1, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _a = __read(args, 1), seed = _a[0];
                    hasSeed = args.length === 1;
                    i = 0, hasValue = false;
                    _c.label = 1;
                case 1:
                    _c.trys.push([1, 9, 10, 15]);
                    source_1 = __asyncValues(source);
                    _c.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _c.sent(), !source_1_1.done)) return [3 /*break*/, 8];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _c.sent();
                    if (!(hasValue || (hasValue = hasSeed))) return [3 /*break*/, 6];
                    return [4 /*yield*/, accumulator(seed, item, i++)];
                case 5:
                    seed = _c.sent();
                    return [3 /*break*/, 7];
                case 6:
                    seed = item;
                    hasValue = true;
                    i++;
                    _c.label = 7;
                case 7: return [3 /*break*/, 2];
                case 8: return [3 /*break*/, 15];
                case 9:
                    e_1_1 = _c.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 15];
                case 10:
                    _c.trys.push([10, , 13, 14]);
                    if (!(source_1_1 && !source_1_1.done && (_b = source_1.return))) return [3 /*break*/, 12];
                    return [4 /*yield*/, _b.call(source_1)];
                case 11:
                    _c.sent();
                    _c.label = 12;
                case 12: return [3 /*break*/, 14];
                case 13:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 14: return [7 /*endfinally*/];
                case 15:
                    if (hasSeed && !hasValue) {
                        return [2 /*return*/, /** @type {(T|R)} */ ((seed))];
                    }
                    if (!hasValue) {
                        throw new Error('Sequence contains no elements');
                    }
                    return [2 /*return*/, /** @type {(T|R)} */ ((seed))];
            }
        });
    });
}
exports.reduce = reduce;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3JlZHVjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBU0g7Ozs7OztHQU1HO0FBWEgsZ0JBYUksTUFad0IsRUFheEIsV0Fab0U7SUFhcEUsY0Faa0I7U0FZbEIsVUFaa0IsRUFZbEIscUJBWmtCLEVBWWxCLElBWmtCO1FBWWxCLDZCQVprQjs7Ozs7OztvQkFDakIsS0FBQSxPQUFTLElBQUssSUFBQSxFQUFaLElBQUksUUFBQSxDQUFTO29CQUNiLE9BQVEsR0FBRSxJQUFLLENBQUMsTUFBTSxLQUFJLENBQUUsQ0FBQztvQkFDL0IsQ0FBRSxHQUFFLENBQUUsRUFBQyxRQUFTLEdBQUUsS0FBTSxDQUFDOzs7O29CQUNOLFdBQUEsY0FBQSxNQUFPLENBQUE7Ozs7Ozs7b0JBQWYsSUFBSyxZQUFBO3lCQUNiLENBQUEsUUFBUSxJQUFHLENBQUUsUUFBUSxHQUFFLE9BQVEsQ0FBQyxDQUFBLEVBQWhDLHdCQUFnQztvQkFDNUIscUJBQU0sV0FBWSxDQUFDLElBQUksRUFBQyxJQUFLLEVBQUMsQ0FBRSxFQUFFLENBQUMsRUFBQTs7b0JBWXpDLElBWkksR0FBRSxTQUFtQyxDQUFDOzs7b0JBYzFDLElBWkksR0FBRSxJQUFLLENBQUM7b0JBYVosUUFaUSxHQUFFLElBQUssQ0FBQztvQkFhaEIsQ0FaQyxFQUFFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFnQlIsRUFBRSxDQUFDLENBWkMsT0FBTyxJQUFHLENBQUUsUUFBUSxDQUFDLENBQUEsQ0FBRTt3QkFhekIsTUFBTSxnQkFBQyxvQkFBb0IsQ0FBQSxDQUFDLENBWnRCLElBQUEsQ0FBQSxDQUFNLEVBQUM7b0JBYWYsQ0FaQztvQkFjRCxFQUFFLENBQUMsQ0FaQyxDQUFDLFFBQVEsQ0FBQyxDQUFBLENBQUU7d0JBYWQsTUFaSyxJQUFJLEtBQU0sQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO29CQWFuRCxDQVpDO29CQWNELHNCQUFPLG9CQUFvQixDQUFBLENBQUMsQ0FadEIsSUFBQSxDQUFBLENBQU0sRUFBQzs7OztDQUNkO0FBMUJELHdCQTBCQyIsImZpbGUiOiJyZWR1Y2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVkdWNlPFQ+KFxuICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VD4sXG4gIGFjY3VtdWxhdG9yOiAoYWNjOiBULCB2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gVCB8IFByb21pc2U8VD4pOiBQcm9taXNlPFQ+O1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZHVjZTxULCBSID0gVD4oXG4gIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgYWNjdW11bGF0b3I6IChhY2M6IFIsIHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPixcbiAgc2VlZDogUik6IFByb21pc2U8Uj47XG4vKipcbiAqIEB0ZW1wbGF0ZSBULCBSXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oKFR8UiksIFQsIG51bWJlcik6IChSfCFQcm9taXNlPFI+KX0gYWNjdW11bGF0b3JcbiAqIEBwYXJhbSB7Li4uKFR8Uil9IGFyZ3NcbiAqIEByZXR1cm4geyFQcm9taXNlPChUfFIpPn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZHVjZTxULCBSID0gVD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgIGFjY3VtdWxhdG9yOiAoYWNjOiBUIHwgUiwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFIgfCBQcm9taXNlPFI+LFxuICAgIC4uLmFyZ3M6IChUIHwgUilbXSk6IFByb21pc2U8VCB8IFI+IHtcbiAgbGV0IFtzZWVkXSA9IGFyZ3M7XG4gIGNvbnN0IC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi8gaGFzU2VlZCA9IGFyZ3MubGVuZ3RoID09PSAxO1xuICBsZXQgLyoqIEB0eXBlIHtudW1iZXJ9ICovIGkgPSAwLCAvKiogQHR5cGUge2Jvb2xlYW59ICovIGhhc1ZhbHVlID0gZmFsc2U7XG4gIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VH0gKi8gaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBpZiAoaGFzVmFsdWUgfHwgKGhhc1ZhbHVlID0gaGFzU2VlZCkpIHtcbiAgICAgIHNlZWQgPSBhd2FpdCBhY2N1bXVsYXRvcihzZWVkLCBpdGVtLCBpKyspO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWVkID0gaXRlbTtcbiAgICAgIGhhc1ZhbHVlID0gdHJ1ZTtcbiAgICAgIGkrKztcbiAgICB9XG4gIH1cblxuICBpZiAoaGFzU2VlZCAmJiAhaGFzVmFsdWUpIHtcbiAgICByZXR1cm4gLyoqIEB0eXBlIHsoVHxSKX0gKi8oKCBzZWVkKSk7XG4gIH1cblxuICBpZiAoIWhhc1ZhbHVlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTZXF1ZW5jZSBjb250YWlucyBubyBlbGVtZW50cycpO1xuICB9XG5cbiAgcmV0dXJuIC8qKiBAdHlwZSB7KFR8Uil9ICovKCggc2VlZCkpO1xufVxuIl19