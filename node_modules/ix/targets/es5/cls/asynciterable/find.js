goog.module('targets.es5.cls.asynciterable.find'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/find.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var bindcallback_1 = goog.require('targets.es5.cls.internal.bindcallback');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.bindcallback");
/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {function(T, number): (boolean|!Promise<boolean>)} predicate
 * @param {?=} thisArg
 * @return {!Promise<T>}
 */
function find(source, predicate, thisArg) {
    return __awaiter(this, void 0, void 0, function () {
        var fn, i, source_1, source_1_1, item, e_1_1, e_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    fn = bindcallback_1.bindCallback(predicate, thisArg, 2);
                    i = 0;
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 8, 9, 14]);
                    source_1 = __asyncValues(source);
                    _b.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _b.sent(), !source_1_1.done)) return [3 /*break*/, 7];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _b.sent();
                    return [4 /*yield*/, fn(item, i++)];
                case 5:
                    if (_b.sent()) {
                        return [2 /*return*/, item];
                    }
                    _b.label = 6;
                case 6: return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 14];
                case 8:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 14];
                case 9:
                    _b.trys.push([9, , 12, 13]);
                    if (!(source_1_1 && !source_1_1.done && (_a = source_1.return))) return [3 /*break*/, 11];
                    return [4 /*yield*/, _a.call(source_1)];
                case 10:
                    _b.sent();
                    _b.label = 11;
                case 11: return [3 /*break*/, 13];
                case 12:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 13: return [7 /*endfinally*/];
                case 14: return [2 /*return*/, undefined];
            }
        });
    });
}
exports.find = find;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2ZpbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILHlEQUxxQjtBQU1yQixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsbURBQW1ELENBQUMsQ0FBQztBQUMzRzs7Ozs7O0dBTUc7QUFYSCxjQWFJLE1BWndCLEVBYXhCLFNBWmtFLEVBYWxFLE9BWmE7Ozs7OztvQkFDVixFQUFHLEdBQUUsMkJBQWEsQ0FBQyxTQUFTLEVBQUMsT0FBUSxFQUFDLENBQUUsQ0FBQyxDQUFDO29CQUM1QyxDQUFFLEdBQUUsQ0FBRSxDQUFDOzs7O29CQUVZLFdBQUEsY0FBQSxNQUFPLENBQUE7Ozs7Ozs7b0JBQWYsSUFBSyxZQUFBO29CQUNiLHFCQUFLLEVBQUcsQ0FBQyxJQUFJLEVBQUMsQ0FBRSxFQUFFLENBQUMsRUFBQTs7b0JBWXZCLEVBQUUsQ0FBQyxDQVpDLFNBQW1CLENBQUMsQ0FBQSxDQUFFO3dCQWF4QixNQVpNLGdCQUFBLElBQUssRUFBQztvQkFhZCxDQVpDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFjSCxzQkFaTSxTQUFVLEVBQUM7Ozs7Q0FDbEI7QUFiRCxvQkFhQyIsImZpbGUiOiJmaW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgYmluZENhbGxiYWNrIH0gZnJvbSAnLi4vaW50ZXJuYWwvYmluZGNhbGxiYWNrJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmJpbmRjYWxsYmFja1wiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihULCBudW1iZXIpOiAoYm9vbGVhbnwhUHJvbWlzZTxib29sZWFuPil9IHByZWRpY2F0ZVxuICogQHBhcmFtIHs/PX0gdGhpc0FyZ1xuICogQHJldHVybiB7IVByb21pc2U8VD59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmaW5kPFQ+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgICBwcmVkaWNhdGU6ICh2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4sXG4gICAgdGhpc0FyZz86IGFueSk6IFByb21pc2U8VCB8IHVuZGVmaW5lZD4ge1xuICBjb25zdCAvKiogQHR5cGUgez99ICovIGZuID0gYmluZENhbGxiYWNrKHByZWRpY2F0ZSwgdGhpc0FyZywgMik7XG4gIGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gaSA9IDA7XG5cbiAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUfSAqLyBpdGVtIG9mIHNvdXJjZSkge1xuICAgIGlmIChhd2FpdCBmbihpdGVtLCBpKyspKSB7XG4gICAgICByZXR1cm4gaXRlbTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdfQ==