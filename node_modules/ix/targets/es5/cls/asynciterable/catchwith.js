goog.module('targets.es5.cls.asynciterable.catchwith'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/catchwith.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var returniterator_1 = goog.require('targets.es5.cls.internal.returniterator');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.returniterator");
/**
 * @template TSource
 */
var CatchWithAsyncIterable = (function (_super) {
    __extends(CatchWithAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {function(?): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} handler
     */
    function CatchWithAsyncIterable(source, handler) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._handler = handler;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    CatchWithAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var err, hasError, it, c, e_1, _a, _b, item, e_2_1, e_2, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        hasError = false, it = this._source[Symbol.asyncIterator]();
                        _d.label = 1;
                    case 1:
                        if (!1) return [3 /*break*/, 11];
                        c = ({});
                        _d.label = 2;
                    case 2:
                        _d.trys.push([2, 6, , 9]);
                        return [4 /*yield*/, __await(it.next())];
                    case 3:
                        c = _d.sent();
                        if (!c.done) return [3 /*break*/, 5];
                        return [4 /*yield*/, __await(returniterator_1.returnAsyncIterator(it))];
                    case 4:
                        _d.sent();
                        return [3 /*break*/, 11];
                    case 5: return [3 /*break*/, 9];
                    case 6:
                        e_1 = _d.sent();
                        return [4 /*yield*/, __await(this._handler(e_1))];
                    case 7:
                        err = _d.sent();
                        hasError = true;
                        return [4 /*yield*/, __await(returniterator_1.returnAsyncIterator(it))];
                    case 8:
                        _d.sent();
                        return [3 /*break*/, 11];
                    case 9: return [4 /*yield*/, c.value];
                    case 10:
                        _d.sent();
                        return [3 /*break*/, 1];
                    case 11:
                        if (!hasError) return [3 /*break*/, 25];
                        _d.label = 12;
                    case 12:
                        _d.trys.push([12, 19, 20, 25]);
                        _a = __asyncValues(/** @type {!AsyncIterable<TSource>} */ ((err)));
                        _d.label = 13;
                    case 13: return [4 /*yield*/, __await(_a.next())];
                    case 14:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 18];
                        return [4 /*yield*/, __await(_b.value)];
                    case 15:
                        item = _d.sent();
                        return [4 /*yield*/, item];
                    case 16:
                        _d.sent();
                        _d.label = 17;
                    case 17: return [3 /*break*/, 13];
                    case 18: return [3 /*break*/, 25];
                    case 19:
                        e_2_1 = _d.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 25];
                    case 20:
                        _d.trys.push([20, , 23, 24]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 22];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 21:
                        _d.sent();
                        _d.label = 22;
                    case 22: return [3 /*break*/, 24];
                    case 23:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 24: return [7 /*endfinally*/];
                    case 25: return [2 /*return*/];
                }
            });
        });
    };
    return CatchWithAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function CatchWithAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    CatchWithAsyncIterable.prototype._source;
    /** @type {function(?): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} */
    CatchWithAsyncIterable.prototype._handler;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @param {function(?): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} handler
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function catchWith(source, handler) {
    return new CatchWithAsyncIterable(source, handler);
}
exports.catchWith = catchWith;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2NhdGNod2l0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsa0RBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU5oRDtBQU9sRCw2REFONEI7QUFPNUIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7QUFDN0c7O0dBRUc7QUFSSDtJQUE2QywwQ0FBd0I7SUFZckU7OztPQUdHO0lBWEQsZ0NBYUksTUFaOEIsRUFhOUIsT0FaaUY7UUFGckYsWUFlRSxpQkFaTyxTQWVSO1FBRkMsS0FaSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7UUFhdEIsS0FaSSxDQUFDLFFBQVEsR0FBRSxPQUFRLENBQUM7O0lBYTFCLENBQUM7SUFDSDs7T0FFRztJQWJNLGlDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozt3QkFDOEMsUUFBUyxHQUFFLEtBQU0sRUFBQyxFQUFHLEdBQUUsSUFBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQzs7OzZCQUNsRyxDQUFDO3dCQUNILENBQUUsR0FBQSxDQUE0QixFQUFBLENBQUUsQ0FBQzs7Ozt3QkFHL0IsNkJBQU0sRUFBRyxDQUFDLElBQUksRUFBRSxHQUFBOzt3QkFjbkIsQ0FkQyxHQUFFLFNBQWdCLENBQUM7NkJBQ2hCLENBQUMsQ0FBQyxJQUFJLEVBQU4sd0JBQU07d0JBZVIsNkJBZEssb0NBQW9CLENBQUMsRUFBRSxDQUFDLEdBQUE7O3dCQWM3QixTQWQ2QixDQUFDO3dCQWU5Qix5QkFkTTs7Ozt3QkFHSCw2QkFBTSxJQUFLLENBQUMsUUFBUSxDQUFDLEdBQUMsQ0FBQyxHQUFBOzt3QkFjNUIsR0FkRyxHQUFFLFNBQXVCLENBQUM7d0JBZTdCLFFBZFEsR0FBRSxJQUFLLENBQUM7d0JBZWhCLDZCQWRLLG9DQUFvQixDQUFDLEVBQUUsQ0FBQyxHQUFBOzt3QkFjN0IsU0FkNkIsQ0FBQzt3QkFlOUIseUJBZE07NEJBaUJSLHFCQWRLLENBQUUsQ0FBQyxLQUFLLEVBQUE7O3dCQWNiLFNBZGEsQ0FBQzs7OzZCQUdaLFFBQVEsRUFBUix5QkFBUTs7Ozt3QkFDUyxLQUFBLGNBQUEsc0NBQUEsQ0FBQSxDQUFBLENBQUcsR0FBQSxDQUFBLENBQUssQ0FBQTs7Ozs7Ozt3QkFBYixJQUFLLFlBQUE7d0JBZWpCLHFCQWRLLElBQUssRUFBQTs7d0JBY1YsU0FkVSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FHaEI7SUFDSCw2QkFBQTtBQUFBLENBdkNBLEFBdUNBLENBdkM2Qyw4QkFBZSxHQXVDNUQ7QUFnQkE7SUFDQSxzQ0FBc0M7SUFDdEMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztJQUN6Qyx1RkFBdUY7SUFDdkYsc0JBQXNCLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztBQUMxQyxDQUFDO0FBRUQ7Ozs7O0dBS0c7QUExQkgsbUJBNEJJLE1BM0I4QixFQTRCOUIsT0EzQmlGO0lBNEJuRixNQTNCTSxDQUFBLElBQUksc0JBQXVCLENBQVUsTUFBTSxFQUFDLE9BQVEsQ0FBQyxDQUFDO0FBNEI5RCxDQTNCQztBQUpELDhCQUlDIiwiZmlsZSI6ImNhdGNod2l0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgcmV0dXJuQXN5bmNJdGVyYXRvciB9IGZyb20gJy4uL2ludGVybmFsL3JldHVybml0ZXJhdG9yJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLnJldHVybml0ZXJhdG9yXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBDYXRjaFdpdGhBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfaGFuZGxlcjogKGVycm9yOiBhbnkpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oPyk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSBoYW5kbGVyXG4gKi9cbmNvbnN0cnVjdG9yKFxuICAgICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgaGFuZGxlcjogKGVycm9yOiBhbnkpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5faGFuZGxlciA9IGhhbmRsZXI7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGVJdGVyYXRvcjxUU291cmNlPn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovIGVycjogQXN5bmNJdGVyYWJsZTxUU291cmNlPiB8IHVuZGVmaW5lZCwgLyoqIEB0eXBlIHtib29sZWFufSAqLyBoYXNFcnJvciA9IGZhbHNlLCAvKiogQHR5cGUgeyFBc3luY0l0ZXJhdG9yPFRTb3VyY2U+fSAqLyBpdCA9IHRoaXMuX3NvdXJjZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgbGV0IC8qKiBAdHlwZSB7IUl0ZXJhdG9yUmVzdWx0PFRTb3VyY2U+fSAqLyBjID0gLyoqIEB0eXBlIHshSXRlcmF0b3JSZXN1bHQ8VFNvdXJjZT59ICovKCggPEl0ZXJhdG9yUmVzdWx0PFRTb3VyY2U+Pnt9KSk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGMgPSBhd2FpdCBpdC5uZXh0KCk7XG4gICAgICAgIGlmIChjLmRvbmUpIHtcbiAgICAgICAgICBhd2FpdCByZXR1cm5Bc3luY0l0ZXJhdG9yKGl0KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoIC8qKiBAdHlwZSB7P30gKi9lKSB7XG4gICAgICAgIGVyciA9IGF3YWl0IHRoaXMuX2hhbmRsZXIoZSk7XG4gICAgICAgIGhhc0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgYXdhaXQgcmV0dXJuQXN5bmNJdGVyYXRvcihpdCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICB5aWVsZCBjLnZhbHVlO1xuICAgIH1cblxuICAgIGlmIChoYXNFcnJvcikge1xuICAgICAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIC8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovKCggZXJyKSkpIHtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gQ2F0Y2hXaXRoQXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gKi9cbkNhdGNoV2l0aEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9zb3VyY2U7XG4vKiogQHR5cGUge2Z1bmN0aW9uKD8pOiAoIUFzeW5jSXRlcmFibGU8VFNvdXJjZT58IVByb21pc2U8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KX0gKi9cbkNhdGNoV2l0aEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9oYW5kbGVyO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oPyk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSBoYW5kbGVyXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5Bc3luY0l0ZXJhYmxlWDxUU291cmNlPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNhdGNoV2l0aDxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgaGFuZGxlcjogKGVycm9yOiBhbnkpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IENhdGNoV2l0aEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBoYW5kbGVyKTtcbn1cbiJdfQ==