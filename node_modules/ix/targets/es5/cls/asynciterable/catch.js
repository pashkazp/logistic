goog.module('targets.es5.cls.asynciterable.catch'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/catch.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var returniterator_1 = goog.require('targets.es5.cls.internal.returniterator');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.returniterator");
/**
 * @template TSource
 */
var CatchAllAsyncIterable = (function (_super) {
    __extends(CatchAllAsyncIterable, _super);
    /**
     * @param {!Iterable<!AsyncIterable<TSource>>} source
     */
    function CatchAllAsyncIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    CatchAllAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var error, hasError, _a, _b, source, it, c, _c, done, value, e_1, e_2_1, e_2, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        error = null, hasError = false;
                        _e.label = 1;
                    case 1:
                        _e.trys.push([1, 15, 16, 17]);
                        _a = __values(this._source), _b = _a.next();
                        _e.label = 2;
                    case 2:
                        if (!!_b.done) return [3 /*break*/, 14];
                        source = _b.value;
                        it = source[Symbol.asyncIterator]();
                        error = null;
                        hasError = false;
                        _e.label = 3;
                    case 3:
                        if (!1) return [3 /*break*/, 12];
                        c = ({});
                        _e.label = 4;
                    case 4:
                        _e.trys.push([4, 8, , 10]);
                        return [4 /*yield*/, __await(it.next())];
                    case 5:
                        _c = _e.sent(), done = _c.done, value = _c.value;
                        if (!done) return [3 /*break*/, 7];
                        return [4 /*yield*/, __await(returniterator_1.returnAsyncIterator(it))];
                    case 6:
                        _e.sent();
                        return [3 /*break*/, 12];
                    case 7:
                        c = value;
                        return [3 /*break*/, 10];
                    case 8:
                        e_1 = _e.sent();
                        error = e_1;
                        hasError = true;
                        return [4 /*yield*/, __await(returniterator_1.returnAsyncIterator(it))];
                    case 9:
                        _e.sent();
                        return [3 /*break*/, 12];
                    case 10: return [4 /*yield*/, c];
                    case 11:
                        _e.sent();
                        return [3 /*break*/, 3];
                    case 12:
                        if (!hasError) {
                            return [3 /*break*/, 14];
                        }
                        _e.label = 13;
                    case 13:
                        _b = _a.next();
                        return [3 /*break*/, 2];
                    case 14: return [3 /*break*/, 17];
                    case 15:
                        e_2_1 = _e.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 17];
                    case 16:
                        try {
                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7 /*endfinally*/];
                    case 17:
                        if (hasError) {
                            throw error;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    return CatchAllAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function CatchAllAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<!AsyncIterable<TSource>>} */
    CatchAllAsyncIterable.prototype._source;
}
/**
 * @template TSource
 * @param {!Iterable<!AsyncIterable<TSource>>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function _catchAll(source) {
    return new CatchAllAsyncIterable(source);
}
exports._catchAll = _catchAll;
/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {...!AsyncIterable<T>} args
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function _catch(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return _catchAll([source].concat(args));
}
exports._catch = _catch;
/**
 * @template T
 * @param {...!AsyncIterable<T>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function _catchStatic() {
    var source = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        source[_i] = arguments[_i];
    }
    return _catchAll(source);
}
exports._catchStatic = _catchStatic;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2NhdGNoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxrREFMdUI7QUFNdkIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBTmhEO0FBT2xELDZEQU40QjtBQU81QixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMscURBQXFELENBQUMsQ0FBQztBQUM3Rzs7R0FFRztBQVJIO0lBQTRDLHlDQUF3QjtJQVdwRTs7T0FFRztJQVZELCtCQUFZLE1BQXdDO1FBQXBELFlBWUUsaUJBWE8sU0FhUjtRQURDLEtBWEksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDOztJQVl4QixDQUFDO0lBQ0g7O09BRUc7SUFaTSxnQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ0ssS0FBTSxHQUFFLElBQUssRUFBQyxRQUFTLEdBQUUsS0FBTSxDQUFDOzs7O3dCQUVqQixLQUFBLFNBQUEsSUFBSyxDQUFDLE9BQU8sQ0FBQTs7Ozt3QkFBdkIsTUFBTzt3QkFDUixFQUFHLEdBQUUsTUFBTyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO3dCQWUxQyxLQWJLLEdBQUUsSUFBSyxDQUFDO3dCQWNiLFFBYlEsR0FBRSxLQUFNLENBQUM7Ozs2QkFFVixDQUFDO3dCQUNILENBQUUsR0FBQSxDQUFZLEVBQUEsQ0FBRSxDQUFDOzs7O3dCQUdLLDZCQUFNLEVBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBQTs7d0JBQWxDLEtBQWtCLFNBQWdCLEVBQWhDLElBQUssVUFBQSxFQUFDLEtBQU0sV0FBQTs2QkFDZixJQUFJLEVBQUosd0JBQUk7d0JBY04sNkJBYkssb0NBQW9CLENBQUMsRUFBRSxDQUFDLEdBQUE7O3dCQWE3QixTQWI2QixDQUFDO3dCQWM5Qix5QkFiTTs7d0JBZVIsQ0FiQyxHQUFFLEtBQU0sQ0FBQzs7Ozt3QkFlVixLQWJLLEdBQUUsR0FBRSxDQUFDO3dCQWNWLFFBYlEsR0FBRSxJQUFLLENBQUM7d0JBY2hCLDZCQWJLLG9DQUFvQixDQUFDLEVBQUUsQ0FBQyxHQUFBOzt3QkFhN0IsU0FiNkIsQ0FBQzt3QkFjOUIseUJBYk07NkJBZ0JSLHFCQWJLLENBQUUsRUFBQTs7d0JBYVAsU0FiTyxDQUFDOzs7d0JBZ0JWLEVBQUUsQ0FBQyxDQWJDLENBQUMsUUFBUSxDQUFDLENBQUEsQ0FBRTs0QkFBQSxNQUFPLG1CQUFBO3dCQUFBLENBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQWdCM0IsRUFBRSxDQUFDLENBYkMsUUFBUSxDQUFDLENBQUEsQ0FBRTs0QkFBQSxNQUFNLEtBQU0sQ0FBQzt3QkFBQSxDQUFFOzs7OztLQUMvQjtJQUNILDRCQUFBO0FBQUEsQ0ExQ0EsQUEwQ0EsQ0ExQzRDLDhCQUFlLEdBMEMzRDtBQWVBO0lBQ0EsaURBQWlEO0lBQ2pELHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7QUFDeEMsQ0FBQztBQUVEOzs7O0dBSUc7QUF0QkgsbUJBQW1DLE1BQXdDO0lBd0J6RSxNQXZCTSxDQUFBLElBQUkscUJBQXNCLENBQVUsTUFBTSxDQUFDLENBQUM7QUF3QnBELENBQUM7QUF6QkQsOEJBeUJDO0FBQ0Q7Ozs7O0dBS0c7QUEzQkgsZ0JBQTBCLE1BQXdCO0lBQUMsY0FBNEI7U0FBNUIsVUFBNEIsRUFBNUIscUJBQTRCLEVBQTVCLElBQTRCO1FBQTVCLDZCQUE0Qjs7SUE2QjdFLE1BNUJNLENBQUEsU0FBVSxDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUE2QjdDLENBQUM7QUE5QkQsd0JBOEJDO0FBQ0Q7Ozs7R0FJRztBQS9CSDtJQUFnQyxnQkFBNkI7U0FBN0IsVUFBNkIsRUFBN0IscUJBQTZCLEVBQTdCLElBQTZCO1FBQTdCLDJCQUE2Qjs7SUFpQzNELE1BaENNLENBQUEsU0FBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBaUMzQixDQWhDQztBQUZELG9DQUVDIiwiZmlsZSI6ImNhdGNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyByZXR1cm5Bc3luY0l0ZXJhdG9yIH0gZnJvbSAnLi4vaW50ZXJuYWwvcmV0dXJuaXRlcmF0b3InO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMiA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwucmV0dXJuaXRlcmF0b3JcIik7XG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKi9cbmNsYXNzIENhdGNoQWxsQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj47XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPCFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pn0gc291cmNlXG4gKi9cbmNvbnN0cnVjdG9yKHNvdXJjZTogSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgLyoqIEB0eXBlIHs/fSAqLyBlcnJvciA9IG51bGwsIC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi8gaGFzRXJyb3IgPSBmYWxzZTtcblxuICAgIGZvciAobGV0IC8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovIHNvdXJjZSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGNvbnN0IC8qKiBAdHlwZSB7IUFzeW5jSXRlcmF0b3I8VFNvdXJjZT59ICovIGl0ID0gc291cmNlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuXG4gICAgICBlcnJvciA9IG51bGw7XG4gICAgICBoYXNFcnJvciA9IGZhbHNlO1xuXG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBjID0gLyoqIEB0eXBlIHtUU291cmNlfSAqLygoIDxUU291cmNlPnt9KSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCBpdC5uZXh0KCk7XG4gICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgIGF3YWl0IHJldHVybkFzeW5jSXRlcmF0b3IoaXQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGMgPSB2YWx1ZTtcbiAgICAgICAgfSBjYXRjaCAoIC8qKiBAdHlwZSB7P30gKi9lKSB7XG4gICAgICAgICAgZXJyb3IgPSBlO1xuICAgICAgICAgIGhhc0Vycm9yID0gdHJ1ZTtcbiAgICAgICAgICBhd2FpdCByZXR1cm5Bc3luY0l0ZXJhdG9yKGl0KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIHlpZWxkIGM7XG4gICAgICB9XG5cbiAgICAgIGlmICghaGFzRXJyb3IpIHsgYnJlYWs7IH1cbiAgICB9XG5cbiAgICBpZiAoaGFzRXJyb3IpIHsgdGhyb3cgZXJyb3I7IH1cbiAgfVxufVxuXG5mdW5jdGlvbiBDYXRjaEFsbEFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUl0ZXJhYmxlPCFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pn0gKi9cbkNhdGNoQWxsQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICogQHBhcmFtIHshSXRlcmFibGU8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFRTb3VyY2U+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gX2NhdGNoQWxsPFRTb3VyY2U+KHNvdXJjZTogSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4pOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgQ2F0Y2hBbGxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSk7XG59XG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEBwYXJhbSB7Li4uIUFzeW5jSXRlcmFibGU8VD59IGFyZ3NcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gX2NhdGNoPFQ+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPiwgLi4uYXJnczogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gX2NhdGNoQWxsPFQ+KFtzb3VyY2VdLmNvbmNhdChhcmdzKSk7XG59XG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0gey4uLiFBc3luY0l0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gX2NhdGNoU3RhdGljPFQ+KC4uLnNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gX2NhdGNoQWxsKHNvdXJjZSk7XG59XG4iXX0=