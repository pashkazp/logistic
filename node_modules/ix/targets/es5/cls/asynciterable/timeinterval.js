goog.module('targets.es5.cls.asynciterable.timeinterval'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/timeinterval.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @record
 * @template T
 */
function TimeInterval() { }
exports.TimeInterval = TimeInterval;
function TimeInterval_tsickle_Closure_declarations() {
    /** @type {T} */
    TimeInterval.prototype.value;
    /** @type {number} */
    TimeInterval.prototype.elapsed;
}
/**
 * @template TSource
 */
var TimeIntervalAsyncIterable = (function (_super) {
    __extends(TimeIntervalAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     */
    function TimeIntervalAsyncIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<?>}
     */
    TimeIntervalAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var last, _a, _b, item, now, span, e_1_1, e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        last = Date.now();
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 8, 9, 14]);
                        _a = __asyncValues(this._source);
                        _d.label = 2;
                    case 2: return [4 /*yield*/, __await(_a.next())];
                    case 3:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 7];
                        return [4 /*yield*/, __await(_b.value)];
                    case 4:
                        item = _d.sent();
                        now = Date.now();
                        span = now - last;
                        last = now;
                        return [4 /*yield*/, { value: item, elapsed: span }];
                    case 5:
                        _d.sent();
                        _d.label = 6;
                    case 6: return [3 /*break*/, 2];
                    case 7: return [3 /*break*/, 14];
                    case 8:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 14];
                    case 9:
                        _d.trys.push([9, , 12, 13]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 11];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 10:
                        _d.sent();
                        _d.label = 11;
                    case 11: return [3 /*break*/, 13];
                    case 12:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 13: return [7 /*endfinally*/];
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    return TimeIntervalAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function TimeIntervalAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    TimeIntervalAsyncIterable.prototype._source;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<!TimeInterval<TSource>>}
 */
function timeInterval(source) {
    return new TimeIntervalAsyncIterable(source);
}
exports.timeInterval = timeInterval;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3RpbWVpbnRlcnZhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsa0RBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ25HOzs7R0FHRztBQUNILDBCQUFnQyxDQUFDO0FBQWpDLG9DQUFpQztBQUdqQztJQUNBLGdCQUFnQjtJQUNoQixZQUFZLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztJQUM3QixxQkFBcUI7SUFDckIsWUFBWSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7QUFDL0IsQ0FBQztBQU9EOztHQUVHO0FBckJIO0lBQWdELDZDQUFzQztJQXdCdEY7O09BRUc7SUF2QkQsbUNBQVksTUFBOEI7UUFBMUMsWUF5QkUsaUJBeEJPLFNBMEJSO1FBREMsS0F4QkksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDOztJQXlCeEIsQ0FBQztJQUNIOztPQUVHO0lBekJNLG9DQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozt3QkFDSyxJQUFLLEdBQUUsSUFBSyxDQUFDLEdBQUcsRUFBRSxDQUFDOzs7O3dCQUNBLEtBQUEsY0FBQSxJQUFLLENBQUMsT0FBTyxDQUFBOzs7Ozs7O3dCQUFyQixJQUFLLFlBQUE7d0JBQ1osR0FBSSxHQUFFLElBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQzt3QkFDbEIsSUFBSyxHQUFFLEdBQUksR0FBRSxJQUFLLENBQUM7d0JBMkJ4QixJQTFCSSxHQUFFLEdBQUksQ0FBQzt3QkEyQlgscUJBMUJLLEVBQUUsS0FBTSxFQUFDLElBQUssRUFBQyxPQUFRLEVBQUMsSUFBSyxFQUFFLEVBQUE7O3dCQTBCcEMsU0ExQm9DLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUV4QztJQUNILGdDQUFBO0FBQUEsQ0FqQkEsQUFpQkEsQ0FqQmdELDhCQUFlLEdBaUIvRDtBQTRCQTtJQUNBLHNDQUFzQztJQUN0Qyx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQzVDLENBQUM7QUFFRDs7OztHQUlHO0FBbkNILHNCQXFDSSxNQXBDOEI7SUFxQ2hDLE1BcENNLENBQUEsSUFBSSx5QkFBMEIsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQXFDeEQsQ0FBQztBQXZDRCxvQ0F1Q0MiLCJmaWxlIjoidGltZWludGVydmFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG4vKipcbiAqIEByZWNvcmRcbiAqIEB0ZW1wbGF0ZSBUXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBUaW1lSW50ZXJ2YWwoKSB7fVxuXG5cbmZ1bmN0aW9uIFRpbWVJbnRlcnZhbF90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHtUfSAqL1xuVGltZUludGVydmFsLnByb3RvdHlwZS52YWx1ZTtcbi8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuVGltZUludGVydmFsLnByb3RvdHlwZS5lbGFwc2VkO1xufVxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgVGltZUludGVydmFsPFQ+IHtcbiAgdmFsdWU6IFQ7XG4gIGVsYXBzZWQ6IG51bWJlcjtcbn1cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgVGltZUludGVydmFsQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRpbWVJbnRlcnZhbDxUU291cmNlPj4ge1xucHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGVJdGVyYXRvcjw/Pn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBsYXN0ID0gRGF0ZS5ub3coKTtcbiAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBjb25zdCAvKiogQHR5cGUge251bWJlcn0gKi8gbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIGNvbnN0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBzcGFuID0gbm93IC0gbGFzdDtcbiAgICAgIGxhc3QgPSBub3c7XG4gICAgICB5aWVsZCB7IHZhbHVlOiBpdGVtLCBlbGFwc2VkOiBzcGFuIH07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIFRpbWVJbnRlcnZhbEFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovXG5UaW1lSW50ZXJ2YWxBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPCFUaW1lSW50ZXJ2YWw8VFNvdXJjZT4+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gdGltZUludGVydmFsPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPik6IEFzeW5jSXRlcmFibGVYPFRpbWVJbnRlcnZhbDxUU291cmNlPj4ge1xuICByZXR1cm4gbmV3IFRpbWVJbnRlcnZhbEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlKTtcbn0iXX0=