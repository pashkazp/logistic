goog.module('targets.es5.cls.asynciterable.concat'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/concat.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
var ConcatAllAsyncIterable = (function (_super) {
    __extends(ConcatAllAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<!AsyncIterable<TSource>>} source
     */
    function ConcatAllAsyncIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    ConcatAllAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var _a, _b, outer, outer_1, outer_1_1, item, e_1_1, e_2_1, e_2, _c, e_1, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _e.trys.push([0, 19, 20, 25]);
                        _a = __asyncValues(this._source);
                        _e.label = 1;
                    case 1: return [4 /*yield*/, __await(_a.next())];
                    case 2:
                        if (!(_b = _e.sent(), !_b.done)) return [3 /*break*/, 18];
                        return [4 /*yield*/, __await(_b.value)];
                    case 3:
                        outer = _e.sent();
                        _e.label = 4;
                    case 4:
                        _e.trys.push([4, 11, 12, 17]);
                        outer_1 = __asyncValues(outer);
                        _e.label = 5;
                    case 5: return [4 /*yield*/, __await(outer_1.next())];
                    case 6:
                        if (!(outer_1_1 = _e.sent(), !outer_1_1.done)) return [3 /*break*/, 10];
                        return [4 /*yield*/, __await(outer_1_1.value)];
                    case 7:
                        item = _e.sent();
                        return [4 /*yield*/, item];
                    case 8:
                        _e.sent();
                        _e.label = 9;
                    case 9: return [3 /*break*/, 5];
                    case 10: return [3 /*break*/, 17];
                    case 11:
                        e_1_1 = _e.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 17];
                    case 12:
                        _e.trys.push([12, , 15, 16]);
                        if (!(outer_1_1 && !outer_1_1.done && (_d = outer_1.return))) return [3 /*break*/, 14];
                        return [4 /*yield*/, __await(_d.call(outer_1))];
                    case 13:
                        _e.sent();
                        _e.label = 14;
                    case 14: return [3 /*break*/, 16];
                    case 15:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 16: return [7 /*endfinally*/];
                    case 17: return [3 /*break*/, 1];
                    case 18: return [3 /*break*/, 25];
                    case 19:
                        e_2_1 = _e.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 25];
                    case 20:
                        _e.trys.push([20, , 23, 24]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 22];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 21:
                        _e.sent();
                        _e.label = 22;
                    case 22: return [3 /*break*/, 24];
                    case 23:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 24: return [7 /*endfinally*/];
                    case 25: return [2 /*return*/];
                }
            });
        });
    };
    return ConcatAllAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function ConcatAllAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<!AsyncIterable<TSource>>} */
    ConcatAllAsyncIterable.prototype._source;
}
/**
 * @template TSource
 */
var ConcatAsyncIterable = (function (_super) {
    __extends(ConcatAsyncIterable, _super);
    /**
     * @param {!Iterable<!AsyncIterable<TSource>>} source
     */
    function ConcatAsyncIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    ConcatAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var _a, _b, outer, outer_2, outer_2_1, item, e_3_1, e_4_1, e_3, _c, e_4, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _e.trys.push([0, 17, 18, 19]);
                        _a = __values(this._source), _b = _a.next();
                        _e.label = 1;
                    case 1:
                        if (!!_b.done) return [3 /*break*/, 16];
                        outer = _b.value;
                        _e.label = 2;
                    case 2:
                        _e.trys.push([2, 9, 10, 15]);
                        outer_2 = __asyncValues(outer);
                        _e.label = 3;
                    case 3: return [4 /*yield*/, __await(outer_2.next())];
                    case 4:
                        if (!(outer_2_1 = _e.sent(), !outer_2_1.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, __await(outer_2_1.value)];
                    case 5:
                        item = _e.sent();
                        return [4 /*yield*/, item];
                    case 6:
                        _e.sent();
                        _e.label = 7;
                    case 7: return [3 /*break*/, 3];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_3_1 = _e.sent();
                        e_3 = { error: e_3_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _e.trys.push([10, , 13, 14]);
                        if (!(outer_2_1 && !outer_2_1.done && (_c = outer_2.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, __await(_c.call(outer_2))];
                    case 11:
                        _e.sent();
                        _e.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_3) throw e_3.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15:
                        _b = _a.next();
                        return [3 /*break*/, 1];
                    case 16: return [3 /*break*/, 19];
                    case 17:
                        e_4_1 = _e.sent();
                        e_4 = { error: e_4_1 };
                        return [3 /*break*/, 19];
                    case 18:
                        try {
                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
                        }
                        finally { if (e_4) throw e_4.error; }
                        return [7 /*endfinally*/];
                    case 19: return [2 /*return*/];
                }
            });
        });
    };
    return ConcatAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function ConcatAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!Iterable<!AsyncIterable<TSource>>} */
    ConcatAsyncIterable.prototype._source;
}
/**
 * @template TSource
 * @param {!AsyncIterable<!AsyncIterable<TSource>>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function concatAll(source) {
    return new ConcatAllAsyncIterable(source);
}
exports.concatAll = concatAll;
/**
 * @template TSource
 * @param {!Iterable<!AsyncIterable<TSource>>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function _concatAll(source) {
    return new ConcatAsyncIterable(source);
}
exports._concatAll = _concatAll;
/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {...!AsyncIterable<T>} args
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function concat(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return new ConcatAsyncIterable(__spread([source], args));
}
exports.concat = concat;
/**
 * @template T
 * @param {...!AsyncIterable<T>} args
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function concatStatic() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    return new ConcatAsyncIterable(args);
}
exports.concatStatic = concatStatic;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2NvbmNhdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsa0RBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ25HOztHQUVHO0FBUEg7SUFBNkMsMENBQXdCO0lBVXJFOztPQUVHO0lBVEQsZ0NBQVksTUFBNkM7UUFBekQsWUFXRSxpQkFWTyxTQVlSO1FBREMsS0FWSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7O0lBV3hCLENBQUM7SUFDSDs7T0FFRztJQVhNLGlDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozs7d0JBQ3lCLEtBQUEsY0FBQSxJQUFLLENBQUMsT0FBTyxDQUFBOzs7Ozs7O3dCQUF0QixLQUFNLFlBQUE7Ozs7d0JBQ0ksVUFBQSxjQUFBLEtBQU0sQ0FBQTs7Ozs7Ozt3QkFBZCxJQUFLLFlBQUE7d0JBQVkscUJBQU0sSUFBSyxFQUFBOzt3QkFBWCxTQUFXLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUU5QztJQUNILDZCQUFBO0FBQUEsQ0FiQSxBQWFBLENBYjZDLDhCQUFlLEdBYTVEO0FBY0E7SUFDQSxzREFBc0Q7SUFDdEQsc0JBQXNCLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUN6QyxDQUFDO0FBRUQ7O0dBRUc7QUFuQkg7SUFBMEMsdUNBQXdCO0lBc0JsRTs7T0FFRztJQXJCRCw2QkFBWSxNQUF3QztRQUFwRCxZQXVCRSxpQkF0Qk8sU0F3QlI7UUFEQyxLQXRCSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7O0lBdUJ4QixDQUFDO0lBQ0g7O09BRUc7SUF2Qk0sOEJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7Ozt3QkFDbUIsS0FBQSxTQUFBLElBQUssQ0FBQyxPQUFPLENBQUE7Ozs7d0JBQXRCLEtBQU07Ozs7d0JBQ1UsVUFBQSxjQUFBLEtBQU0sQ0FBQTs7Ozs7Ozt3QkFBZCxJQUFLLFlBQUE7d0JBQVkscUJBQU0sSUFBSyxFQUFBOzt3QkFBWCxTQUFXLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBRTlDO0lBQ0gsMEJBQUE7QUFBQSxDQWJBLEFBYUEsQ0FiMEMsOEJBQWUsR0FhekQ7QUEwQkE7SUFDQSxpREFBaUQ7SUFDakQsbUJBQW1CLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUN0QyxDQUFDO0FBRUQ7Ozs7R0FJRztBQWpDSCxtQkFBbUMsTUFBNkM7SUFtQzlFLE1BbENNLENBQUEsSUFBSSxzQkFBdUIsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQW1DckQsQ0FBQztBQXBDRCw4QkFvQ0M7QUFDRDs7OztHQUlHO0FBckNILG9CQUFvQyxNQUF3QztJQXVDMUUsTUF0Q00sQ0FBQSxJQUFJLG1CQUFvQixDQUFVLE1BQU0sQ0FBQyxDQUFDO0FBdUNsRCxDQUFDO0FBeENELGdDQXdDQztBQUNEOzs7OztHQUtHO0FBMUNILGdCQUEwQixNQUF3QjtJQUFDLGNBQTRCO1NBQTVCLFVBQTRCLEVBQTVCLHFCQUE0QixFQUE1QixJQUE0QjtRQUE1Qiw2QkFBNEI7O0lBNEM3RSxNQTNDTSxDQUFBLElBQUksbUJBQW9CLFdBQUssTUFBTSxHQUFLLElBQUksRUFBRSxDQUFDO0FBNEN2RCxDQUFDO0FBN0NELHdCQTZDQztBQUNEOzs7O0dBSUc7QUE5Q0g7SUFBZ0MsY0FBMkI7U0FBM0IsVUFBMkIsRUFBM0IscUJBQTJCLEVBQTNCLElBQTJCO1FBQTNCLHlCQUEyQjs7SUFnRHpELE1BL0NNLENBQUEsSUFBSSxtQkFBb0IsQ0FBSSxJQUFJLENBQUMsQ0FBQztBQWdEMUMsQ0EvQ0M7QUFGRCxvQ0FFQyIsImZpbGUiOiJjb25jYXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgQ29uY2F0QWxsQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pjtcbi8qKlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj59IHNvdXJjZVxuICovXG5jb25zdHJ1Y3Rvcihzb3VyY2U6IEFzeW5jSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqLyBvdXRlciBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gaXRlbSBvZiBvdXRlcikgeyB5aWVsZCBpdGVtOyB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIENvbmNhdEFsbEFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+fSAqL1xuQ29uY2F0QWxsQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBDb25jYXRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pjtcbi8qKlxuICogQHBhcmFtIHshSXRlcmFibGU8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8VFNvdXJjZT59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IC8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovIG91dGVyIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIG91dGVyKSB7IHlpZWxkIGl0ZW07IH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gQ29uY2F0QXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshSXRlcmFibGU8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+fSAqL1xuQ29uY2F0QXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj59IHNvdXJjZVxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXRBbGw8VFNvdXJjZT4oc291cmNlOiBBc3luY0l0ZXJhYmxlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IENvbmNhdEFsbEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlKTtcbn1cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPCFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pn0gc291cmNlXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5Bc3luY0l0ZXJhYmxlWDxUU291cmNlPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIF9jb25jYXRBbGw8VFNvdXJjZT4oc291cmNlOiBJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pik6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBDb25jYXRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSk7XG59XG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEBwYXJhbSB7Li4uIUFzeW5jSXRlcmFibGU8VD59IGFyZ3NcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0PFQ+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPiwgLi4uYXJnczogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IENvbmNhdEFzeW5jSXRlcmFibGU8VD4oW3NvdXJjZSwgLi4uYXJnc10pO1xufVxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHsuLi4hQXN5bmNJdGVyYWJsZTxUPn0gYXJnc1xuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXRTdGF0aWM8VD4oLi4uYXJnczogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IENvbmNhdEFzeW5jSXRlcmFibGU8VD4oYXJncyk7XG59XG4iXX0=