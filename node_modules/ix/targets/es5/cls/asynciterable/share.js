goog.module('targets.es5.cls.asynciterable.share'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/share.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var create_1 = goog.require('targets.es5.cls.asynciterable.create');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.create");
/**
 * @template T
 */
var SharedAsyncIterable = (function (_super) {
    __extends(SharedAsyncIterable, _super);
    /**
     * @param {!AsyncIterator<T>} it
     */
    function SharedAsyncIterable(it) {
        var _this = _super.call(this) || this;
        _this._it = it;
        return _this;
    }
    /**
     * @return {!AsyncIterator<T>}
     */
    SharedAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return this._it;
    };
    return SharedAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function SharedAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterator<T>} */
    SharedAsyncIterable.prototype._it;
}
/**
 * @template TSource, TResult
 * @param {!AsyncIterable<TSource>} source
 * @param {function(!AsyncIterable<TSource>): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)=} selector
 * @return {!tsickle_forward_declare_1.AsyncIterableX<(TSource|TResult)>}
 */
function share(source, selector) {
    var _this = this;
    return selector ?
        create_1.create(function () { return __awaiter(_this, void 0, void 0, function () {
            var it;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, selector(new SharedAsyncIterable(source[Symbol.asyncIterator]()))];
                    case 1:
                        it = _a.sent();
                        return [2 /*return*/, it[Symbol.asyncIterator]()];
                }
            });
        }); }) :
        new SharedAsyncIterable(source[Symbol.asyncIterator]());
}
exports.share = share;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3NoYXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxrREFMdUI7QUFNdkIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBTmhEO0FBT2xELG1DQU5lO0FBT2YsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLGtEQUFrRCxDQUFDLENBQUM7QUFDMUc7O0dBRUc7QUFSSDtJQUFvQyx1Q0FBa0I7SUFXdEQ7O09BRUc7SUFWRCw2QkFBWSxFQUFvQjtRQUFoQyxZQVlFLGlCQVhPLFNBYVI7UUFEQyxLQVhJLENBQUMsR0FBRyxHQUFFLEVBQUcsQ0FBQzs7SUFZaEIsQ0FBQztJQUNIOztPQUVHO0lBWkQsOEJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUF0QjtRQWNFLE1BYk0sQ0FBQSxJQUFLLENBQUMsR0FBRyxDQUFDO0lBY2xCLENBYkM7SUFDSCwwQkFBQTtBQUFBLENBWEEsQUFXQSxDQVhvQyw4QkFBZSxHQVduRDtBQWVBO0lBQ0EsZ0NBQWdDO0lBQ2hDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDbEMsQ0FBQztBQVNEOzs7OztHQUtHO0FBeEJILGVBMEJJLE1BekI4QixFQTBCOUIsUUF6QnNHO0lBRjFHLGlCQVdDO0lBa0JDLE1BekJNLENBQUEsUUFBUztRQTBCYixlQXpCTSxDQTBCSjs7Ozs0QkF4QlkscUJBQU0sUUFBUyxDQUFDLElBQUcsbUJBQW9CLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBQTs7d0JBQTdFLEVBQUcsR0FBRSxTQUF3RTt3QkEwQmxGLHNCQXpCTSxFQUFHLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUM7OzthQUNsQyxDQUFDO1FBMEJMLElBekJHLG1CQUFvQixDQUFVLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBMEJyRSxDQXpCQztBQVhELHNCQVdDIiwiZmlsZSI6InNoYXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tICcuL2NyZWF0ZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlLmNyZWF0ZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqL1xuY2xhc3MgU2hhcmVkQXN5bmNJdGVyYWJsZTxUPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFQ+IHtcbnByaXZhdGUgX2l0OiBBc3luY0l0ZXJhdG9yPFQ+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhdG9yPFQ+fSBpdFxuICovXG5jb25zdHJ1Y3RvcihpdDogQXN5bmNJdGVyYXRvcjxUPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5faXQgPSBpdDtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYXRvcjxUPn1cbiAqL1xuW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcy5faXQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gU2hhcmVkQXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshQXN5bmNJdGVyYXRvcjxUPn0gKi9cblNoYXJlZEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9pdDtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gc2hhcmU8VFNvdXJjZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT47XG5leHBvcnQgZnVuY3Rpb24gc2hhcmU8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yPzogKHZhbHVlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KSA9PiBBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+IHwgUHJvbWlzZTxBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+Pik6XG4gICAgICBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0Pjtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbighQXN5bmNJdGVyYWJsZTxUU291cmNlPik6ICghQXN5bmNJdGVyYWJsZTxUUmVzdWx0PnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj4pPX0gc2VsZWN0b3JcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPChUU291cmNlfFRSZXN1bHQpPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNoYXJlPFRTb3VyY2UsIFRSZXN1bHQgPSBUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgc2VsZWN0b3I/OiAodmFsdWU6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4pID0+IEFzeW5jSXRlcmFibGU8VFJlc3VsdD4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFJlc3VsdD4+KTpcbiAgICAgIEFzeW5jSXRlcmFibGVYPFRTb3VyY2UgfCBUUmVzdWx0PiB7XG4gIHJldHVybiBzZWxlY3RvciA/XG4gICAgY3JlYXRlPFRSZXN1bHQ+KFxuICAgICAgYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCAvKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+fSAqLyBpdCA9IGF3YWl0IHNlbGVjdG9yKG5ldyBTaGFyZWRBc3luY0l0ZXJhYmxlKHNvdXJjZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSkpO1xuICAgICAgICByZXR1cm4gaXRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgICAgfSkgOlxuICAgIG5ldyBTaGFyZWRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSk7XG59XG4iXX0=