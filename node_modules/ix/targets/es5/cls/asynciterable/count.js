goog.module('targets.es5.cls.asynciterable.count'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/count.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {function(T): (boolean|!Promise<boolean>)=} fn
 * @return {!Promise<number>}
 */
function count(source, fn) {
    var _this = this;
    if (fn === void 0) { fn = function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
        return [2 /*return*/, true];
    }); }); }; }
    return __awaiter(this, void 0, void 0, function () {
        var i, source_1, source_1_1, item, e_1_1, e_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    i = 0;
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 8, 9, 14]);
                    source_1 = __asyncValues(source);
                    _b.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _b.sent(), !source_1_1.done)) return [3 /*break*/, 7];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _b.sent();
                    return [4 /*yield*/, fn(item)];
                case 5:
                    if (_b.sent()) {
                        i++;
                    }
                    _b.label = 6;
                case 6: return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 14];
                case 8:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 14];
                case 9:
                    _b.trys.push([9, , 12, 13]);
                    if (!(source_1_1 && !source_1_1.done && (_a = source_1.return))) return [3 /*break*/, 11];
                    return [4 /*yield*/, _a.call(source_1)];
                case 10:
                    _b.sent();
                    _b.label = 11;
                case 11: return [3 /*break*/, 13];
                case 12:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 13: return [7 /*endfinally*/];
                case 14: return [2 /*return*/, i];
            }
        });
    });
}
exports.count = count;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFHSDs7Ozs7R0FLRztBQVhILGVBYUksTUFad0IsRUFheEIsRUFaK0Q7SUFGbkUsaUJBWUM7SUFFRyxtQkFBQSxFQUFBO1FBWjBELHNCQUFBLElBQUssRUFBQTthQUFBOzs7Ozs7b0JBQzlELENBQUUsR0FBRSxDQUFFLENBQUM7Ozs7b0JBRVksV0FBQSxjQUFBLE1BQU8sQ0FBQTs7Ozs7OztvQkFBZixJQUFLLFlBQUE7b0JBQ2IscUJBQUssRUFBRyxDQUFDLElBQUksQ0FBQyxFQUFBOztvQkFZbEIsRUFBRSxDQUFDLENBWkMsU0FBYyxDQUFDLENBQUEsQ0FBRTt3QkFhbkIsQ0FaQyxFQUFFLENBQUM7b0JBYU4sQ0FaQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBZUgsc0JBWk0sQ0FBRSxFQUFDOzs7O0NBQ1Y7QUFaRCxzQkFZQyIsImZpbGUiOiJjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFQpOiAoYm9vbGVhbnwhUHJvbWlzZTxib29sZWFuPik9fSBmblxuICogQHJldHVybiB7IVByb21pc2U8bnVtYmVyPn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvdW50PFQ+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgICBmbjogKHZhbHVlOiBUKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiA9IGFzeW5jICgpID0+IHRydWUpOiBQcm9taXNlPG51bWJlcj4ge1xuICBsZXQgLyoqIEB0eXBlIHtudW1iZXJ9ICovIGkgPSAwO1xuXG4gIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VH0gKi8gaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBpZiAoYXdhaXQgZm4oaXRlbSkpIHtcbiAgICAgIGkrKztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gaTtcbn1cbiJdfQ==