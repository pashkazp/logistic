goog.module('targets.es5.cls.asynciterable.tomap'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/tomap.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var identity_1 = goog.require('targets.es5.cls.internal.identity');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.identity");
/**
 * @template TSource, TKey, TElement
 * @param {!AsyncIterable<TSource>} source
 * @param {function(TSource): (TKey|!Promise<TKey>)} keySelector
 * @param {function(TSource): (TElement|!Promise<TElement>)=} elementSelector
 * @return {!Promise<!Map<TKey, (TSource|TElement)>>}
 */
function toMap(source, keySelector, elementSelector) {
    if (elementSelector === void 0) { elementSelector = identity_1.identityAsync; }
    return __awaiter(this, void 0, void 0, function () {
        var map, source_1, source_1_1, item, value, key, e_1_1, e_1, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    map = new Map();
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 9, 10, 15]);
                    source_1 = __asyncValues(source);
                    _b.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _b.sent(), !source_1_1.done)) return [3 /*break*/, 8];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _b.sent();
                    return [4 /*yield*/, elementSelector(item)];
                case 5:
                    value = _b.sent();
                    return [4 /*yield*/, keySelector(item)];
                case 6:
                    key = _b.sent();
                    map.set(key, value);
                    _b.label = 7;
                case 7: return [3 /*break*/, 2];
                case 8: return [3 /*break*/, 15];
                case 9:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 15];
                case 10:
                    _b.trys.push([10, , 13, 14]);
                    if (!(source_1_1 && !source_1_1.done && (_a = source_1.return))) return [3 /*break*/, 12];
                    return [4 /*yield*/, _a.call(source_1)];
                case 11:
                    _b.sent();
                    _b.label = 12;
                case 12: return [3 /*break*/, 14];
                case 13:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 14: return [7 /*endfinally*/];
                case 15: return [2 /*return*/, map];
            }
        });
    });
}
exports.toMap = toMap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3RvbWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxpREFMc0I7QUFNdEIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLCtDQUErQyxDQUFDLENBTmpEO0FBZXJEOzs7Ozs7R0FNRztBQVpILGVBY0ksTUFiOEIsRUFjOUIsV0Fib0QsRUFjcEQsZUFiZ0Y7SUFhaEYsZ0NBQUEsRUFBQSxrQkFia0Usd0JBQWM7Ozs7OztvQkFFL0UsR0FBSSxHQUFFLElBQUksR0FBSSxFQUE0QixDQUFDOzs7O29CQUN4QixXQUFBLGNBQUEsTUFBTyxDQUFBOzs7Ozs7O29CQUFmLElBQUssWUFBQTtvQkFDTixxQkFBTSxlQUFnQixDQUFDLElBQUksQ0FBQyxFQUFBOztvQkFBcEMsS0FBTSxHQUFFLFNBQTRCO29CQUM5QixxQkFBTSxXQUFZLENBQUMsSUFBSSxDQUFDLEVBQUE7O29CQUE5QixHQUFJLEdBQUUsU0FBd0I7b0JBY2pDLEdBYkcsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFDLEtBQU0sQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFldEIsc0JBYk0sR0FBSSxFQUFDOzs7O0NBQ1o7QUFaRCxzQkFZQyIsImZpbGUiOiJ0b21hcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IGlkZW50aXR5QXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pbnRlcm5hbC5pZGVudGl0eVwiKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRvTWFwPFRTb3VyY2UsIFRLZXk+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKGl0ZW06IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+KTogUHJvbWlzZTxNYXA8VEtleSwgVFNvdXJjZT4+O1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRvTWFwPFRTb3VyY2UsIFRLZXksIFRFbGVtZW50ID0gVFNvdXJjZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGtleVNlbGVjdG9yOiAoaXRlbTogVFNvdXJjZSkgPT4gVEtleSB8IFByb21pc2U8VEtleT4sXG4gICAgZWxlbWVudFNlbGVjdG9yPzogKGl0ZW06IFRTb3VyY2UpID0+IFRFbGVtZW50IHwgUHJvbWlzZTxURWxlbWVudD4pOiBQcm9taXNlPE1hcDxUS2V5LCBURWxlbWVudD4+O1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZSwgVEtleSwgVEVsZW1lbnRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlKTogKFRLZXl8IVByb21pc2U8VEtleT4pfSBrZXlTZWxlY3RvclxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlKTogKFRFbGVtZW50fCFQcm9taXNlPFRFbGVtZW50Pik9fSBlbGVtZW50U2VsZWN0b3JcbiAqIEByZXR1cm4geyFQcm9taXNlPCFNYXA8VEtleSwgKFRTb3VyY2V8VEVsZW1lbnQpPj59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0b01hcDxUU291cmNlLCBUS2V5LCBURWxlbWVudCA9IFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKGl0ZW06IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+LFxuICAgIGVsZW1lbnRTZWxlY3RvcjogKGl0ZW06IFRTb3VyY2UpID0+IFRFbGVtZW50IHwgUHJvbWlzZTxURWxlbWVudD4gPSBpZGVudGl0eUFzeW5jKTpcbiAgICBQcm9taXNlPE1hcDxUS2V5LCBURWxlbWVudCB8IFRTb3VyY2U+PiB7XG4gIGxldCAvKiogQHR5cGUgeyFNYXA8VEtleSwgKFRTb3VyY2V8VEVsZW1lbnQpPn0gKi8gbWFwID0gbmV3IE1hcDxUS2V5LCBURWxlbWVudCB8IFRTb3VyY2U+KCk7XG4gIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBsZXQgLyoqIEB0eXBlIHtURWxlbWVudH0gKi8gdmFsdWUgPSBhd2FpdCBlbGVtZW50U2VsZWN0b3IoaXRlbSk7XG4gICAgbGV0IC8qKiBAdHlwZSB7VEtleX0gKi8ga2V5ID0gYXdhaXQga2V5U2VsZWN0b3IoaXRlbSk7XG4gICAgbWFwLnNldChrZXksIHZhbHVlKTtcbiAgfVxuICByZXR1cm4gbWFwO1xufVxuIl19