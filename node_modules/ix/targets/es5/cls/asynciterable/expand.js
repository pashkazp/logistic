goog.module('targets.es5.cls.asynciterable.expand'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/expand.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
var ExpandAsyncIterable = (function (_super) {
    __extends(ExpandAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {function(TSource): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} selector
     */
    function ExpandAsyncIterable(source, selector) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._selector = selector;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    ExpandAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var q, src, _a, _b, item, items, e_1_1, e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        q = [this._source];
                        _d.label = 1;
                    case 1:
                        if (!(q.length > 0)) return [3 /*break*/, 17];
                        src = q.shift();
                        _d.label = 2;
                    case 2:
                        _d.trys.push([2, 10, 11, 16]);
                        _a = __asyncValues(/** @type {!AsyncIterable<TSource>} */ ((src)));
                        _d.label = 3;
                    case 3: return [4 /*yield*/, __await(_a.next())];
                    case 4:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 9];
                        return [4 /*yield*/, __await(_b.value)];
                    case 5:
                        item = _d.sent();
                        return [4 /*yield*/, __await(this._selector(item))];
                    case 6:
                        items = _d.sent();
                        q.push(items);
                        return [4 /*yield*/, item];
                    case 7:
                        _d.sent();
                        _d.label = 8;
                    case 8: return [3 /*break*/, 3];
                    case 9: return [3 /*break*/, 16];
                    case 10:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 16];
                    case 11:
                        _d.trys.push([11, , 14, 15]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 13];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 12:
                        _d.sent();
                        _d.label = 13;
                    case 13: return [3 /*break*/, 15];
                    case 14:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 15: return [7 /*endfinally*/];
                    case 16: return [3 /*break*/, 1];
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    return ExpandAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function ExpandAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    ExpandAsyncIterable.prototype._source;
    /** @type {function(TSource): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} */
    ExpandAsyncIterable.prototype._selector;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @param {function(TSource): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} selector
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function expand(source, selector) {
    return new ExpandAsyncIterable(source, selector);
}
exports.expand = expand;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2V4cGFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsa0RBTHVCO0FBTXZCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ25HOztHQUVHO0FBUEg7SUFBMEMsdUNBQXdCO0lBV2xFOzs7T0FHRztJQVZELDZCQVlJLE1BWDhCLEVBWTlCLFFBWHNGO1FBRjFGLFlBY0UsaUJBWE8sU0FjUjtRQUZDLEtBWEksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDO1FBWXRCLEtBWEksQ0FBQyxTQUFTLEdBQUUsUUFBUyxDQUFDOztJQVk1QixDQUFDO0lBQ0g7O09BRUc7SUFaTSw4QkFBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ0ssQ0FBRSxHQUFFLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDOzs7NkJBQ2hCLENBQUEsQ0FBQyxDQUFDLE1BQU0sR0FBRSxDQUFFLENBQUE7d0JBQ2QsR0FBSSxHQUFFLENBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQzs7Ozt3QkFDRCxLQUFBLGNBQUEsc0NBQUEsQ0FBQSxDQUFBLENBQUcsR0FBQSxDQUFBLENBQUssQ0FBQTs7Ozs7Ozt3QkFBYixJQUFLLFlBQUE7d0JBQ04sNkJBQU0sSUFBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBQTs7d0JBQW5DLEtBQU0sR0FBRSxTQUEyQjt3QkFjdEMsQ0FiQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzt3QkFjZCxxQkFiSyxJQUFLLEVBQUE7O3dCQWFWLFNBYlUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdoQjtJQUNILDBCQUFBO0FBQUEsQ0F2QkEsQUF1QkEsQ0F2QjBDLDhCQUFlLEdBdUJ6RDtBQWVBO0lBQ0Esc0NBQXNDO0lBQ3RDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7SUFDdEMsNkZBQTZGO0lBQzdGLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7QUFDeEMsQ0FBQztBQUVEOzs7OztHQUtHO0FBekJILGdCQTJCSSxNQTFCOEIsRUEyQjlCLFFBMUJzRjtJQTRCeEYsTUExQk0sQ0FBQSxJQUFJLG1CQUFvQixDQUFVLE1BQU0sRUFBQyxRQUFTLENBQUMsQ0FBQztBQTJCNUQsQ0ExQkM7QUFMRCx3QkFLQyIsImZpbGUiOiJleHBhbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgRXhwYW5kQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbnByaXZhdGUgX3NlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSBzZWxlY3RvclxuICovXG5jb25zdHJ1Y3RvcihcbiAgICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgLyoqIEB0eXBlIHshQXJyYXk8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+fSAqLyBxID0gW3RoaXMuX3NvdXJjZV07XG4gICAgd2hpbGUgKHEubGVuZ3RoID4gMCkge1xuICAgICAgbGV0IC8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovIHNyYyA9IHEuc2hpZnQoKTtcbiAgICAgIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gaXRlbSBvZiAvKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqLygoIHNyYykpKSB7XG4gICAgICAgIGxldCAvKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqLyBpdGVtcyA9IGF3YWl0IHRoaXMuX3NlbGVjdG9yKGl0ZW0pO1xuICAgICAgICBxLnB1c2goaXRlbXMpO1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBFeHBhbmRBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuRXhwYW5kQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFNvdXJjZSk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSAqL1xuRXhwYW5kQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NlbGVjdG9yO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSBzZWxlY3RvclxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHBhbmQ8VFNvdXJjZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KTpcbiAgICAgIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBFeHBhbmRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSwgc2VsZWN0b3IpO1xufVxuIl19