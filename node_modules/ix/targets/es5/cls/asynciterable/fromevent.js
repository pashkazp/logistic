goog.module('targets.es5.cls.asynciterable.fromevent'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/fromevent.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var fromeventpattern_1 = goog.require('targets.es5.cls.asynciterable.fromeventpattern');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.fromeventpattern");
/** @typedef {{addListener: function(string, !Function): void, removeListener: function(string, !Function): void}} */
exports.NodeEventEmitter;
/** @typedef {(boolean|{capture: boolean, passive: boolean, once: boolean})} */
exports.EventListenerOptions;
/** @typedef {({addListener: function(string, !Function): void, removeListener: function(string, !Function): void}|!EventTarget)} */
exports.EventedTarget;
/**
 * @param {?} obj
 * @return {boolean}
 */
function isNodeEventEmitter(obj) {
    return !!obj && typeof obj.addListener === 'function' && typeof obj.removeListener === 'function';
}
/**
 * @param {?} obj
 * @return {boolean}
 */
function isEventTarget(obj) {
    return !!obj && typeof obj.addEventListener === 'function' && typeof obj.removeEventListener === 'function';
}
/**
 * @template TSource
 * @param {({addListener: function(string, !Function): void, removeListener: function(string, !Function): void}|!EventTarget)} obj
 * @param {string} type
 * @param {(boolean|{capture: boolean, passive: boolean, once: boolean})=} options
 * @return {!AsyncIterable<TSource>}
 */
function fromEvent(obj, type, options) {
    if (isEventTarget(obj)) {
        var /** @type {!EventTarget} */ target_1 = ((obj));
        return fromeventpattern_1.fromEventPattern(function (h) { return target_1.addEventListener(type, /** @type {!EventListener} */ ((h)), options); }, function (h) { return target_1.removeEventListener(type, /** @type {!EventListener} */ ((h)), options); });
    }
    else if (isNodeEventEmitter(obj)) {
        var /** @type {{addListener: function(string, !Function): void, removeListener: function(string, !Function): void}} */ target_2 = ((obj));
        return fromeventpattern_1.fromEventPattern(function (h) { return target_2.addListener(type, h); }, function (h) { return target_2.removeListener(type, h); });
    }
    else {
        throw new TypeError('Unsupported event target');
    }
}
exports.fromEvent = fromEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2Zyb21ldmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsdURBTHlCO0FBTXpCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyw0REFBNEQsQ0FBQyxDQU43RDtBQVl0RCxxSEFBcUg7QUFDckgsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0FBUXpCLCtFQUErRTtBQUMvRSxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFJN0Isb0lBQW9JO0FBQ3BJLE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFFdEI7OztHQUdHO0FBakJILDRCQUE0QixHQUFRO0lBbUJsQyxNQWxCTSxDQUFBLENBQUUsQ0FBQyxHQUFHLElBQUcsT0FBTyxHQUFJLENBQUMsV0FBVyxLQUFJLFVBQVcsSUFBRyxPQUFPLEdBQUksQ0FBQyxjQUFjLEtBQUksVUFBVyxDQUFDO0FBbUJwRyxDQUFDO0FBQ0Q7OztHQUdHO0FBcEJILHVCQUF1QixHQUFRO0lBc0I3QixNQXJCTSxDQUFBLENBQUUsQ0FBQyxHQUFHLElBQUcsT0FBTyxHQUFJLENBQUMsZ0JBQWdCLEtBQUksVUFBVyxJQUFHLE9BQU8sR0FBSSxDQUFDLG1CQUFtQixLQUFJLFVBQVcsQ0FBQztBQXNCOUcsQ0FBQztBQUNEOzs7Ozs7R0FNRztBQTFCSCxtQkE0QkksR0EzQmtCLEVBNEJsQixJQTNCWSxFQTRCWixPQTNCOEI7SUE0QmhDLEVBQUUsQ0FBQyxDQTNCQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQSxDQUFFO1FBNEJ2QixJQUFNLDJCQTNCRCxDQUFBLFFBQU8sR0FBQSxDQUFnQixDQUFDLEdBQUcsQ0FBQSxDQUFDLENBQUM7UUE0QmxDLE1BM0JNLENBQUEsbUNBQWlCLENBNEJyQixVQUFBLENBM0JDLElBQUcsT0FBQSxRQUFPLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFBLDZCQUFBLENBQUEsQ0FBaUIsQ0FBQyxDQUFDLENBQUEsQ0FBQyxFQUFDLE9BQVEsQ0FBQyxFQUEzRCxDQUEyRCxFQTRCL0QsVUFBQSxDQTNCQyxJQUFHLE9BQUEsUUFBTyxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBQSw2QkFBQSxDQUFBLENBQWlCLENBQUMsQ0FBQyxDQUFBLENBQUMsRUFBQyxPQUFRLENBQUMsRUFBOUQsQ0FBOEQsQ0FDbkUsQ0FBQztJQTRCSixDQTNCQztJQUFBLElBQUssQ0FBQSxFQUFBLENBQUEsQ0FBSyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBLENBQUU7UUE0Qm5DLElBQU0sa0hBM0JELENBQUEsUUFBTyxHQUFBLENBQXFCLENBQUMsR0FBRyxDQUFBLENBQUMsQ0FBQztRQTRCdkMsTUEzQk0sQ0FBQSxtQ0FBaUIsQ0E0QnJCLFVBQUEsQ0EzQkMsSUFBRyxPQUFBLFFBQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFDLENBQUUsQ0FBQyxFQUE1QixDQUE0QixFQTRCaEMsVUFBQSxDQTNCQyxJQUFHLE9BQUEsUUFBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUMsQ0FBRSxDQUFDLEVBQS9CLENBQStCLENBQ3BDLENBQUM7SUE0QkosQ0EzQkM7SUFBQSxJQUFLLENBQUEsQ0FBRTtRQTRCTixNQTNCSyxJQUFJLFNBQVUsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBNEJsRCxDQTNCQztBQTRCSCxDQTNCQztBQW5CRCw4QkFtQkMiLCJmaWxlIjoiZnJvbWV2ZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgZnJvbUV2ZW50UGF0dGVybiB9IGZyb20gJy4vZnJvbWV2ZW50cGF0dGVybic7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlLmZyb21ldmVudHBhdHRlcm5cIik7XG5cbmV4cG9ydCB0eXBlIE5vZGVFdmVudEVtaXR0ZXIgID0ge1xuICBhZGRMaXN0ZW5lcjogKGV2ZW50TmFtZTogc3RyaW5nLCBoYW5kbGVyOiBGdW5jdGlvbikgPT4gdm9pZDtcbiAgcmVtb3ZlTGlzdGVuZXI6IChldmVudE5hbWU6IHN0cmluZywgaGFuZGxlcjogRnVuY3Rpb24pID0+IHZvaWQ7XG59O1xuLyoqIEB0eXBlZGVmIHt7YWRkTGlzdGVuZXI6IGZ1bmN0aW9uKHN0cmluZywgIUZ1bmN0aW9uKTogdm9pZCwgcmVtb3ZlTGlzdGVuZXI6IGZ1bmN0aW9uKHN0cmluZywgIUZ1bmN0aW9uKTogdm9pZH19ICovXG5leHBvcnRzLk5vZGVFdmVudEVtaXR0ZXI7XG5cblxuZXhwb3J0IHR5cGUgRXZlbnRMaXN0ZW5lck9wdGlvbnMgPSB7XG4gIGNhcHR1cmU/OiBib29sZWFuO1xuICBwYXNzaXZlPzogYm9vbGVhbjtcbiAgb25jZT86IGJvb2xlYW47XG59IHwgYm9vbGVhbjtcbi8qKiBAdHlwZWRlZiB7KGJvb2xlYW58e2NhcHR1cmU6IGJvb2xlYW4sIHBhc3NpdmU6IGJvb2xlYW4sIG9uY2U6IGJvb2xlYW59KX0gKi9cbmV4cG9ydHMuRXZlbnRMaXN0ZW5lck9wdGlvbnM7XG5cblxuZXhwb3J0IHR5cGUgRXZlbnRlZFRhcmdldCA9IEV2ZW50VGFyZ2V0IHwgTm9kZUV2ZW50RW1pdHRlcjtcbi8qKiBAdHlwZWRlZiB7KHthZGRMaXN0ZW5lcjogZnVuY3Rpb24oc3RyaW5nLCAhRnVuY3Rpb24pOiB2b2lkLCByZW1vdmVMaXN0ZW5lcjogZnVuY3Rpb24oc3RyaW5nLCAhRnVuY3Rpb24pOiB2b2lkfXwhRXZlbnRUYXJnZXQpfSAqL1xuZXhwb3J0cy5FdmVudGVkVGFyZ2V0O1xuXG4vKipcbiAqIEBwYXJhbSB7P30gb2JqXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc05vZGVFdmVudEVtaXR0ZXIob2JqOiBhbnkpOiBvYmogaXMgTm9kZUV2ZW50RW1pdHRlciB7XG4gIHJldHVybiAhIW9iaiAmJiB0eXBlb2Ygb2JqLmFkZExpc3RlbmVyID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBvYmoucmVtb3ZlTGlzdGVuZXIgPT09ICdmdW5jdGlvbic7XG59XG4vKipcbiAqIEBwYXJhbSB7P30gb2JqXG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0V2ZW50VGFyZ2V0KG9iajogYW55KTogb2JqIGlzIEV2ZW50VGFyZ2V0IHtcbiAgcmV0dXJuICEhb2JqICYmIHR5cGVvZiBvYmouYWRkRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2Ygb2JqLnJlbW92ZUV2ZW50TGlzdGVuZXIgPT09ICdmdW5jdGlvbic7XG59XG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyh7YWRkTGlzdGVuZXI6IGZ1bmN0aW9uKHN0cmluZywgIUZ1bmN0aW9uKTogdm9pZCwgcmVtb3ZlTGlzdGVuZXI6IGZ1bmN0aW9uKHN0cmluZywgIUZ1bmN0aW9uKTogdm9pZH18IUV2ZW50VGFyZ2V0KX0gb2JqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHlwZVxuICogQHBhcmFtIHsoYm9vbGVhbnx7Y2FwdHVyZTogYm9vbGVhbiwgcGFzc2l2ZTogYm9vbGVhbiwgb25jZTogYm9vbGVhbn0pPX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tRXZlbnQ8VFNvdXJjZT4oXG4gICAgb2JqOiBFdmVudGVkVGFyZ2V0LFxuICAgIHR5cGU6IHN0cmluZyxcbiAgICBvcHRpb25zPzogRXZlbnRMaXN0ZW5lck9wdGlvbnMpIHtcbiAgaWYgKGlzRXZlbnRUYXJnZXQob2JqKSkge1xuICAgIGNvbnN0IC8qKiBAdHlwZSB7IUV2ZW50VGFyZ2V0fSAqLyB0YXJnZXQgPSAvKiogQHR5cGUgeyFFdmVudFRhcmdldH0gKi8oKCA8RXZlbnRUYXJnZXQ+KG9iaikpKTtcbiAgICByZXR1cm4gZnJvbUV2ZW50UGF0dGVybjxUU291cmNlPihcbiAgICAgIGggPT4gdGFyZ2V0LmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgLyoqIEB0eXBlIHshRXZlbnRMaXN0ZW5lcn0gKi8oKCA8RXZlbnRMaXN0ZW5lcj4oaCkpKSwgb3B0aW9ucyksXG4gICAgICBoID0+IHRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIC8qKiBAdHlwZSB7IUV2ZW50TGlzdGVuZXJ9ICovKCggPEV2ZW50TGlzdGVuZXI+KGgpKSksIG9wdGlvbnMpXG4gICAgKTtcbiAgfSBlbHNlIGlmIChpc05vZGVFdmVudEVtaXR0ZXIob2JqKSkge1xuICAgIGNvbnN0IC8qKiBAdHlwZSB7e2FkZExpc3RlbmVyOiBmdW5jdGlvbihzdHJpbmcsICFGdW5jdGlvbik6IHZvaWQsIHJlbW92ZUxpc3RlbmVyOiBmdW5jdGlvbihzdHJpbmcsICFGdW5jdGlvbik6IHZvaWR9fSAqLyB0YXJnZXQgPSAvKiogQHR5cGUge3thZGRMaXN0ZW5lcjogZnVuY3Rpb24oc3RyaW5nLCAhRnVuY3Rpb24pOiB2b2lkLCByZW1vdmVMaXN0ZW5lcjogZnVuY3Rpb24oc3RyaW5nLCAhRnVuY3Rpb24pOiB2b2lkfX0gKi8oKCA8Tm9kZUV2ZW50RW1pdHRlcj4ob2JqKSkpO1xuICAgIHJldHVybiBmcm9tRXZlbnRQYXR0ZXJuPFRTb3VyY2U+KFxuICAgICAgaCA9PiB0YXJnZXQuYWRkTGlzdGVuZXIodHlwZSwgaCksXG4gICAgICBoID0+IHRhcmdldC5yZW1vdmVMaXN0ZW5lcih0eXBlLCBoKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVW5zdXBwb3J0ZWQgZXZlbnQgdGFyZ2V0Jyk7XG4gIH1cbn1cbiJdfQ==