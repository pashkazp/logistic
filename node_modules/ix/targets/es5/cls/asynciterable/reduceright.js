goog.module('targets.es5.cls.asynciterable.reduceright'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/reduceright.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var toarray_1 = goog.require('targets.es5.cls.asynciterable.toarray');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.toarray");
/**
 * @template T, R
 * @param {!AsyncIterable<T>} source
 * @param {function((T|R), T, number): (R|!Promise<R>)} accumulator
 * @param {...(T|R)} args
 * @return {!Promise<(T|R)>}
 */
function reduceRight(source, accumulator) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    return __awaiter(this, void 0, void 0, function () {
        var _a, seed, hasSeed, hasValue, array, offset, item;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = __read(args, 1), seed = _a[0];
                    hasSeed = args.length === 1;
                    hasValue = false;
                    return [4 /*yield*/, toarray_1.toArray(source)];
                case 1:
                    array = _b.sent();
                    offset = array.length - 1;
                    _b.label = 2;
                case 2:
                    if (!(offset >= 0)) return [3 /*break*/, 6];
                    item = array[offset];
                    if (!(hasValue || (hasValue = hasSeed))) return [3 /*break*/, 4];
                    return [4 /*yield*/, accumulator(seed, item, offset)];
                case 3:
                    seed = _b.sent();
                    return [3 /*break*/, 5];
                case 4:
                    seed = item;
                    hasValue = true;
                    _b.label = 5;
                case 5:
                    offset--;
                    return [3 /*break*/, 2];
                case 6:
                    if (hasSeed && !hasValue) {
                        return [2 /*return*/, /** @type {(T|R)} */ ((seed))];
                    }
                    if (!hasValue) {
                        throw new Error('Sequence contains no elements');
                    }
                    return [2 /*return*/, /** @type {(T|R)} */ ((seed))];
            }
        });
    });
}
exports.reduceRight = reduceRight;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3JlZHVjZXJpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxxQ0FMZ0I7QUFNaEIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1EQUFtRCxDQUFDLENBTnRFO0FBZXBDOzs7Ozs7R0FNRztBQVpILHFCQWNJLE1BYndCLEVBY3hCLFdBYm9FO0lBY3BFLGNBYmtCO1NBYWxCLFVBYmtCLEVBYWxCLHFCQWJrQixFQWFsQixJQWJrQjtRQWFsQiw2QkFia0I7Ozs7Ozs7b0JBQ2pCLEtBQUEsT0FBUyxJQUFLLElBQUEsRUFBWixJQUFJLFFBQUEsQ0FBUztvQkFDYixPQUFRLEdBQUUsSUFBSyxDQUFDLE1BQU0sS0FBSSxDQUFFLENBQUM7b0JBQy9CLFFBQVMsR0FBRSxLQUFNLENBQUM7b0JBQ1IscUJBQU0saUJBQVEsQ0FBQyxNQUFNLENBQUMsRUFBQTs7b0JBQTlCLEtBQU0sR0FBRSxTQUFzQjtvQkFDM0IsTUFBTyxHQUFFLEtBQU0sQ0FBQyxNQUFNLEdBQUUsQ0FBRTs7O3lCQUFDLENBQUEsTUFBTyxJQUFHLENBQUUsQ0FBQTtvQkFDeEMsSUFBSyxHQUFFLEtBQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQzt5QkFDdkIsQ0FBQSxRQUFRLElBQUcsQ0FBRSxRQUFRLEdBQUUsT0FBUSxDQUFDLENBQUEsRUFBaEMsd0JBQWdDO29CQUM1QixxQkFBTSxXQUFZLENBQUMsSUFBSSxFQUFDLElBQUssRUFBQyxNQUFPLENBQUMsRUFBQTs7b0JBYTVDLElBYkksR0FBRSxTQUFzQyxDQUFDOzs7b0JBZTdDLElBYkksR0FBRSxJQUFLLENBQUM7b0JBY1osUUFiUSxHQUFFLElBQUssQ0FBQzs7O29CQU40QixNQUFPLEVBQUUsQ0FBQTs7O29CQXVCekQsRUFBRSxDQUFDLENBYkMsT0FBTyxJQUFHLENBQUUsUUFBUSxDQUFDLENBQUEsQ0FBRTt3QkFjekIsTUFBTSxnQkFBQyxvQkFBb0IsQ0FBQSxDQUFDLENBYnRCLElBQUEsQ0FBQSxDQUFNLEVBQUM7b0JBY2YsQ0FiQztvQkFlRCxFQUFFLENBQUMsQ0FiQyxDQUFDLFFBQVEsQ0FBQyxDQUFBLENBQUU7d0JBY2QsTUFiSyxJQUFJLEtBQU0sQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO29CQWNuRCxDQWJDO29CQWVELHNCQUFPLG9CQUFvQixDQUFBLENBQUMsQ0FidEIsSUFBQSxDQUFBLENBQU0sRUFBQzs7OztDQUNkO0FBM0JELGtDQTJCQyIsImZpbGUiOiJyZWR1Y2VyaWdodC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IHRvQXJyYXkgfSBmcm9tICcuL3RvYXJyYXknO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZS50b2FycmF5XCIpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVkdWNlUmlnaHQ8VD4oXG4gIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgYWNjdW11bGF0b3I6IChhY2M6IFQsIHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBUIHwgUHJvbWlzZTxUPik6IFByb21pc2U8VD47XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVkdWNlUmlnaHQ8VCwgUiA9IFQ+KFxuICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VD4sXG4gIGFjY3VtdWxhdG9yOiAoYWNjOiBSLCB2YWx1ZTogVCwgaW5kZXg6IG51bWJlcikgPT4gUiB8IFByb21pc2U8Uj4sXG4gIHNlZWQ6IFIpOiBQcm9taXNlPFI+O1xuLyoqXG4gKiBAdGVtcGxhdGUgVCwgUlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKChUfFIpLCBULCBudW1iZXIpOiAoUnwhUHJvbWlzZTxSPil9IGFjY3VtdWxhdG9yXG4gKiBAcGFyYW0gey4uLihUfFIpfSBhcmdzXG4gKiBAcmV0dXJuIHshUHJvbWlzZTwoVHxSKT59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWR1Y2VSaWdodDxULCBSID0gVD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgIGFjY3VtdWxhdG9yOiAoYWNjOiBUIHwgUiwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFIgfCBQcm9taXNlPFI+LFxuICAgIC4uLmFyZ3M6IChUIHwgUilbXSk6IFByb21pc2U8VCB8IFI+IHtcbiAgbGV0IFtzZWVkXSA9IGFyZ3M7XG4gIGNvbnN0IC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi8gaGFzU2VlZCA9IGFyZ3MubGVuZ3RoID09PSAxO1xuICBsZXQgLyoqIEB0eXBlIHtib29sZWFufSAqLyBoYXNWYWx1ZSA9IGZhbHNlO1xuICBjb25zdCAvKiogQHR5cGUgeyFBcnJheTxUPn0gKi8gYXJyYXkgPSBhd2FpdCB0b0FycmF5KHNvdXJjZSk7XG4gIGZvciAobGV0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBvZmZzZXQgPSBhcnJheS5sZW5ndGggLSAxOyBvZmZzZXQgPj0gMDsgb2Zmc2V0LS0pIHtcbiAgICBjb25zdCAvKiogQHR5cGUge1R9ICovIGl0ZW0gPSBhcnJheVtvZmZzZXRdO1xuICAgIGlmIChoYXNWYWx1ZSB8fCAoaGFzVmFsdWUgPSBoYXNTZWVkKSkge1xuICAgICAgc2VlZCA9IGF3YWl0IGFjY3VtdWxhdG9yKHNlZWQsIGl0ZW0sIG9mZnNldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlZWQgPSBpdGVtO1xuICAgICAgaGFzVmFsdWUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChoYXNTZWVkICYmICFoYXNWYWx1ZSkge1xuICAgIHJldHVybiAvKiogQHR5cGUgeyhUfFIpfSAqLygoIHNlZWQpKTtcbiAgfVxuXG4gIGlmICghaGFzVmFsdWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlcXVlbmNlIGNvbnRhaW5zIG5vIGVsZW1lbnRzJyk7XG4gIH1cblxuICByZXR1cm4gLyoqIEB0eXBlIHsoVHxSKX0gKi8oKCBzZWVkKSk7XG59XG4iXX0=