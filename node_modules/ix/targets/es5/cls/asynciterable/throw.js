goog.module('targets.es5.cls.asynciterable.throw'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/throw.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
var ThrowAsyncIterable = (function (_super) {
    __extends(ThrowAsyncIterable, _super);
    /**
     * @param {?} error
     */
    function ThrowAsyncIterable(error) {
        var _this = _super.call(this) || this;
        _this._error = error;
        return _this;
    }
    /**
     * @return {!AsyncIterator<TSource>}
     */
    ThrowAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            return __generator(this, function (_a) {
                throw this._error;
            });
        });
    };
    return ThrowAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function ThrowAsyncIterable_tsickle_Closure_declarations() {
    /** @type {?} */
    ThrowAsyncIterable.prototype._error;
}
/**
 * @template TSource
 * @param {?} error
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function _throw(error) {
    return new ThrowAsyncIterable(error);
}
exports._throw = _throw;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3Rocm93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxrREFMdUI7QUFNdkIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDbkc7O0dBRUc7QUFQSDtJQUF5QyxzQ0FBd0I7SUFVakU7O09BRUc7SUFURCw0QkFBWSxLQUFVO1FBQXRCLFlBV0UsaUJBVk8sU0FZUjtRQURDLEtBVkksQ0FBQyxNQUFNLEdBQUUsS0FBTSxDQUFDOztJQVd0QixDQUFDO0lBQ0g7O09BRUc7SUFYTSw2QkFBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Z0JBYUUsTUFaSyxJQUFLLENBQUMsTUFBTSxDQUFDOzs7S0FDbkI7SUFDSCx5QkFBQTtBQUFBLENBWEEsQUFXQSxDQVh5Qyw4QkFBZSxHQVd4RDtBQWNBO0lBQ0EsZ0JBQWdCO0lBQ2hCLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUM7QUFDcEMsQ0FBQztBQUVEOzs7O0dBSUc7QUFyQkgsZ0JBQWdDLEtBQVU7SUF1QnhDLE1BdEJNLENBQUEsSUFBSSxrQkFBbUIsQ0FBVSxLQUFLLENBQUMsQ0FBQztBQXVCaEQsQ0F0QkM7QUFGRCx3QkFFQyIsImZpbGUiOiJ0aHJvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBUaHJvd0FzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG5wcml2YXRlIF9lcnJvcjogYW55O1xuLyoqXG4gKiBAcGFyYW0gez99IGVycm9yXG4gKi9cbmNvbnN0cnVjdG9yKGVycm9yOiBhbnkpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2Vycm9yID0gZXJyb3I7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmF0b3I8VFNvdXJjZT59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk6IEFzeW5jSXRlcmF0b3I8VFNvdXJjZT4ge1xuICAgIHRocm93IHRoaXMuX2Vycm9yO1xuICB9XG59XG5cbmZ1bmN0aW9uIFRocm93QXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHs/fSAqL1xuVGhyb3dBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fZXJyb3I7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqIEBwYXJhbSB7P30gZXJyb3JcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFRTb3VyY2U+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gX3Rocm93PFRTb3VyY2U+KGVycm9yOiBhbnkpOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgVGhyb3dBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KGVycm9yKTtcbn1cbiJdfQ==