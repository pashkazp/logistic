goog.module('targets.es5.cls.asynciterable.flatmap'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/flatmap.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var bindcallback_1 = goog.require('targets.es5.cls.internal.bindcallback');
var tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.bindcallback");
/**
 * @template TSource, TResult
 */
var FlatMapAsyncIterable = (function (_super) {
    __extends(FlatMapAsyncIterable, _super);
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {function(TSource): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)} selector
     */
    function FlatMapAsyncIterable(source, selector) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._selector = selector;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TResult>}
     */
    FlatMapAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var _a, _b, outer, inners, inners_1, inners_1_1, inner, e_1_1, e_2_1, e_2, _c, e_1, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        _e.trys.push([0, 20, 21, 26]);
                        _a = __asyncValues(this._source);
                        _e.label = 1;
                    case 1: return [4 /*yield*/, __await(_a.next())];
                    case 2:
                        if (!(_b = _e.sent(), !_b.done)) return [3 /*break*/, 19];
                        return [4 /*yield*/, __await(_b.value)];
                    case 3:
                        outer = _e.sent();
                        return [4 /*yield*/, __await(this._selector(outer))];
                    case 4:
                        inners = _e.sent();
                        _e.label = 5;
                    case 5:
                        _e.trys.push([5, 12, 13, 18]);
                        inners_1 = __asyncValues(inners);
                        _e.label = 6;
                    case 6: return [4 /*yield*/, __await(inners_1.next())];
                    case 7:
                        if (!(inners_1_1 = _e.sent(), !inners_1_1.done)) return [3 /*break*/, 11];
                        return [4 /*yield*/, __await(inners_1_1.value)];
                    case 8:
                        inner = _e.sent();
                        return [4 /*yield*/, inner];
                    case 9:
                        _e.sent();
                        _e.label = 10;
                    case 10: return [3 /*break*/, 6];
                    case 11: return [3 /*break*/, 18];
                    case 12:
                        e_1_1 = _e.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 18];
                    case 13:
                        _e.trys.push([13, , 16, 17]);
                        if (!(inners_1_1 && !inners_1_1.done && (_d = inners_1.return))) return [3 /*break*/, 15];
                        return [4 /*yield*/, __await(_d.call(inners_1))];
                    case 14:
                        _e.sent();
                        _e.label = 15;
                    case 15: return [3 /*break*/, 17];
                    case 16:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 17: return [7 /*endfinally*/];
                    case 18: return [3 /*break*/, 1];
                    case 19: return [3 /*break*/, 26];
                    case 20:
                        e_2_1 = _e.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 26];
                    case 21:
                        _e.trys.push([21, , 24, 25]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 23];
                        return [4 /*yield*/, __await(_c.call(_a))];
                    case 22:
                        _e.sent();
                        _e.label = 23;
                    case 23: return [3 /*break*/, 25];
                    case 24:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 25: return [7 /*endfinally*/];
                    case 26: return [2 /*return*/];
                }
            });
        });
    };
    return FlatMapAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function FlatMapAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    FlatMapAsyncIterable.prototype._source;
    /** @type {function(TSource): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)} */
    FlatMapAsyncIterable.prototype._selector;
}
/**
 * @template TSource, TResult
 * @param {!AsyncIterable<TSource>} source
 * @param {function(TSource): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)} selector
 * @param {?=} thisArg
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TResult>}
 */
function flatMap(source, selector, thisArg) {
    return new FlatMapAsyncIterable(source, bindcallback_1.bindCallback(selector, thisArg, 1));
}
exports.flatMap = flatMap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2ZsYXRtYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILGtEQUx1QjtBQU12QixJQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsMkNBQTJDLENBQUMsQ0FOaEQ7QUFPbEQseURBTnFCO0FBT3JCLElBQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxtREFBbUQsQ0FBQyxDQUFDO0FBQzNHOztHQUVHO0FBUkg7SUFBb0Qsd0NBQXdCO0lBWTVFOzs7T0FHRztJQVhELDhCQWFFLE1BWjhCLEVBYTlCLFFBWnNGO1FBRnhGLFlBZUUsaUJBWk8sU0FlUjtRQUZDLEtBWkksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDO1FBYXRCLEtBWkksQ0FBQyxTQUFTLEdBQUUsUUFBUyxDQUFDOztJQWE1QixDQUFDO0lBQ0g7O09BRUc7SUFiTSwrQkFBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7O3dCQUN5QixLQUFBLGNBQUEsSUFBSyxDQUFDLE9BQU8sQ0FBQTs7Ozs7Ozt3QkFBdEIsS0FBTSxZQUFBO3dCQUNKLDZCQUFNLElBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUE7O3dCQUFyQyxNQUFPLEdBQUUsU0FBNEI7Ozs7d0JBQ25CLFdBQUEsY0FBQSxNQUFPLENBQUE7Ozs7Ozs7d0JBQWhCLEtBQU0sWUFBQTt3QkFlbEIscUJBZEssS0FBTSxFQUFBOzt3QkFjWCxTQWRXLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdqQjtJQUNILDJCQUFBO0FBQUEsQ0FwQkEsQUFvQkEsQ0FwQm9ELDhCQUFlLEdBb0JuRTtBQWdCQTtJQUNBLHNDQUFzQztJQUN0QyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0lBQ3ZDLDZGQUE2RjtJQUM3RixvQkFBb0IsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO0FBQ3pDLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUEzQkgsaUJBNkJJLE1BNUI4QixFQTZCOUIsUUE1QnNGLEVBNkJ0RixPQTVCYTtJQTZCZixNQTVCTSxDQUFBLElBQUksb0JBQXFCLENBQW1CLE1BQU0sRUFBQywyQkFBYSxDQUFDLFFBQVEsRUFBQyxPQUFRLEVBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQztBQTZCaEcsQ0E1QkM7QUFMRCwwQkFLQyIsImZpbGUiOiJmbGF0bWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyBiaW5kQ2FsbGJhY2sgfSBmcm9tICcuLi9pbnRlcm5hbC9iaW5kY2FsbGJhY2snO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMiA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwuYmluZGNhbGxiYWNrXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZSwgVFJlc3VsdFxuICovXG5jbGFzcyBGbGF0TWFwQXN5bmNJdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0PiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbnByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbnByaXZhdGUgX3NlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEFzeW5jSXRlcmFibGU8VFJlc3VsdD4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFJlc3VsdD4+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSk6ICghQXN5bmNJdGVyYWJsZTxUUmVzdWx0PnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj4pfSBzZWxlY3RvclxuICovXG5jb25zdHJ1Y3RvcihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgc2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gQXN5bmNJdGVyYWJsZTxUUmVzdWx0PiB8IFByb21pc2U8QXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9zZWxlY3RvciA9IHNlbGVjdG9yO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8VFJlc3VsdD59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gb3V0ZXIgb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBjb25zdCAvKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+fSAqLyBpbm5lcnMgPSBhd2FpdCB0aGlzLl9zZWxlY3RvcihvdXRlcik7XG4gICAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1RSZXN1bHR9ICovIGlubmVyIG9mIGlubmVycykge1xuICAgICAgICB5aWVsZCBpbm5lcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gRmxhdE1hcEFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovXG5GbGF0TWFwQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFNvdXJjZSk6ICghQXN5bmNJdGVyYWJsZTxUUmVzdWx0PnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj4pfSAqL1xuRmxhdE1hcEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9zZWxlY3Rvcjtcbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZSwgVFJlc3VsdFxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UpOiAoIUFzeW5jSXRlcmFibGU8VFJlc3VsdD58IVByb21pc2U8IUFzeW5jSXRlcmFibGU8VFJlc3VsdD4+KX0gc2VsZWN0b3JcbiAqIEBwYXJhbSB7Pz19IHRoaXNBcmdcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZmxhdE1hcDxUU291cmNlLCBUUmVzdWx0PihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgc2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gQXN5bmNJdGVyYWJsZTxUUmVzdWx0PiB8IFByb21pc2U8QXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj4sXG4gICAgdGhpc0FyZz86IGFueSk6IEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBGbGF0TWFwQXN5bmNJdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0Pihzb3VyY2UsIGJpbmRDYWxsYmFjayhzZWxlY3RvciwgdGhpc0FyZywgMSkpO1xufVxuIl19