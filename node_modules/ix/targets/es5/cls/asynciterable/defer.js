goog.module('targets.es5.cls.asynciterable.defer'); exports = {}; var module = {id: 'targets/es5/cls/asynciterable/defer.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es5.cls.asynciterable');
var tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
var DeferAsyncIterable = (function (_super) {
    __extends(DeferAsyncIterable, _super);
    /**
     * @param {function(): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} fn
     */
    function DeferAsyncIterable(fn) {
        var _this = _super.call(this) || this;
        _this._fn = fn;
        return _this;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    DeferAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return __asyncGenerator(this, arguments, function _a() {
            var items, items_1, items_1_1, item, e_1_1, e_1, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, __await(this._fn())];
                    case 1:
                        items = _b.sent();
                        _b.label = 2;
                    case 2:
                        _b.trys.push([2, 9, 10, 15]);
                        items_1 = __asyncValues(items);
                        _b.label = 3;
                    case 3: return [4 /*yield*/, __await(items_1.next())];
                    case 4:
                        if (!(items_1_1 = _b.sent(), !items_1_1.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, __await(items_1_1.value)];
                    case 5:
                        item = _b.sent();
                        return [4 /*yield*/, item];
                    case 6:
                        _b.sent();
                        _b.label = 7;
                    case 7: return [3 /*break*/, 3];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_1_1 = _b.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _b.trys.push([10, , 13, 14]);
                        if (!(items_1_1 && !items_1_1.done && (_a = items_1.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, __await(_a.call(items_1))];
                    case 11:
                        _b.sent();
                        _b.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15: return [2 /*return*/];
                }
            });
        });
    };
    return DeferAsyncIterable;
}(asynciterable_1.AsyncIterableX));
function DeferAsyncIterable_tsickle_Closure_declarations() {
    /** @type {function(): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} */
    DeferAsyncIterable.prototype._fn;
}
/**
 * @template TSource
 * @param {function(): (!AsyncIterable<TSource>|!Promise<!AsyncIterable<TSource>>)} factory
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function defer(factory) {
    return new DeferAsyncIterable(factory);
}
exports.defer = defer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2RlZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxrREFMdUI7QUFNdkIsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDbkc7O0dBRUc7QUFQSDtJQUF5QyxzQ0FBd0I7SUFVakU7O09BRUc7SUFURCw0QkFBWSxFQUFrRTtRQUE5RSxZQVdFLGlCQVZPLFNBWVI7UUFEQyxLQVZJLENBQUMsR0FBRyxHQUFFLEVBQUcsQ0FBQzs7SUFXaEIsQ0FBQztJQUNIOztPQUVHO0lBWE0sNkJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7NEJBQ2EsNkJBQU0sSUFBSyxDQUFDLEdBQUcsRUFBRSxHQUFBOzt3QkFBekIsS0FBTSxHQUFFLFNBQWlCOzs7O3dCQUNOLFVBQUEsY0FBQSxLQUFNLENBQUE7Ozs7Ozs7d0JBQWQsSUFBSyxZQUFBO3dCQUFZLHFCQUFNLElBQUssRUFBQTs7d0JBQVgsU0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FDNUM7SUFDSCx5QkFBQTtBQUFBLENBWkEsQUFZQSxDQVp5Qyw4QkFBZSxHQVl4RDtBQWNBO0lBQ0Esc0ZBQXNGO0lBQ3RGLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7QUFDakMsQ0FBQztBQUVEOzs7O0dBSUc7QUFyQkgsZUF1QkksT0F0QnVFO0lBdUJ6RSxNQXRCTSxDQUFBLElBQUksa0JBQW1CLENBQVUsT0FBTyxDQUFDLENBQUM7QUF1QmxELENBdEJDO0FBSEQsc0JBR0MiLCJmaWxlIjoiZGVmZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgRGVmZXJBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfZm46ICgpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+O1xuLyoqXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSBmblxuICovXG5jb25zdHJ1Y3RvcihmbjogKCkgPT4gQXN5bmNJdGVyYWJsZTxUU291cmNlPiB8IFByb21pc2U8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2ZuID0gZm47XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGVJdGVyYXRvcjxUU291cmNlPn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovIGl0ZW1zID0gYXdhaXQgdGhpcy5fZm4oKTtcbiAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGl0ZW0gb2YgaXRlbXMpIHsgeWllbGQgaXRlbTsgfVxuICB9XG59XG5cbmZ1bmN0aW9uIERlZmVyQXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHtmdW5jdGlvbigpOiAoIUFzeW5jSXRlcmFibGU8VFNvdXJjZT58IVByb21pc2U8IUFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KX0gKi9cbkRlZmVyQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2ZuO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6ICghQXN5bmNJdGVyYWJsZTxUU291cmNlPnwhUHJvbWlzZTwhQXN5bmNJdGVyYWJsZTxUU291cmNlPj4pfSBmYWN0b3J5XG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5Bc3luY0l0ZXJhYmxlWDxUU291cmNlPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmVyPFRTb3VyY2U+KFxuICAgIGZhY3Rvcnk6ICgpID0+IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IERlZmVyQXN5bmNJdGVyYWJsZTxUU291cmNlPihmYWN0b3J5KTtcbn1cbiJdfQ==