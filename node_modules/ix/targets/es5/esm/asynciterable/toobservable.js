var BooleanSubscription = (function () {
    function BooleanSubscription() {
        this.isUnsubscribed = false;
    }
    BooleanSubscription.prototype.unsubscribe = function () {
        this.isUnsubscribed = true;
    };
    return BooleanSubscription;
}());
var AsyncIterableObservable = (function () {
    function AsyncIterableObservable(source) {
        this._source = source;
    }
    AsyncIterableObservable.prototype.subscribe = function (observer) {
        var subscription = new BooleanSubscription();
        var it = this._source[Symbol.asyncIterator]();
        var f = function () {
            it.next()
                .then(function (_a) {
                var value = _a.value, done = _a.done;
                if (!subscription.isUnsubscribed) {
                    if (done) {
                        observer.complete();
                    }
                    else {
                        observer.next(value);
                        f();
                    }
                }
            })
                .catch(function (err) {
                if (!subscription.isUnsubscribed) {
                    observer.error(err);
                }
            });
        };
        f();
        return subscription;
    };
    return AsyncIterableObservable;
}());
export function toObservable(source) {
    return new AsyncIterableObservable(source);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdG9vYnNlcnZhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0lBQUE7UUFDUyxtQkFBYyxHQUFZLEtBQUssQ0FBQztJQUt6QyxDQUFDO0lBSEMseUNBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO0lBQzdCLENBQUM7SUFDSCwwQkFBQztBQUFELENBTkEsQUFNQyxJQUFBO0FBRUQ7SUFHRSxpQ0FBWSxNQUE4QjtRQUN4QyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDO0lBRUQsMkNBQVMsR0FBVCxVQUFVLFFBQTJCO1FBQ25DLElBQU0sWUFBWSxHQUFHLElBQUksbUJBQW1CLEVBQUUsQ0FBQztRQUUvQyxJQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQ2hELElBQU0sQ0FBQyxHQUFHO1lBQ1IsRUFBRSxDQUFDLElBQUksRUFBRTtpQkFDTixJQUFJLENBQUMsVUFBQyxFQUFhO29CQUFaLGdCQUFLLEVBQUUsY0FBSTtnQkFDakIsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztvQkFDakMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFDVCxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7b0JBQ3RCLENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ04sUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzt3QkFDckIsQ0FBQyxFQUFFLENBQUM7b0JBQ04sQ0FBQztnQkFDSCxDQUFDO1lBQ0gsQ0FBQyxDQUFDO2lCQUNELEtBQUssQ0FBQyxVQUFBLEdBQUc7Z0JBQ1IsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztvQkFDakMsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDdEIsQ0FBQztZQUNILENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDO1FBQ0YsQ0FBQyxFQUFFLENBQUM7UUFFSixNQUFNLENBQUMsWUFBWSxDQUFDO0lBQ3RCLENBQUM7SUFDSCw4QkFBQztBQUFELENBakNBLEFBaUNDLElBQUE7QUFFRCxNQUFNLHVCQUFnQyxNQUE4QjtJQUNsRSxNQUFNLENBQUMsSUFBSSx1QkFBdUIsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQUN0RCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvdG9vYnNlcnZhYmxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgT2JzZXJ2ZXIgfSBmcm9tICcuLi9vYnNlcnZlcic7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICcuLi9zdWJzY3JpcHRpb24nO1xuXG5jbGFzcyBCb29sZWFuU3Vic2NyaXB0aW9uIGltcGxlbWVudHMgU3Vic2NyaXB0aW9uIHtcbiAgcHVibGljIGlzVW5zdWJzY3JpYmVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgdW5zdWJzY3JpYmUoKSB7XG4gICAgdGhpcy5pc1Vuc3Vic2NyaWJlZCA9IHRydWU7XG4gIH1cbn1cblxuY2xhc3MgQXN5bmNJdGVyYWJsZU9ic2VydmFibGU8VFNvdXJjZT4gaW1wbGVtZW50cyBPYnNlcnZhYmxlPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPikge1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuXG4gIHN1YnNjcmliZShvYnNlcnZlcjogT2JzZXJ2ZXI8VFNvdXJjZT4pIHtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSBuZXcgQm9vbGVhblN1YnNjcmlwdGlvbigpO1xuXG4gICAgY29uc3QgaXQgPSB0aGlzLl9zb3VyY2VbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgY29uc3QgZiA9ICgpID0+IHtcbiAgICAgIGl0Lm5leHQoKVxuICAgICAgICAudGhlbigoe3ZhbHVlLCBkb25lfSkgPT4ge1xuICAgICAgICAgIGlmICghc3Vic2NyaXB0aW9uLmlzVW5zdWJzY3JpYmVkKSB7XG4gICAgICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dCh2YWx1ZSk7XG4gICAgICAgICAgICAgIGYoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgIGlmICghc3Vic2NyaXB0aW9uLmlzVW5zdWJzY3JpYmVkKSB7XG4gICAgICAgICAgICBvYnNlcnZlci5lcnJvcihlcnIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBmKCk7XG5cbiAgICByZXR1cm4gc3Vic2NyaXB0aW9uO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b09ic2VydmFibGU8VFNvdXJjZT4oc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KTogT2JzZXJ2YWJsZTxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgQXN5bmNJdGVyYWJsZU9ic2VydmFibGU8VFNvdXJjZT4oc291cmNlKTtcbn1cbiJdfQ==
