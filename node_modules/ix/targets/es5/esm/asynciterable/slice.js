import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
var SliceAsyncIterable = (function (_super) {
    tslib_1.__extends(SliceAsyncIterable, _super);
    function SliceAsyncIterable(source, begin, end) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._begin = begin;
        _this._end = end;
        return _this;
    }
    SliceAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var it, begin, next, _a, end;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        it = this._source[Symbol.asyncIterator](), begin = this._begin;
                        _b.label = 1;
                    case 1:
                        _a = begin > 0;
                        if (!_a) return [3 /*break*/, 3];
                        return [4 /*yield*/, tslib_1.__await(it.next())];
                    case 2:
                        _a = !(next = _b.sent()).done;
                        _b.label = 3;
                    case 3:
                        if (!_a) return [3 /*break*/, 4];
                        begin--;
                        return [3 /*break*/, 1];
                    case 4:
                        end = this._end;
                        if (!(end > 0)) return [3 /*break*/, 8];
                        _b.label = 5;
                    case 5: return [4 /*yield*/, tslib_1.__await(it.next())];
                    case 6:
                        if (!!(next = _b.sent()).done) return [3 /*break*/, 8];
                        return [4 /*yield*/, next.value];
                    case 7:
                        _b.sent();
                        if (--end === 0) {
                            return [3 /*break*/, 8];
                        }
                        return [3 /*break*/, 5];
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    return SliceAsyncIterable;
}(AsyncIterableX));
export function slice(source, begin, end) {
    if (end === void 0) { end = Infinity; }
    return new SliceAsyncIterable(source, begin, end);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvc2xpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRDtJQUEwQyw4Q0FBdUI7SUFLL0QsNEJBQVksTUFBOEIsRUFBRSxLQUFhLEVBQUUsR0FBVztRQUF0RSxZQUNFLGlCQUFPLFNBSVI7UUFIQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixLQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixLQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQzs7SUFDbEIsQ0FBQztJQUVNLDZCQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozt3QkFDTSxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBTzs7O3dCQUNsRSxLQUFBLEtBQUssR0FBRyxDQUFDLENBQUE7aUNBQVQsd0JBQVM7d0JBQWEscUNBQU0sRUFBRSxDQUFDLElBQUksRUFBRSxHQUFBOzt3QkFBeEIsS0FBQSxDQUFDLENBQUMsSUFBSSxHQUFHLFNBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQTs7Ozt3QkFDaEQsS0FBSyxFQUFFLENBQUM7Ozt3QkFHTixHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQzs2QkFDaEIsQ0FBQSxHQUFHLEdBQUcsQ0FBQyxDQUFBLEVBQVAsd0JBQU87OzRCQUNPLHFDQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBQTs7NkJBQXhCLENBQUMsQ0FBQyxJQUFJLEdBQUcsU0FBZSxDQUFDLENBQUMsSUFBSTt3QkFDbkMscUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQTs7d0JBQWhCLFNBQWdCLENBQUM7d0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQUMsTUFBTSxrQkFBQTt3QkFBQyxDQUFDOzs7Ozs7S0FHaEM7SUFDSCx5QkFBQztBQUFELENBMUJBLEFBMEJDLENBMUJ5QyxjQUFjLEdBMEJ2RDtBQUVELE1BQU0sZ0JBQ0YsTUFBOEIsRUFDOUIsS0FBYSxFQUNiLEdBQXNCO0lBQXRCLG9CQUFBLEVBQUEsY0FBc0I7SUFDeEIsTUFBTSxDQUFDLElBQUksa0JBQWtCLENBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztBQUM3RCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvc2xpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuXG5jbGFzcyBTbGljZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfYmVnaW46IG51bWJlcjtcbiAgcHJpdmF0ZSBfZW5kOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBiZWdpbjogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2JlZ2luID0gYmVnaW47XG4gICAgdGhpcy5fZW5kID0gZW5kO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IGl0ID0gdGhpcy5fc291cmNlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpLCBiZWdpbiA9IHRoaXMuX2JlZ2luLCBuZXh0O1xuICAgIHdoaWxlIChiZWdpbiA+IDAgJiYgIShuZXh0ID0gYXdhaXQgaXQubmV4dCgpKS5kb25lKSB7XG4gICAgICBiZWdpbi0tO1xuICAgIH1cblxuICAgIGxldCBlbmQgPSB0aGlzLl9lbmQ7XG4gICAgaWYgKGVuZCA+IDApIHtcbiAgICAgIHdoaWxlICghKG5leHQgPSBhd2FpdCBpdC5uZXh0KCkpLmRvbmUpIHtcbiAgICAgICAgeWllbGQgbmV4dC52YWx1ZTtcbiAgICAgICAgaWYgKC0tZW5kID09PSAwKSB7IGJyZWFrOyB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbGljZTxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgYmVnaW46IG51bWJlcixcbiAgICBlbmQ6IG51bWJlciA9IEluZmluaXR5KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFNsaWNlQXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UsIGJlZ2luLCBlbmQpO1xufVxuIl19
