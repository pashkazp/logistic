import * as tslib_1 from "tslib";
import { identityAsync } from '../internal/identity';
export function max(source, selector) {
    if (selector === void 0) { selector = identityAsync; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var atleastOnce, value, source_1, source_1_1, item, x, e_1_1, e_1, _a;
        return tslib_1.__generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    atleastOnce = false;
                    value = -Infinity;
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 8, 9, 14]);
                    source_1 = tslib_1.__asyncValues(source);
                    _b.label = 2;
                case 2: return [4 /*yield*/, source_1.next()];
                case 3:
                    if (!(source_1_1 = _b.sent(), !source_1_1.done)) return [3 /*break*/, 7];
                    return [4 /*yield*/, source_1_1.value];
                case 4:
                    item = _b.sent();
                    if (!atleastOnce) {
                        atleastOnce = true;
                    }
                    return [4 /*yield*/, selector(item)];
                case 5:
                    x = _b.sent();
                    if (x > value) {
                        value = x;
                    }
                    _b.label = 6;
                case 6: return [3 /*break*/, 2];
                case 7: return [3 /*break*/, 14];
                case 8:
                    e_1_1 = _b.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 14];
                case 9:
                    _b.trys.push([9, , 12, 13]);
                    if (!(source_1_1 && !source_1_1.done && (_a = source_1.return))) return [3 /*break*/, 11];
                    return [4 /*yield*/, _a.call(source_1)];
                case 10:
                    _b.sent();
                    _b.label = 11;
                case 11: return [3 /*break*/, 13];
                case 12:
                    if (e_1) throw e_1.error;
                    return [7 /*endfinally*/];
                case 13: return [7 /*endfinally*/];
                case 14:
                    if (!atleastOnce) {
                        throw new Error('Sequence contains no elements');
                    }
                    return [2 /*return*/, value];
            }
        });
    });
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvbWF4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFRckQsTUFBTSxjQUNGLE1BQTBCLEVBQzFCLFFBQThEO0lBQTlELHlCQUFBLEVBQUEsd0JBQThEOzs7Ozs7b0JBQzVELFdBQVcsR0FBRyxLQUFLLENBQUM7b0JBQ3BCLEtBQUssR0FBRyxDQUFDLFFBQVEsQ0FBQzs7OztvQkFDQyxXQUFBLHNCQUFBLE1BQU0sQ0FBQTs7Ozs7OztvQkFBZCxJQUFJLFlBQUE7b0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzt3QkFDakIsV0FBVyxHQUFHLElBQUksQ0FBQztvQkFDckIsQ0FBQztvQkFDTyxxQkFBTSxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUE7O29CQUF4QixDQUFDLEdBQUcsU0FBb0I7b0JBQzVCLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO3dCQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7b0JBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUUvQixFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7d0JBQ2pCLE1BQU0sSUFBSSxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQztvQkFDbkQsQ0FBQztvQkFFRCxzQkFBTyxLQUFLLEVBQUM7Ozs7Q0FDZCIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL21heC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlkZW50aXR5QXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYXgoXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPG51bWJlcj4sXG4gICAgc2VsZWN0b3I/OiAoeDogbnVtYmVyKSA9PiBudW1iZXIgfCBQcm9taXNlPG51bWJlcj4pOiBQcm9taXNlPG51bWJlcj47XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWF4PFQ+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgICBzZWxlY3RvcjogKHg6IFQpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPik6IFByb21pc2U8bnVtYmVyPjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtYXgoXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPGFueT4sXG4gICAgc2VsZWN0b3I6ICh4OiBhbnkpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPiA9IGlkZW50aXR5QXN5bmMpOiBQcm9taXNlPG51bWJlcj4ge1xuICBsZXQgYXRsZWFzdE9uY2UgPSBmYWxzZTtcbiAgbGV0IHZhbHVlID0gLUluZmluaXR5O1xuICBmb3IgYXdhaXQgKGxldCBpdGVtIG9mIHNvdXJjZSkge1xuICAgIGlmICghYXRsZWFzdE9uY2UpIHtcbiAgICAgIGF0bGVhc3RPbmNlID0gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IHggPSBhd2FpdCBzZWxlY3RvcihpdGVtKTtcbiAgICBpZiAoeCA+IHZhbHVlKSB7IHZhbHVlID0geDsgfVxuICB9XG4gIGlmICghYXRsZWFzdE9uY2UpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlcXVlbmNlIGNvbnRhaW5zIG5vIGVsZW1lbnRzJyk7XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59XG4iXX0=
