import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
var BufferAsyncIterable = (function (_super) {
    tslib_1.__extends(BufferAsyncIterable, _super);
    function BufferAsyncIterable(source, count, skip) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._count = count;
        _this._skip = skip;
        return _this;
    }
    BufferAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var buffers, i, _a, _b, item, buffers_1, buffers_1_1, buffer_1, e_1_1, e_1, _c, e_2, _d;
            return tslib_1.__generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        buffers = [], i = 0;
                        _e.label = 1;
                    case 1:
                        _e.trys.push([1, 9, 10, 15]);
                        _a = tslib_1.__asyncValues(this._source);
                        _e.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _e.sent(), !_b.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        item = _e.sent();
                        if (i % this._skip === 0) {
                            buffers.push([]);
                        }
                        try {
                            for (buffers_1 = tslib_1.__values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
                                buffer_1 = buffers_1_1.value;
                                buffer_1.push(item);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (buffers_1_1 && !buffers_1_1.done && (_d = buffers_1.return)) _d.call(buffers_1);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                        if (!(buffers.length > 0 && buffers[0].length === this._count)) return [3 /*break*/, 6];
                        return [4 /*yield*/, buffers.shift()];
                    case 5:
                        _e.sent();
                        _e.label = 6;
                    case 6:
                        i++;
                        _e.label = 7;
                    case 7: return [3 /*break*/, 2];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_1_1 = _e.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _e.trys.push([10, , 13, 14]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, tslib_1.__await(_c.call(_a))];
                    case 11:
                        _e.sent();
                        _e.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15:
                        if (!(buffers.length > 0)) return [3 /*break*/, 17];
                        return [4 /*yield*/, buffers.shift()];
                    case 16:
                        _e.sent();
                        return [3 /*break*/, 15];
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    return BufferAsyncIterable;
}(AsyncIterableX));
export function buffer(source, count, skip) {
    if (skip == null) {
        skip = count;
    }
    return new BufferAsyncIterable(source, count, skip);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvYnVmZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFbEQ7SUFBMkMsK0NBQXlCO0lBS2xFLDZCQUNJLE1BQThCLEVBQzlCLEtBQWEsRUFDYixJQUFZO1FBSGhCLFlBSUksaUJBQU8sU0FJVjtRQUhDLEtBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDOztJQUNwQixDQUFDO0lBRU0sOEJBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7O3dCQUVNLE9BQU8sR0FBZ0IsRUFBRSxFQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7Ozs7d0JBQ2YsS0FBQSxzQkFBQSxJQUFJLENBQUMsT0FBTyxDQUFBOzs7Ozs7O3dCQUFwQixJQUFJLFlBQUE7d0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQ3pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7d0JBQ25CLENBQUM7OzRCQUVELEdBQUcsQ0FBQyxDQUFlLFlBQUEsaUJBQUEsT0FBTyxDQUFBO2dDQUFyQjtnQ0FDSCxRQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDOzZCQUNuQjs7Ozs7Ozs7OzZCQUVHLENBQUEsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsTUFBTSxDQUFBLEVBQXZELHdCQUF1RDt3QkFDekQscUJBQU0sT0FBTyxDQUFDLEtBQUssRUFBRyxFQUFBOzt3QkFBdEIsU0FBc0IsQ0FBQzs7O3dCQUd6QixDQUFDLEVBQUUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZCQUdDLENBQUEsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUE7d0JBQ3ZCLHFCQUFNLE9BQU8sQ0FBQyxLQUFLLEVBQUcsRUFBQTs7d0JBQXRCLFNBQXNCLENBQUM7Ozs7OztLQUUxQjtJQUNILDBCQUFDO0FBQUQsQ0F0Q0EsQUFzQ0MsQ0F0QzBDLGNBQWMsR0FzQ3hEO0FBRUQsTUFBTSxpQkFDRixNQUE4QixFQUM5QixLQUFhLEVBQ2IsSUFBYTtJQUNmLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUFDLENBQUM7SUFDbkMsTUFBTSxDQUFDLElBQUksbUJBQW1CLENBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMvRCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvYnVmZmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcblxuY2xhc3MgQnVmZmVyQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2VbXT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2NvdW50OiBudW1iZXI7XG4gIHByaXZhdGUgX3NraXA6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICAgIGNvdW50OiBudW1iZXIsXG4gICAgICBza2lwOiBudW1iZXIpIHtcbiAgICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2NvdW50ID0gY291bnQ7XG4gICAgdGhpcy5fc2tpcCA9IHNraXA7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcblxuICAgIGxldCBidWZmZXJzOiBUU291cmNlW11bXSA9IFtdLCAgaSA9IDA7XG4gICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGlmIChpICUgdGhpcy5fc2tpcCA9PT0gMCkge1xuICAgICAgICBidWZmZXJzLnB1c2goW10pO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBidWZmZXIgb2YgYnVmZmVycykge1xuICAgICAgICBidWZmZXIucHVzaChpdGVtKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGJ1ZmZlcnMubGVuZ3RoID4gMCAmJiBidWZmZXJzWzBdLmxlbmd0aCA9PT0gdGhpcy5fY291bnQpIHtcbiAgICAgICAgeWllbGQgYnVmZmVycy5zaGlmdCgpITtcbiAgICAgIH1cblxuICAgICAgaSsrO1xuICAgIH1cblxuICAgIHdoaWxlIChidWZmZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgIHlpZWxkIGJ1ZmZlcnMuc2hpZnQoKSE7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXI8VFNvdXJjZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGNvdW50OiBudW1iZXIsXG4gICAgc2tpcD86IG51bWJlcik6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2VbXT4ge1xuICBpZiAoc2tpcCA9PSBudWxsKSB7IHNraXAgPSBjb3VudDsgfVxuICByZXR1cm4gbmV3IEJ1ZmZlckFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBjb3VudCwgc2tpcCk7XG59XG4iXX0=
