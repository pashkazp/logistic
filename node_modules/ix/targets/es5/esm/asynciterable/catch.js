import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
import { returnAsyncIterator } from '../internal/returniterator';
var CatchAllAsyncIterable = (function (_super) {
    tslib_1.__extends(CatchAllAsyncIterable, _super);
    function CatchAllAsyncIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    CatchAllAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var error, hasError, _a, _b, source, it, c, _c, done, value, e_1, e_2_1, e_2, _d;
            return tslib_1.__generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        error = null, hasError = false;
                        _e.label = 1;
                    case 1:
                        _e.trys.push([1, 15, 16, 17]);
                        _a = tslib_1.__values(this._source), _b = _a.next();
                        _e.label = 2;
                    case 2:
                        if (!!_b.done) return [3 /*break*/, 14];
                        source = _b.value;
                        it = source[Symbol.asyncIterator]();
                        error = null;
                        hasError = false;
                        _e.label = 3;
                    case 3:
                        if (!1) return [3 /*break*/, 12];
                        c = {};
                        _e.label = 4;
                    case 4:
                        _e.trys.push([4, 8, , 10]);
                        return [4 /*yield*/, tslib_1.__await(it.next())];
                    case 5:
                        _c = _e.sent(), done = _c.done, value = _c.value;
                        if (!done) return [3 /*break*/, 7];
                        return [4 /*yield*/, tslib_1.__await(returnAsyncIterator(it))];
                    case 6:
                        _e.sent();
                        return [3 /*break*/, 12];
                    case 7:
                        c = value;
                        return [3 /*break*/, 10];
                    case 8:
                        e_1 = _e.sent();
                        error = e_1;
                        hasError = true;
                        return [4 /*yield*/, tslib_1.__await(returnAsyncIterator(it))];
                    case 9:
                        _e.sent();
                        return [3 /*break*/, 12];
                    case 10: return [4 /*yield*/, c];
                    case 11:
                        _e.sent();
                        return [3 /*break*/, 3];
                    case 12:
                        if (!hasError) {
                            return [3 /*break*/, 14];
                        }
                        _e.label = 13;
                    case 13:
                        _b = _a.next();
                        return [3 /*break*/, 2];
                    case 14: return [3 /*break*/, 17];
                    case 15:
                        e_2_1 = _e.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 17];
                    case 16:
                        try {
                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7 /*endfinally*/];
                    case 17:
                        if (hasError) {
                            throw error;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    return CatchAllAsyncIterable;
}(AsyncIterableX));
export function _catchAll(source) {
    return new CatchAllAsyncIterable(source);
}
export function _catch(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return _catchAll([source].concat(args));
}
export function _catchStatic() {
    var source = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        source[_i] = arguments[_i];
    }
    return _catchAll(source);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvY2F0Y2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVqRTtJQUE2QyxpREFBdUI7SUFHbEUsK0JBQVksTUFBd0M7UUFBcEQsWUFDRSxpQkFBTyxTQUVSO1FBREMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7O0lBQ3hCLENBQUM7SUFFTSxnQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ00sS0FBSyxHQUFHLElBQUksRUFBRSxRQUFRLEdBQUcsS0FBSyxDQUFDOzs7O3dCQUVoQixLQUFBLGlCQUFBLElBQUksQ0FBQyxPQUFPLENBQUE7Ozs7d0JBQXRCLE1BQU07d0JBQ1AsRUFBRSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQzt3QkFFMUMsS0FBSyxHQUFHLElBQUksQ0FBQzt3QkFDYixRQUFRLEdBQUcsS0FBSyxDQUFDOzs7NkJBRVYsQ0FBQzt3QkFDRixDQUFDLEdBQVksRUFBRSxDQUFDOzs7O3dCQUdNLHFDQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBQTs7d0JBQWpDLEtBQWtCLFNBQWUsRUFBL0IsSUFBSSxVQUFBLEVBQUUsS0FBSyxXQUFBOzZCQUNmLElBQUksRUFBSix3QkFBSTt3QkFDTixxQ0FBTSxtQkFBbUIsQ0FBQyxFQUFFLENBQUMsR0FBQTs7d0JBQTdCLFNBQTZCLENBQUM7d0JBQzlCLHlCQUFNOzt3QkFFUixDQUFDLEdBQUcsS0FBSyxDQUFDOzs7O3dCQUVWLEtBQUssR0FBRyxHQUFDLENBQUM7d0JBQ1YsUUFBUSxHQUFHLElBQUksQ0FBQzt3QkFDaEIscUNBQU0sbUJBQW1CLENBQUMsRUFBRSxDQUFDLEdBQUE7O3dCQUE3QixTQUE2QixDQUFDO3dCQUM5Qix5QkFBTTs2QkFHUixxQkFBTSxDQUFDLEVBQUE7O3dCQUFQLFNBQU8sQ0FBQzs7O3dCQUdWLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzs0QkFBQyxNQUFNLG1CQUFBO3dCQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQUczQixFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDOzRCQUFDLE1BQU0sS0FBSyxDQUFDO3dCQUFDLENBQUM7Ozs7O0tBQy9CO0lBQ0gsNEJBQUM7QUFBRCxDQTFDQSxBQTBDQyxDQTFDNEMsY0FBYyxHQTBDMUQ7QUFFRCxNQUFNLG9CQUE2QixNQUF3QztJQUN6RSxNQUFNLENBQUMsSUFBSSxxQkFBcUIsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQUNwRCxDQUFDO0FBRUQsTUFBTSxpQkFBb0IsTUFBd0I7SUFBRSxjQUEyQjtTQUEzQixVQUEyQixFQUEzQixxQkFBMkIsRUFBM0IsSUFBMkI7UUFBM0IsNkJBQTJCOztJQUM3RSxNQUFNLENBQUMsU0FBUyxDQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVELE1BQU07SUFBMEIsZ0JBQTZCO1NBQTdCLFVBQTZCLEVBQTdCLHFCQUE2QixFQUE3QixJQUE2QjtRQUE3QiwyQkFBNkI7O0lBQzNELE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDM0IsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL2NhdGNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IHJldHVybkFzeW5jSXRlcmF0b3IgfSBmcm9tICcuLi9pbnRlcm5hbC9yZXR1cm5pdGVyYXRvcic7XG5cbmNsYXNzIENhdGNoQWxsQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+PjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgZXJyb3IgPSBudWxsLCBoYXNFcnJvciA9IGZhbHNlO1xuXG4gICAgZm9yIChsZXQgc291cmNlIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgY29uc3QgaXQgPSBzb3VyY2VbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG5cbiAgICAgIGVycm9yID0gbnVsbDtcbiAgICAgIGhhc0Vycm9yID0gZmFsc2U7XG5cbiAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgIGxldCBjID0gPFRTb3VyY2U+e307XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCBpdC5uZXh0KCk7XG4gICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgIGF3YWl0IHJldHVybkFzeW5jSXRlcmF0b3IoaXQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGMgPSB2YWx1ZTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGVycm9yID0gZTtcbiAgICAgICAgICBoYXNFcnJvciA9IHRydWU7XG4gICAgICAgICAgYXdhaXQgcmV0dXJuQXN5bmNJdGVyYXRvcihpdCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICB5aWVsZCBjO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWhhc0Vycm9yKSB7IGJyZWFrOyB9XG4gICAgfVxuXG4gICAgaWYgKGhhc0Vycm9yKSB7IHRocm93IGVycm9yOyB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIF9jYXRjaEFsbDxUU291cmNlPihzb3VyY2U6IEl0ZXJhYmxlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IENhdGNoQWxsQXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gX2NhdGNoPFQ+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPiwgLi4uYXJnczogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gX2NhdGNoQWxsPFQ+KFtzb3VyY2VdLmNvbmNhdChhcmdzKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBfY2F0Y2hTdGF0aWM8VD4oLi4uc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+W10pOiBBc3luY0l0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBfY2F0Y2hBbGwoc291cmNlKTtcbn1cbiJdfQ==
