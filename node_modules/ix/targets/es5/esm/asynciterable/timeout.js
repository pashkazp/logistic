import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
import { sleep } from './_sleep';
var TimeoutError = (function (_super) {
    tslib_1.__extends(TimeoutError, _super);
    function TimeoutError() {
        var _this = _super.call(this) || this;
        Object.setPrototypeOf(_this, TimeoutError.prototype);
        _this.message = 'Timeout has occurred';
        return _this;
    }
    return TimeoutError;
}(Error));
export { TimeoutError };
var VALUE_TYPE = 'value';
var ERROR_TYPE = 'error';
var TimeoutAsyncIterable = (function (_super) {
    tslib_1.__extends(TimeoutAsyncIterable, _super);
    function TimeoutAsyncIterable(source, dueTime) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._dueTime = dueTime;
        return _this;
    }
    TimeoutAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var it, _a, type, value;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        it = this._source[Symbol.asyncIterator]();
                        _b.label = 1;
                    case 1:
                        if (!1) return [3 /*break*/, 4];
                        return [4 /*yield*/, tslib_1.__await(Promise.race([
                                it.next().then(function (value) { return { type: VALUE_TYPE, value: value }; }),
                                sleep(this._dueTime).then(function () { return { type: ERROR_TYPE }; })
                            ]))];
                    case 2:
                        _a = _b.sent(), type = _a.type, value = _a.value;
                        if (type === ERROR_TYPE) {
                            throw new TimeoutError();
                        }
                        if (value.done) {
                            return [3 /*break*/, 4];
                        }
                        return [4 /*yield*/, value.value];
                    case 3:
                        _b.sent();
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return TimeoutAsyncIterable;
}(AsyncIterableX));
export function timeout(source, dueTime) {
    return new TimeoutAsyncIterable(source, dueTime);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdGltZW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFakM7SUFBa0Msd0NBQUs7SUFDckM7UUFBQSxZQUNFLGlCQUFPLFNBR1I7UUFGQyxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUksRUFBRSxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDcEQsS0FBSSxDQUFDLE9BQU8sR0FBRyxzQkFBc0IsQ0FBQzs7SUFDeEMsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FOQSxBQU1DLENBTmlDLEtBQUssR0FNdEM7O0FBRUQsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDO0FBQzNCLElBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQztBQU8zQjtJQUE0QyxnREFBdUI7SUFJakUsOEJBQVksTUFBOEIsRUFBRSxPQUFlO1FBQTNELFlBQ0UsaUJBQU8sU0FHUjtRQUZDLEtBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDOztJQUMxQixDQUFDO0lBRU0sK0JBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxHQUE3Qjs7Ozs7O3dCQUNRLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDOzs7NkJBQ3pDLENBQUM7d0JBQ2tCLHFDQUFNLE9BQU8sQ0FBQyxJQUFJLENBQTRCO2dDQUNwRSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUEsS0FBSyxJQUFNLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsS0FBSyxPQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQ0FDaEUsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBUSxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7NkJBQ2xFLENBQUMsR0FBQTs7d0JBSEksS0FBa0IsU0FHdEIsRUFITSxJQUFJLFVBQUEsRUFBRSxLQUFLLFdBQUE7d0JBS25CLEVBQUUsQ0FBQyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDOzRCQUN4QixNQUFNLElBQUksWUFBWSxFQUFFLENBQUM7d0JBQzNCLENBQUM7d0JBRUQsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7NEJBQUMsTUFBTSxrQkFBQTt3QkFBQyxDQUFDO3dCQUMxQixxQkFBTSxLQUFLLENBQUMsS0FBSyxFQUFBOzt3QkFBakIsU0FBaUIsQ0FBQzs7Ozs7O0tBRXJCO0lBQ0gsMkJBQUM7QUFBRCxDQTFCQSxBQTBCQyxDQTFCMkMsY0FBYyxHQTBCekQ7QUFFRCxNQUFNLGtCQUNGLE1BQThCLEVBQzlCLE9BQWU7SUFDakIsTUFBTSxDQUFDLElBQUksb0JBQW9CLENBQVUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzVELENBQUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS90aW1lb3V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi9fc2xlZXAnO1xuXG5leHBvcnQgY2xhc3MgVGltZW91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBUaW1lb3V0RXJyb3IucHJvdG90eXBlKTtcbiAgICB0aGlzLm1lc3NhZ2UgPSAnVGltZW91dCBoYXMgb2NjdXJyZWQnO1xuICB9XG59XG5cbmNvbnN0IFZBTFVFX1RZUEUgPSAndmFsdWUnO1xuY29uc3QgRVJST1JfVFlQRSA9ICdlcnJvcic7XG5cbmludGVyZmFjZSBUaW1lb3V0T3BlcmF0aW9uPFQ+IHtcbiAgdHlwZTogc3RyaW5nO1xuICB2YWx1ZT86IEl0ZXJhdG9yUmVzdWx0PFQ+O1xufVxuXG5jbGFzcyBUaW1lb3V0QXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9kdWVUaW1lOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBkdWVUaW1lOiBudW1iZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9kdWVUaW1lID0gZHVlVGltZTtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGNvbnN0IGl0ID0gdGhpcy5fc291cmNlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIHdoaWxlICgxKSB7XG4gICAgICBjb25zdCB7IHR5cGUsIHZhbHVlIH0gPSBhd2FpdCBQcm9taXNlLnJhY2U8VGltZW91dE9wZXJhdGlvbjxUU291cmNlPj4oW1xuICAgICAgICBpdC5uZXh0KCkudGhlbih2YWx1ZSA9PiB7IHJldHVybiB7IHR5cGU6IFZBTFVFX1RZUEUsIHZhbHVlIH07IH0pLFxuICAgICAgICBzbGVlcCh0aGlzLl9kdWVUaW1lKS50aGVuKCgpID0+IHsgcmV0dXJuIHsgdHlwZTogRVJST1JfVFlQRSB9OyB9KVxuICAgICAgXSk7XG5cbiAgICAgIGlmICh0eXBlID09PSBFUlJPUl9UWVBFKSB7XG4gICAgICAgIHRocm93IG5ldyBUaW1lb3V0RXJyb3IoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHZhbHVlLmRvbmUpIHsgYnJlYWs7IH1cbiAgICAgIHlpZWxkIHZhbHVlLnZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdGltZW91dDxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgZHVlVGltZTogbnVtYmVyKTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFRpbWVvdXRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSwgZHVlVGltZSk7XG59Il19
