import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
var TapAsyncIterable = (function (_super) {
    tslib_1.__extends(TapAsyncIterable, _super);
    function TapAsyncIterable(source, observer) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._observer = observer;
        return _this;
    }
    TapAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var it, next, e_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        it = this._source[Symbol.asyncIterator]();
                        _a.label = 1;
                    case 1:
                        if (!1) return [3 /*break*/, 14];
                        next = void 0;
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 7]);
                        return [4 /*yield*/, tslib_1.__await(it.next())];
                    case 3:
                        next = _a.sent();
                        return [3 /*break*/, 7];
                    case 4:
                        e_1 = _a.sent();
                        if (!this._observer.error) return [3 /*break*/, 6];
                        return [4 /*yield*/, tslib_1.__await(this._observer.error(e_1))];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: throw e_1;
                    case 7:
                        if (!next.done) return [3 /*break*/, 10];
                        if (!this._observer.complete) return [3 /*break*/, 9];
                        return [4 /*yield*/, tslib_1.__await(this._observer.complete())];
                    case 8:
                        _a.sent();
                        _a.label = 9;
                    case 9: return [3 /*break*/, 14];
                    case 10:
                        if (!this._observer.next) return [3 /*break*/, 12];
                        return [4 /*yield*/, tslib_1.__await(this._observer.next(next.value))];
                    case 11:
                        _a.sent();
                        _a.label = 12;
                    case 12: return [4 /*yield*/, next.value];
                    case 13:
                        _a.sent();
                        return [3 /*break*/, 1];
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    return TapAsyncIterable;
}(AsyncIterableX));
export function tap(source, observer) {
    return new TapAsyncIterable(source, observer);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdGFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHbEQ7SUFBd0MsNENBQXVCO0lBSTdELDBCQUFZLE1BQThCLEVBQUUsUUFBdUM7UUFBbkYsWUFDRSxpQkFBTyxTQUdSO1FBRkMsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7O0lBQzVCLENBQUM7SUFFTSwyQkFBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ1EsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7Ozs2QkFDekMsQ0FBQzt3QkFDRixJQUFJLFNBQUEsQ0FBQzs7Ozt3QkFFQSxxQ0FBTSxFQUFFLENBQUMsSUFBSSxFQUFFLEdBQUE7O3dCQUF0QixJQUFJLEdBQUcsU0FBZSxDQUFDOzs7OzZCQUVuQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBcEIsd0JBQW9CO3dCQUFJLHFDQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUMsQ0FBQyxHQUFBOzt3QkFBN0IsU0FBNkIsQ0FBQzs7NEJBQzFELE1BQU0sR0FBQyxDQUFDOzs2QkFHTixJQUFJLENBQUMsSUFBSSxFQUFULHlCQUFTOzZCQUNQLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUF2Qix3QkFBdUI7d0JBQUkscUNBQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsR0FBQTs7d0JBQS9CLFNBQStCLENBQUM7OzRCQUMvRCx5QkFBTTs7NkJBR0osSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQW5CLHlCQUFtQjt3QkFBSSxxQ0FBTSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUE7O3dCQUFyQyxTQUFxQyxDQUFDOzs2QkFDakUscUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQTs7d0JBQWhCLFNBQWdCLENBQUM7Ozs7OztLQUVwQjtJQUNILHVCQUFDO0FBQUQsQ0E5QkEsQUE4QkMsQ0E5QnVDLGNBQWMsR0E4QnJEO0FBRUQsTUFBTSxjQUNGLE1BQThCLEVBQzlCLFFBQXVDO0lBQ3pDLE1BQU0sQ0FBQyxJQUFJLGdCQUFnQixDQUFVLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztBQUN6RCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvdGFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IFBhcnRpYWxBc3luY09ic2VydmVyIH0gZnJvbSAnLi4vb2JzZXJ2ZXInO1xuXG5jbGFzcyBUYXBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX29ic2VydmVyOiBQYXJ0aWFsQXN5bmNPYnNlcnZlcjxUU291cmNlPjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sIG9ic2VydmVyOiBQYXJ0aWFsQXN5bmNPYnNlcnZlcjxUU291cmNlPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX29ic2VydmVyID0gb2JzZXJ2ZXI7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCBpdCA9IHRoaXMuX3NvdXJjZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgbGV0IG5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBuZXh0ID0gYXdhaXQgaXQubmV4dCgpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAodGhpcy5fb2JzZXJ2ZXIuZXJyb3IpIHsgYXdhaXQgdGhpcy5fb2JzZXJ2ZXIuZXJyb3IoZSk7IH1cbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5leHQuZG9uZSkge1xuICAgICAgICBpZiAodGhpcy5fb2JzZXJ2ZXIuY29tcGxldGUpIHsgYXdhaXQgdGhpcy5fb2JzZXJ2ZXIuY29tcGxldGUoKTsgfVxuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX29ic2VydmVyLm5leHQpIHsgYXdhaXQgdGhpcy5fb2JzZXJ2ZXIubmV4dChuZXh0LnZhbHVlKTsgfVxuICAgICAgeWllbGQgbmV4dC52YWx1ZTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRhcDxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgb2JzZXJ2ZXI6IFBhcnRpYWxBc3luY09ic2VydmVyPFRTb3VyY2U+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFRhcEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBvYnNlcnZlcik7XG59XG4iXX0=
