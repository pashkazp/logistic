import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
import { arrayIndexOfAsync } from '../internal/arrayindexof';
import { comparerAsync } from '../internal/comparer';
function arrayRemove(array, item, comparer) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var idx;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, arrayIndexOfAsync(array, item, comparer)];
                case 1:
                    idx = _a.sent();
                    if (idx === -1) {
                        return [2 /*return*/, false];
                    }
                    array.splice(idx, 1);
                    return [2 /*return*/, true];
            }
        });
    });
}
var IntersectAsyncIterable = (function (_super) {
    tslib_1.__extends(IntersectAsyncIterable, _super);
    function IntersectAsyncIterable(first, second, comparer) {
        var _this = _super.call(this) || this;
        _this._first = first;
        _this._second = second;
        _this._comparer = comparer;
        return _this;
    }
    IntersectAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var map, _a, _b, secondItem, e_1_1, _c, _d, firstItem, e_2_1, e_1, _e, e_2, _f;
            return tslib_1.__generator(this, function (_g) {
                switch (_g.label) {
                    case 0:
                        map = [];
                        _g.label = 1;
                    case 1:
                        _g.trys.push([1, 7, 8, 13]);
                        _a = tslib_1.__asyncValues(this._second);
                        _g.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _g.sent(), !_b.done)) return [3 /*break*/, 6];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        secondItem = _g.sent();
                        map.push(secondItem);
                        _g.label = 5;
                    case 5: return [3 /*break*/, 2];
                    case 6: return [3 /*break*/, 13];
                    case 7:
                        e_1_1 = _g.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 13];
                    case 8:
                        _g.trys.push([8, , 11, 12]);
                        if (!(_b && !_b.done && (_e = _a.return))) return [3 /*break*/, 10];
                        return [4 /*yield*/, tslib_1.__await(_e.call(_a))];
                    case 9:
                        _g.sent();
                        _g.label = 10;
                    case 10: return [3 /*break*/, 12];
                    case 11:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 12: return [7 /*endfinally*/];
                    case 13:
                        _g.trys.push([13, 21, 22, 27]);
                        _c = tslib_1.__asyncValues(this._first);
                        _g.label = 14;
                    case 14: return [4 /*yield*/, tslib_1.__await(_c.next())];
                    case 15:
                        if (!(_d = _g.sent(), !_d.done)) return [3 /*break*/, 20];
                        return [4 /*yield*/, tslib_1.__await(_d.value)];
                    case 16:
                        firstItem = _g.sent();
                        return [4 /*yield*/, tslib_1.__await(arrayRemove(map, firstItem, this._comparer))];
                    case 17:
                        if (!_g.sent()) return [3 /*break*/, 19];
                        return [4 /*yield*/, firstItem];
                    case 18:
                        _g.sent();
                        _g.label = 19;
                    case 19: return [3 /*break*/, 14];
                    case 20: return [3 /*break*/, 27];
                    case 21:
                        e_2_1 = _g.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 27];
                    case 22:
                        _g.trys.push([22, , 25, 26]);
                        if (!(_d && !_d.done && (_f = _c.return))) return [3 /*break*/, 24];
                        return [4 /*yield*/, tslib_1.__await(_f.call(_c))];
                    case 23:
                        _g.sent();
                        _g.label = 24;
                    case 24: return [3 /*break*/, 26];
                    case 25:
                        if (e_2) throw e_2.error;
                        return [7 /*endfinally*/];
                    case 26: return [7 /*endfinally*/];
                    case 27: return [2 /*return*/];
                }
            });
        });
    };
    return IntersectAsyncIterable;
}(AsyncIterableX));
export function intersect(first, second, comparer) {
    if (comparer === void 0) { comparer = comparerAsync; }
    return new IntersectAsyncIterable(first, second, comparer);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvaW50ZXJzZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRXJELHFCQUNJLEtBQVUsRUFBRSxJQUFPLEVBQ25CLFFBQW9EOzs7Ozt3QkFDNUMscUJBQU0saUJBQWlCLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsRUFBQTs7b0JBQXBELEdBQUcsR0FBRyxTQUE4QztvQkFDeEQsRUFBRSxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFBQyxNQUFNLGdCQUFDLEtBQUssRUFBQztvQkFBQyxDQUFDO29CQUNqQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDckIsc0JBQU8sSUFBSSxFQUFDOzs7O0NBQ2I7QUFFRDtJQUE4QyxrREFBdUI7SUFLbkUsZ0NBQ0UsS0FBNkIsRUFDN0IsTUFBOEIsRUFDOUIsUUFBZ0U7UUFIbEUsWUFJRSxpQkFBTyxTQUlSO1FBSEMsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsS0FBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7O0lBQzVCLENBQUM7SUFFTSxpQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ00sR0FBRyxHQUFHLEVBQUUsQ0FBQzs7Ozt3QkFDZ0IsS0FBQSxzQkFBQSxJQUFJLENBQUMsT0FBTyxDQUFBOzs7Ozs7O3dCQUExQixVQUFVLFlBQUE7d0JBQ3ZCLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBR0ssS0FBQSxzQkFBQSxJQUFJLENBQUMsTUFBTSxDQUFBOzs7Ozs7O3dCQUF4QixTQUFTLFlBQUE7d0JBQ2xCLHFDQUFNLFdBQVcsQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBQTs7NkJBQWpELFNBQWlELEVBQWpELHlCQUFpRDt3QkFDbkQscUJBQU0sU0FBUyxFQUFBOzt3QkFBZixTQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdyQjtJQUNILDZCQUFDO0FBQUQsQ0EzQkEsQUEyQkMsQ0EzQjZDLGNBQWMsR0EyQjNEO0FBRUQsTUFBTSxvQkFDRixLQUE2QixFQUM3QixNQUE4QixFQUM5QixRQUFnRjtJQUFoRix5QkFBQSxFQUFBLHdCQUFnRjtJQUNsRixNQUFNLENBQUMsSUFBSSxzQkFBc0IsQ0FBVSxLQUFLLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3RFLENBQUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9pbnRlcnNlY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgYXJyYXlJbmRleE9mQXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9hcnJheWluZGV4b2YnO1xuaW1wb3J0IHsgY29tcGFyZXJBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2NvbXBhcmVyJztcblxuYXN5bmMgZnVuY3Rpb24gYXJyYXlSZW1vdmU8VD4oXG4gICAgYXJyYXk6IFRbXSwgaXRlbTogVCxcbiAgICBjb21wYXJlcjogKHg6IFQsIHk6IFQpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KTogUHJvbWlzZTxib29sZWFuPiB7XG4gIGxldCBpZHggPSBhd2FpdCBhcnJheUluZGV4T2ZBc3luYyhhcnJheSwgaXRlbSwgY29tcGFyZXIpO1xuICBpZiAoaWR4ID09PSAtMSkgeyByZXR1cm4gZmFsc2U7IH1cbiAgYXJyYXkuc3BsaWNlKGlkeCwgMSk7XG4gIHJldHVybiB0cnVlO1xufVxuXG5jbGFzcyBJbnRlcnNlY3RBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9maXJzdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfc2Vjb25kOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9jb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIGZpcnN0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlY29uZDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBjb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9maXJzdCA9IGZpcnN0O1xuICAgIHRoaXMuX3NlY29uZCA9IHNlY29uZDtcbiAgICB0aGlzLl9jb21wYXJlciA9IGNvbXBhcmVyO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IG1hcCA9IFtdO1xuICAgIGZvciBhd2FpdCAobGV0IHNlY29uZEl0ZW0gb2YgdGhpcy5fc2Vjb25kKSB7XG4gICAgICBtYXAucHVzaChzZWNvbmRJdGVtKTtcbiAgICB9XG5cbiAgICBmb3IgYXdhaXQgKGxldCBmaXJzdEl0ZW0gb2YgdGhpcy5fZmlyc3QpIHtcbiAgICAgIGlmIChhd2FpdCBhcnJheVJlbW92ZShtYXAsIGZpcnN0SXRlbSwgdGhpcy5fY29tcGFyZXIpKSB7XG4gICAgICAgIHlpZWxkIGZpcnN0SXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGludGVyc2VjdDxUU291cmNlPihcbiAgICBmaXJzdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBzZWNvbmQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiA9IGNvbXBhcmVyQXN5bmMpOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgSW50ZXJzZWN0QXN5bmNJdGVyYWJsZTxUU291cmNlPihmaXJzdCwgc2Vjb25kLCBjb21wYXJlcik7XG59XG4iXX0=
