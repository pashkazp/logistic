import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
var GenerateAsyncIterable = (function (_super) {
    tslib_1.__extends(GenerateAsyncIterable, _super);
    function GenerateAsyncIterable(initialState, condition, iterate, resultSelector) {
        var _this = _super.call(this) || this;
        _this._initialState = initialState;
        _this._condition = condition;
        _this._iterate = iterate;
        _this._resultSelector = resultSelector;
        return _this;
    }
    GenerateAsyncIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var i;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = this._initialState;
                        _a.label = 1;
                    case 1: return [4 /*yield*/, tslib_1.__await(this._condition(i))];
                    case 2:
                        if (!_a.sent()) return [3 /*break*/, 7];
                        return [4 /*yield*/, tslib_1.__await(this._resultSelector(i))];
                    case 3: return [4 /*yield*/, _a.sent()];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [4 /*yield*/, tslib_1.__await(this._iterate(i))];
                    case 6:
                        i = _a.sent();
                        return [3 /*break*/, 1];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    return GenerateAsyncIterable;
}(AsyncIterableX));
export function generate(initialState, condition, iterate, resultSelector) {
    return new GenerateAsyncIterable(initialState, condition, iterate, resultSelector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZ2VuZXJhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRDtJQUFxRCxpREFBdUI7SUFNMUUsK0JBQ0ksWUFBb0IsRUFDcEIsU0FBd0QsRUFDeEQsT0FBb0QsRUFDcEQsY0FBNkQ7UUFKakUsWUFLRSxpQkFBTyxTQUtSO1FBSkMsS0FBSSxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUM7UUFDbEMsS0FBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7UUFDNUIsS0FBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUM7UUFDeEIsS0FBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7O0lBQ3hDLENBQUM7SUFFTSxnQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQTdCOzs7Ozs7d0JBQ1csQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhOzs0QkFBRSxxQ0FBTSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxHQUFBOzs2QkFBeEIsU0FBd0I7d0JBQ2pELHFDQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLEdBQUE7NEJBQW5DLHFCQUFNLFNBQTZCLEVBQUE7O3dCQUFuQyxTQUFtQyxDQUFDOzs0QkFEeUIscUNBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBQTs7d0JBQTFCLENBQUMsR0FBRyxTQUFzQixDQUFBOzs7Ozs7S0FHdEY7SUFDSCw0QkFBQztBQUFELENBdkJBLEFBdUJDLENBdkJvRCxjQUFjLEdBdUJsRTtBQUVELE1BQU0sbUJBQ0YsWUFBb0IsRUFDcEIsU0FBd0QsRUFDeEQsT0FBb0QsRUFDcEQsY0FBNkQ7SUFDL0QsTUFBTSxDQUFDLElBQUkscUJBQXFCLENBQWtCLFlBQVksRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0FBQ3RHLENBQUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9nZW5lcmF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5cbmNsYXNzIEdlbmVyYXRlQXN5bmNJdGVyYWJsZTxUU3RhdGUsIFRSZXN1bHQ+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICBwcml2YXRlIF9pbml0aWFsU3RhdGU6IFRTdGF0ZTtcbiAgcHJpdmF0ZSBfY29uZGl0aW9uOiAodmFsdWU6IFRTdGF0ZSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj47XG4gIHByaXZhdGUgX2l0ZXJhdGU6ICh2YWx1ZTogVFN0YXRlKSA9PiBUU3RhdGUgfCBQcm9taXNlPFRTdGF0ZT47XG4gIHByaXZhdGUgX3Jlc3VsdFNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBpbml0aWFsU3RhdGU6IFRTdGF0ZSxcbiAgICAgIGNvbmRpdGlvbjogKHZhbHVlOiBUU3RhdGUpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+LFxuICAgICAgaXRlcmF0ZTogKHZhbHVlOiBUU3RhdGUpID0+IFRTdGF0ZSB8IFByb21pc2U8VFN0YXRlPixcbiAgICAgIHJlc3VsdFNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2luaXRpYWxTdGF0ZSA9IGluaXRpYWxTdGF0ZTtcbiAgICB0aGlzLl9jb25kaXRpb24gPSBjb25kaXRpb247XG4gICAgdGhpcy5faXRlcmF0ZSA9IGl0ZXJhdGU7XG4gICAgdGhpcy5fcmVzdWx0U2VsZWN0b3IgPSByZXN1bHRTZWxlY3RvcjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IGkgPSB0aGlzLl9pbml0aWFsU3RhdGU7IGF3YWl0IHRoaXMuX2NvbmRpdGlvbihpKTsgaSA9IGF3YWl0IHRoaXMuX2l0ZXJhdGUoaSkpIHtcbiAgICAgIHlpZWxkIGF3YWl0IHRoaXMuX3Jlc3VsdFNlbGVjdG9yKGkpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGU8VFN0YXRlLCBUUmVzdWx0PihcbiAgICBpbml0aWFsU3RhdGU6IFRTdGF0ZSxcbiAgICBjb25kaXRpb246ICh2YWx1ZTogVFN0YXRlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPixcbiAgICBpdGVyYXRlOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFN0YXRlIHwgUHJvbWlzZTxUU3RhdGU+LFxuICAgIHJlc3VsdFNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD4pOiBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgR2VuZXJhdGVBc3luY0l0ZXJhYmxlPFRTdGF0ZSwgVFJlc3VsdD4oaW5pdGlhbFN0YXRlLCBjb25kaXRpb24sIGl0ZXJhdGUsIHJlc3VsdFNlbGVjdG9yKTtcbn1cbiJdfQ==
