import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
var ReverseIterator = (function (_super) {
    tslib_1.__extends(ReverseIterator, _super);
    function ReverseIterator(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    ReverseIterator.prototype[Symbol.iterator] = function () {
        var results, _a, _b, item, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    results = [];
                    try {
                        for (_a = tslib_1.__values(this._source), _b = _a.next(); !_b.done; _b = _a.next()) {
                            item = _b.value;
                            results.unshift(item);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    return [5 /*yield**/, tslib_1.__values(results)];
                case 1:
                    _d.sent();
                    return [2 /*return*/];
            }
        });
    };
    return ReverseIterator;
}(IterableX));
export function reverse(source) {
    return new ReverseIterator(source);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3JldmVyc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFeEM7SUFBdUMsMkNBQWtCO0lBR3ZELHlCQUFZLE1BQXlCO1FBQXJDLFlBQ0UsaUJBQU8sU0FFUjtRQURDLEtBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDOztJQUN4QixDQUFDO0lBRUEsMEJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ00sT0FBTyxHQUFHLEVBQUUsQ0FBQzs7d0JBQ2pCLEdBQUcsQ0FBQyxDQUFhLEtBQUEsaUJBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQTs0QkFBcEIsSUFBSTs0QkFDWCxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO3lCQUN2Qjs7Ozs7Ozs7O29CQUNELHNCQUFBLGlCQUFPLE9BQU8sQ0FBQSxFQUFBOztvQkFBZCxTQUFjLENBQUM7Ozs7S0FDaEI7SUFDSCxzQkFBQztBQUFELENBZkEsQUFlQyxDQWZzQyxTQUFTLEdBZS9DO0FBRUQsTUFBTSxrQkFBMkIsTUFBeUI7SUFDeEQsTUFBTSxDQUFDLElBQUksZUFBZSxDQUFVLE1BQU0sQ0FBQyxDQUFDO0FBQzlDLENBQUMiLCJmaWxlIjoiaXRlcmFibGUvcmV2ZXJzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcblxuY2xhc3MgUmV2ZXJzZUl0ZXJhdG9yPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUU291cmNlPjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgbGV0IHJlc3VsdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgcmVzdWx0cy51bnNoaWZ0KGl0ZW0pO1xuICAgIH1cbiAgICB5aWVsZCogcmVzdWx0cztcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmV2ZXJzZTxUU291cmNlPihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+KTogSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBSZXZlcnNlSXRlcmF0b3I8VFNvdXJjZT4oc291cmNlKTtcbn1cbiJdfQ==
