import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
var OnErrorResumeNextIterable = (function (_super) {
    tslib_1.__extends(OnErrorResumeNextIterable, _super);
    function OnErrorResumeNextIterable(source) {
        var _this = _super.call(this) || this;
        _this._source = source;
        return _this;
    }
    OnErrorResumeNextIterable.prototype[Symbol.iterator] = function () {
        var _a, _b, item, it, next, e_1_1, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    _d.trys.push([0, 6, 7, 8]);
                    _a = tslib_1.__values(this._source), _b = _a.next();
                    _d.label = 1;
                case 1:
                    if (!!_b.done) return [3 /*break*/, 5];
                    item = _b.value;
                    it = item[Symbol.iterator]();
                    _d.label = 2;
                case 2:
                    if (!1) return [3 /*break*/, 4];
                    next = void 0;
                    try {
                        next = it.next();
                    }
                    catch (e) {
                        return [3 /*break*/, 4];
                    }
                    if (next.done) {
                        return [3 /*break*/, 4];
                    }
                    return [4 /*yield*/, next.value];
                case 3:
                    _d.sent();
                    return [3 /*break*/, 2];
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 1];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/];
            }
        });
    };
    return OnErrorResumeNextIterable;
}(IterableX));
export function onErrorResumeNext(source) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
    }
    return new OnErrorResumeNextIterable(tslib_1.__spread([source], args));
}
export function onErrorResumeNextStatic() {
    var source = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        source[_i] = arguments[_i];
    }
    return new OnErrorResumeNextIterable(source);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL29uZXJyb3JyZXN1bWVuZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDO0lBQWlELHFEQUFrQjtJQUdqRSxtQ0FBWSxNQUFtQztRQUEvQyxZQUNFLGlCQUFPLFNBRVI7UUFEQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQzs7SUFDeEIsQ0FBQztJQUVBLG9DQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7OztvQkFDbUIsS0FBQSxpQkFBQSxJQUFJLENBQUMsT0FBTyxDQUFBOzs7O29CQUFwQixJQUFJO29CQUNQLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7Ozt5QkFDMUIsQ0FBQztvQkFDRixJQUFJLFNBQUEsQ0FBQztvQkFDVCxJQUFJLENBQUM7d0JBQ0gsSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztvQkFDbkIsQ0FBQztvQkFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNYLE1BQU0sa0JBQUE7b0JBQ1IsQ0FBQztvQkFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxNQUFNLGtCQUFBO29CQUFDLENBQUM7b0JBQ3pCLHFCQUFNLElBQUksQ0FBQyxLQUFLLEVBQUE7O29CQUFoQixTQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBR3RCO0lBQ0gsZ0NBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCZ0QsU0FBUyxHQXdCekQ7QUFFRCxNQUFNLDRCQUErQixNQUFtQjtJQUFFLGNBQXNCO1NBQXRCLFVBQXNCLEVBQXRCLHFCQUFzQixFQUF0QixJQUFzQjtRQUF0Qiw2QkFBc0I7O0lBQzlFLE1BQU0sQ0FBQyxJQUFJLHlCQUF5QixtQkFBSyxNQUFNLEdBQUssSUFBSSxFQUFFLENBQUM7QUFDN0QsQ0FBQztBQUVELE1BQU07SUFBcUMsZ0JBQXdCO1NBQXhCLFVBQXdCLEVBQXhCLHFCQUF3QixFQUF4QixJQUF3QjtRQUF4QiwyQkFBd0I7O0lBQ2pFLE1BQU0sQ0FBQyxJQUFJLHlCQUF5QixDQUFJLE1BQU0sQ0FBQyxDQUFDO0FBQ2xELENBQUMiLCJmaWxlIjoiaXRlcmFibGUvb25lcnJvcnJlc3VtZW5leHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5cbmNsYXNzIE9uRXJyb3JSZXN1bWVOZXh0SXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPEl0ZXJhYmxlPFRTb3VyY2U+PjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPEl0ZXJhYmxlPFRTb3VyY2U+Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG5cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBsZXQgaXQgPSBpdGVtW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgIGxldCBuZXh0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgIG5leHQgPSBpdC5uZXh0KCk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChuZXh0LmRvbmUpIHsgYnJlYWs7IH1cbiAgICAgICAgeWllbGQgbmV4dC52YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uRXJyb3JSZXN1bWVOZXh0PFQ+KHNvdXJjZTogSXRlcmFibGU8VD4sIC4uLmFyZ3M6IEl0ZXJhYmxlPFQ+W10pOiBJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IE9uRXJyb3JSZXN1bWVOZXh0SXRlcmFibGU8VD4oW3NvdXJjZSwgLi4uYXJnc10pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25FcnJvclJlc3VtZU5leHRTdGF0aWM8VD4oLi4uc291cmNlOiBJdGVyYWJsZTxUPltdKTogSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlPFQ+KHNvdXJjZSk7XG59XG4iXX0=
