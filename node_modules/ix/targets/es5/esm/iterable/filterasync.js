import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
import { bindCallback } from '../internal/bindcallback';
var FilterIterable = (function (_super) {
    tslib_1.__extends(FilterIterable, _super);
    function FilterIterable(source, predicate) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._predicate = predicate;
        return _this;
    }
    FilterIterable.prototype[Symbol.asyncIterator] = function () {
        return tslib_1.__asyncGenerator(this, arguments, function _a() {
            var i, _a, _b, item, e_1_1, e_1, _c;
            return tslib_1.__generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        i = 0;
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 9, 10, 15]);
                        _a = tslib_1.__asyncValues((this._source));
                        _d.label = 2;
                    case 2: return [4 /*yield*/, tslib_1.__await(_a.next())];
                    case 3:
                        if (!(_b = _d.sent(), !_b.done)) return [3 /*break*/, 8];
                        return [4 /*yield*/, tslib_1.__await(_b.value)];
                    case 4:
                        item = _d.sent();
                        return [4 /*yield*/, tslib_1.__await(this._predicate(item, i++))];
                    case 5:
                        if (!_d.sent()) return [3 /*break*/, 7];
                        return [4 /*yield*/, item];
                    case 6:
                        _d.sent();
                        _d.label = 7;
                    case 7: return [3 /*break*/, 2];
                    case 8: return [3 /*break*/, 15];
                    case 9:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 15];
                    case 10:
                        _d.trys.push([10, , 13, 14]);
                        if (!(_b && !_b.done && (_c = _a.return))) return [3 /*break*/, 12];
                        return [4 /*yield*/, tslib_1.__await(_c.call(_a))];
                    case 11:
                        _d.sent();
                        _d.label = 12;
                    case 12: return [3 /*break*/, 14];
                    case 13:
                        if (e_1) throw e_1.error;
                        return [7 /*endfinally*/];
                    case 14: return [7 /*endfinally*/];
                    case 15: return [2 /*return*/];
                }
            });
        });
    };
    return FilterIterable;
}(AsyncIterableX));
/**
* Filters a sequence of values based on a predicate.
* @param {Iterable<T | Promise<T>> | AsyncIterable<T>} source Source sequence.
* @param {function(value: T, index: number): boolean | Promise<boolean>} predicate A function to test each source element for a condition.
* @param {Object} [thisArg] Value to use as this when executing callback.
* @return {AsyncIterable<T>} Sequence that contains elements from the input sequence that satisfy the condition.
*/
export function filterAsync(source, predicate, thisArg) {
    return new FilterIterable(source, bindCallback(predicate, thisArg, 2));
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2ZpbHRlcmFzeW5jLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXhEO0lBQXNDLDBDQUF1QjtJQUkzRCx3QkFDSSxNQUF5RSxFQUN6RSxTQUF3RTtRQUY1RSxZQUdFLGlCQUFPLFNBR1I7UUFGQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixLQUFJLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQzs7SUFDOUIsQ0FBQztJQUVNLHlCQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBN0I7Ozs7Ozt3QkFDTSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7O3dCQUNhLEtBQUEsc0JBQXdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBOzs7Ozs7O3dCQUE5QyxJQUFJLFlBQUE7d0JBQ2IscUNBQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBQTs7NkJBQWhDLFNBQWdDLEVBQWhDLHdCQUFnQzt3QkFDbEMscUJBQU0sSUFBSSxFQUFBOzt3QkFBVixTQUFVLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUdoQjtJQUNILHFCQUFDO0FBQUQsQ0FwQkEsQUFvQkMsQ0FwQnFDLGNBQWMsR0FvQm5EO0FBRUQ7Ozs7OztFQU1FO0FBQ0YsTUFBTSxzQkFDRixNQUF5RSxFQUN6RSxTQUF3RSxFQUN4RSxPQUFhO0lBQ2YsTUFBTSxDQUFDLElBQUksY0FBYyxDQUFVLE1BQU0sRUFBRSxZQUFZLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xGLENBQUMiLCJmaWxlIjoiaXRlcmFibGUvZmlsdGVyYXN5bmMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgYmluZENhbGxiYWNrIH0gZnJvbSAnLi4vaW50ZXJuYWwvYmluZGNhbGxiYWNrJztcblxuY2xhc3MgRmlsdGVySXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZSB8IFByb21pc2VMaWtlPFRTb3VyY2U+PiB8IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX3ByZWRpY2F0ZTogKHZhbHVlOiBUU291cmNlLCBpbmRleDogbnVtYmVyKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZSB8IFByb21pc2VMaWtlPFRTb3VyY2U+PiB8IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBwcmVkaWNhdGU6ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9wcmVkaWNhdGUgPSBwcmVkaWNhdGU7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgaSA9IDA7XG4gICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiA8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4odGhpcy5fc291cmNlKSkge1xuICAgICAgaWYgKGF3YWl0IHRoaXMuX3ByZWRpY2F0ZShpdGVtLCBpKyspKSB7XG4gICAgICAgIHlpZWxkIGl0ZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuKiBGaWx0ZXJzIGEgc2VxdWVuY2Ugb2YgdmFsdWVzIGJhc2VkIG9uIGEgcHJlZGljYXRlLlxuKiBAcGFyYW0ge0l0ZXJhYmxlPFQgfCBQcm9taXNlPFQ+PiB8IEFzeW5jSXRlcmFibGU8VD59IHNvdXJjZSBTb3VyY2Ugc2VxdWVuY2UuXG4qIEBwYXJhbSB7ZnVuY3Rpb24odmFsdWU6IFQsIGluZGV4OiBudW1iZXIpOiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPn0gcHJlZGljYXRlIEEgZnVuY3Rpb24gdG8gdGVzdCBlYWNoIHNvdXJjZSBlbGVtZW50IGZvciBhIGNvbmRpdGlvbi5cbiogQHBhcmFtIHtPYmplY3R9IFt0aGlzQXJnXSBWYWx1ZSB0byB1c2UgYXMgdGhpcyB3aGVuIGV4ZWN1dGluZyBjYWxsYmFjay5cbiogQHJldHVybiB7QXN5bmNJdGVyYWJsZTxUPn0gU2VxdWVuY2UgdGhhdCBjb250YWlucyBlbGVtZW50cyBmcm9tIHRoZSBpbnB1dCBzZXF1ZW5jZSB0aGF0IHNhdGlzZnkgdGhlIGNvbmRpdGlvbi5cbiovXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVyQXN5bmM8VFNvdXJjZT4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlIHwgUHJvbWlzZUxpa2U8VFNvdXJjZT4+IHwgQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBwcmVkaWNhdGU6ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4sXG4gICAgdGhpc0FyZz86IGFueSk6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBGaWx0ZXJJdGVyYWJsZTxUU291cmNlPihzb3VyY2UsIGJpbmRDYWxsYmFjayhwcmVkaWNhdGUsIHRoaXNBcmcsIDIpKTtcbn1cbiJdfQ==
