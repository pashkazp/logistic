import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
var ZipIterable = (function (_super) {
    tslib_1.__extends(ZipIterable, _super);
    function ZipIterable(left, right, fn) {
        var _this = _super.call(this) || this;
        _this._left = left;
        _this._right = right;
        _this._fn = fn;
        return _this;
    }
    ZipIterable.prototype[Symbol.iterator] = function () {
        var it1, it2, next1, next2;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    it1 = this._left[Symbol.iterator](), it2 = this._right[Symbol.iterator]();
                    _a.label = 1;
                case 1:
                    if (!(!(next1 = it1.next()).done && (!(next2 = it2.next()).done))) return [3 /*break*/, 3];
                    return [4 /*yield*/, this._fn(next1.value, next2.value)];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 1];
                case 3: return [2 /*return*/];
            }
        });
    };
    return ZipIterable;
}(IterableX));
export function zip(left, right, fn) {
    return new ZipIterable(left, right, fn);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3ppcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QztJQUE0Qyx1Q0FBa0I7SUFLNUQscUJBQVksSUFBdUIsRUFBRSxLQUF3QixFQUFFLEVBQThDO1FBQTdHLFlBQ0UsaUJBQU8sU0FJUjtRQUhDLEtBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLEtBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLEtBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDOztJQUNoQixDQUFDO0lBRUEsc0JBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ1EsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7Ozt5QkFFekUsQ0FBQSxDQUFDLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7b0JBQy9ELHFCQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUE7O29CQUF4QyxTQUF3QyxDQUFDOzs7OztLQUU1QztJQUNILGtCQUFDO0FBQUQsQ0FuQkEsQUFtQkMsQ0FuQjJDLFNBQVMsR0FtQnBEO0FBRUQsTUFBTSxjQUNGLElBQXVCLEVBQ3ZCLEtBQXdCLEVBQ3hCLEVBQThDO0lBQ2hELE1BQU0sQ0FBQyxJQUFJLFdBQVcsQ0FBbUIsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztBQUM1RCxDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL3ppcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcblxuY2xhc3MgWmlwSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdD4gZXh0ZW5kcyBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICBwcml2YXRlIF9sZWZ0OiBJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfcmlnaHQ6IEl0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9mbjogKGxlZnQ6IFRTb3VyY2UsIHJpZ2h0OiBUU291cmNlKSA9PiBUUmVzdWx0O1xuXG4gIGNvbnN0cnVjdG9yKGxlZnQ6IEl0ZXJhYmxlPFRTb3VyY2U+LCByaWdodDogSXRlcmFibGU8VFNvdXJjZT4sIGZuOiAobGVmdDogVFNvdXJjZSwgcmlnaHQ6IFRTb3VyY2UpID0+IFRSZXN1bHQpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2xlZnQgPSBsZWZ0O1xuICAgIHRoaXMuX3JpZ2h0ID0gcmlnaHQ7XG4gICAgdGhpcy5fZm4gPSBmbjtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCBpdDEgPSB0aGlzLl9sZWZ0W1N5bWJvbC5pdGVyYXRvcl0oKSwgaXQyID0gdGhpcy5fcmlnaHRbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgIGxldCBuZXh0MSwgbmV4dDI7XG4gICAgd2hpbGUgKCEobmV4dDEgPSBpdDEubmV4dCgpKS5kb25lICYmICghKG5leHQyID0gaXQyLm5leHQoKSkuZG9uZSkpIHtcbiAgICAgIHlpZWxkIHRoaXMuX2ZuKG5leHQxLnZhbHVlLCBuZXh0Mi52YWx1ZSk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB6aXA8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgbGVmdDogSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgcmlnaHQ6IEl0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGZuOiAobGVmdDogVFNvdXJjZSwgcmlnaHQ6IFRTb3VyY2UpID0+IFRSZXN1bHQpOiBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IFppcEl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+KGxlZnQsIHJpZ2h0LCBmbik7XG59XG4iXX0=
