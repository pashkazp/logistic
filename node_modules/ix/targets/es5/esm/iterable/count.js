import * as tslib_1 from "tslib";
/**
 * Returns a number that represents how many elements in the specified sequence satisfy a condition if present,
 * else the number of items in the collection.
 * @param {Iterable<T>} source A sequence that contains elements to be tested and counted.
 * @param {function(value: T): boolean} [predicate] A function to test each element for a condition.
 */
export function count(source, predicate) {
    if (predicate === void 0) { predicate = function () { return true; }; }
    var i = 0;
    try {
        for (var source_1 = tslib_1.__values(source), source_1_1 = source_1.next(); !source_1_1.done; source_1_1 = source_1.next()) {
            var item = source_1_1.value;
            if (predicate(item)) {
                i++;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (source_1_1 && !source_1_1.done && (_a = source_1.return)) _a.call(source_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return i;
    var e_1, _a;
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2NvdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7R0FLRztBQUNILE1BQU0sZ0JBQ0YsTUFBbUIsRUFDbkIsU0FBNkM7SUFBN0MsMEJBQUEsRUFBQSwwQkFBeUMsT0FBQSxJQUFJLEVBQUosQ0FBSTtJQUMvQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7O1FBRVYsR0FBRyxDQUFDLENBQWEsSUFBQSxXQUFBLGlCQUFBLE1BQU0sQ0FBQSw4QkFBQTtZQUFsQixJQUFJLElBQUksbUJBQUE7WUFDWCxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNwQixDQUFDLEVBQUUsQ0FBQztZQUNOLENBQUM7U0FDRjs7Ozs7Ozs7O0lBRUQsTUFBTSxDQUFDLENBQUMsQ0FBQzs7QUFDWCxDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL2NvdW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIHRoYXQgcmVwcmVzZW50cyBob3cgbWFueSBlbGVtZW50cyBpbiB0aGUgc3BlY2lmaWVkIHNlcXVlbmNlIHNhdGlzZnkgYSBjb25kaXRpb24gaWYgcHJlc2VudCxcbiAqIGVsc2UgdGhlIG51bWJlciBvZiBpdGVtcyBpbiB0aGUgY29sbGVjdGlvbi5cbiAqIEBwYXJhbSB7SXRlcmFibGU8VD59IHNvdXJjZSBBIHNlcXVlbmNlIHRoYXQgY29udGFpbnMgZWxlbWVudHMgdG8gYmUgdGVzdGVkIGFuZCBjb3VudGVkLlxuICogQHBhcmFtIHtmdW5jdGlvbih2YWx1ZTogVCk6IGJvb2xlYW59IFtwcmVkaWNhdGVdIEEgZnVuY3Rpb24gdG8gdGVzdCBlYWNoIGVsZW1lbnQgZm9yIGEgY29uZGl0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY291bnQ8VD4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUPixcbiAgICBwcmVkaWNhdGU6ICh2YWx1ZTogVCkgPT4gYm9vbGVhbiA9ICgpID0+IHRydWUpOiBudW1iZXIge1xuICBsZXQgaSA9IDA7XG5cbiAgZm9yIChsZXQgaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBpZiAocHJlZGljYXRlKGl0ZW0pKSB7XG4gICAgICBpKys7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGk7XG59XG4iXX0=
