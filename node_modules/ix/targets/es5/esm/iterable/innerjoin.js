import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
import { createGrouping } from './_grouping';
import { identity } from '../internal/identity';
var JoinIterable = (function (_super) {
    tslib_1.__extends(JoinIterable, _super);
    function JoinIterable(outer, inner, outerSelector, innerSelector, resultSelector) {
        var _this = _super.call(this) || this;
        _this._outer = outer;
        _this._inner = inner;
        _this._outerSelector = outerSelector;
        _this._innerSelector = innerSelector;
        _this._resultSelector = resultSelector;
        return _this;
    }
    JoinIterable.prototype[Symbol.iterator] = function () {
        var map, _a, _b, outerElement, outerKey, _c, _d, innerElement, e_1_1, e_2_1, e_2, _e, e_1, _f;
        return tslib_1.__generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    map = createGrouping(this._inner, this._innerSelector, identity);
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 12, 13, 14]);
                    _a = tslib_1.__values(this._outer), _b = _a.next();
                    _g.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 11];
                    outerElement = _b.value;
                    outerKey = this._outerSelector(outerElement);
                    if (!map.has(outerKey)) return [3 /*break*/, 10];
                    _g.label = 3;
                case 3:
                    _g.trys.push([3, 8, 9, 10]);
                    _c = tslib_1.__values(map.get(outerKey)), _d = _c.next();
                    _g.label = 4;
                case 4:
                    if (!!_d.done) return [3 /*break*/, 7];
                    innerElement = _d.value;
                    return [4 /*yield*/, this._resultSelector(outerElement, innerElement)];
                case 5:
                    _g.sent();
                    _g.label = 6;
                case 6:
                    _d = _c.next();
                    return [3 /*break*/, 4];
                case 7: return [3 /*break*/, 10];
                case 8:
                    e_1_1 = _g.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 10];
                case 9:
                    try {
                        if (_d && !_d.done && (_f = _c.return)) _f.call(_c);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 10:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 11: return [3 /*break*/, 14];
                case 12:
                    e_2_1 = _g.sent();
                    e_2 = { error: e_2_1 };
                    return [3 /*break*/, 14];
                case 13:
                    try {
                        if (_b && !_b.done && (_e = _a.return)) _e.call(_a);
                    }
                    finally { if (e_2) throw e_2.error; }
                    return [7 /*endfinally*/];
                case 14: return [2 /*return*/];
            }
        });
    };
    return JoinIterable;
}(IterableX));
export function innerJoin(outer, inner, outerSelector, innerSelector, resultSelector) {
    return new JoinIterable(outer, inner, outerSelector, innerSelector, resultSelector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2lubmVyam9pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVoRDtJQUEwRCx3Q0FBa0I7SUFPMUUsc0JBQ0UsS0FBdUIsRUFDdkIsS0FBdUIsRUFDdkIsYUFBc0MsRUFDdEMsYUFBc0MsRUFDdEMsY0FBeUQ7UUFMM0QsWUFNRSxpQkFBTyxTQU1SO1FBTEMsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsS0FBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsS0FBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDcEMsS0FBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDcEMsS0FBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7O0lBQ3hDLENBQUM7SUFFQSx1QkFBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQWxCOzs7OztvQkFDUSxHQUFHLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQzs7OztvQkFDOUMsS0FBQSxpQkFBQSxJQUFJLENBQUMsTUFBTSxDQUFBOzs7O29CQUEzQixZQUFZO29CQUNiLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDO3lCQUMvQyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFqQix5QkFBaUI7Ozs7b0JBQ00sS0FBQSxpQkFBQSxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBRSxDQUFBOzs7O29CQUFsQyxZQUFZO29CQUNuQixxQkFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsRUFBQTs7b0JBQXRELFNBQXNELENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQUk5RDtJQUNILG1CQUFDO0FBQUQsQ0FoQ0EsQUFnQ0MsQ0FoQ3lELFNBQVMsR0FnQ2xFO0FBRUQsTUFBTSxvQkFDRixLQUF1QixFQUN2QixLQUF1QixFQUN2QixhQUFzQyxFQUN0QyxhQUFzQyxFQUN0QyxjQUF5RDtJQUMzRCxNQUFNLENBQUMsSUFBSSxZQUFZLENBQ3JCLEtBQUssRUFDTCxLQUFLLEVBQ0wsYUFBYSxFQUNiLGFBQWEsRUFDYixjQUFjLENBQUMsQ0FBQztBQUNwQixDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL2lubmVyam9pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmltcG9ydCB7IGNyZWF0ZUdyb3VwaW5nIH0gZnJvbSAnLi9fZ3JvdXBpbmcnO1xuaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5cbmNsYXNzIEpvaW5JdGVyYWJsZTxUT3V0ZXIsIFRJbm5lciwgVEtleSwgVFJlc3VsdD4gZXh0ZW5kcyBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICBwcml2YXRlIF9vdXRlcjogSXRlcmFibGU8VE91dGVyPjtcbiAgcHJpdmF0ZSBfaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj47XG4gIHByaXZhdGUgX291dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5O1xuICBwcml2YXRlIF9pbm5lclNlbGVjdG9yOiAodmFsdWU6IFRJbm5lcikgPT4gVEtleTtcbiAgcHJpdmF0ZSBfcmVzdWx0U2VsZWN0b3I6IChvdXRlcjogVE91dGVyLCBpbm5lcjogVElubmVyKSA9PiBUUmVzdWx0O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIG91dGVyOiBJdGVyYWJsZTxUT3V0ZXI+LFxuICAgIGlubmVyOiBJdGVyYWJsZTxUSW5uZXI+LFxuICAgIG91dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5LFxuICAgIGlubmVyU2VsZWN0b3I6ICh2YWx1ZTogVElubmVyKSA9PiBUS2V5LFxuICAgIHJlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IFRJbm5lcikgPT4gVFJlc3VsdCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fb3V0ZXIgPSBvdXRlcjtcbiAgICB0aGlzLl9pbm5lciA9IGlubmVyO1xuICAgIHRoaXMuX291dGVyU2VsZWN0b3IgPSBvdXRlclNlbGVjdG9yO1xuICAgIHRoaXMuX2lubmVyU2VsZWN0b3IgPSBpbm5lclNlbGVjdG9yO1xuICAgIHRoaXMuX3Jlc3VsdFNlbGVjdG9yID0gcmVzdWx0U2VsZWN0b3I7XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgbWFwID0gY3JlYXRlR3JvdXBpbmcodGhpcy5faW5uZXIsIHRoaXMuX2lubmVyU2VsZWN0b3IsIGlkZW50aXR5KTtcbiAgICBmb3IgKGxldCBvdXRlckVsZW1lbnQgb2YgdGhpcy5fb3V0ZXIpIHtcbiAgICAgIGNvbnN0IG91dGVyS2V5ID0gdGhpcy5fb3V0ZXJTZWxlY3RvcihvdXRlckVsZW1lbnQpO1xuICAgICAgaWYgKG1hcC5oYXMob3V0ZXJLZXkpKSB7XG4gICAgICAgIGZvciAobGV0IGlubmVyRWxlbWVudCBvZiBtYXAuZ2V0KG91dGVyS2V5KSEpIHtcbiAgICAgICAgICB5aWVsZCB0aGlzLl9yZXN1bHRTZWxlY3RvcihvdXRlckVsZW1lbnQsIGlubmVyRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlubmVySm9pbjxUT3V0ZXIsIFRJbm5lciwgVEtleSwgVFJlc3VsdD4oXG4gICAgb3V0ZXI6IEl0ZXJhYmxlPFRPdXRlcj4sXG4gICAgaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj4sXG4gICAgb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXksXG4gICAgaW5uZXJTZWxlY3RvcjogKHZhbHVlOiBUSW5uZXIpID0+IFRLZXksXG4gICAgcmVzdWx0U2VsZWN0b3I6IChvdXRlcjogVE91dGVyLCBpbm5lcjogVElubmVyKSA9PiBUUmVzdWx0KTogSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBKb2luSXRlcmFibGU8VE91dGVyLCBUSW5uZXIsIFRLZXksIFRSZXN1bHQ+KFxuICAgIG91dGVyLFxuICAgIGlubmVyLFxuICAgIG91dGVyU2VsZWN0b3IsXG4gICAgaW5uZXJTZWxlY3RvcixcbiAgICByZXN1bHRTZWxlY3Rvcik7XG59XG4iXX0=
