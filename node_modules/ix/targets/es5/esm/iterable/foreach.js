import * as tslib_1 from "tslib";
import { bindCallback } from '../internal/bindcallback';
/**
 * Iterates the sequence and invokes the given action for each value in the sequence.
 * @param {Iterable<T>} source Source sequence.
 * @param {function:(value: T, index: number): void} callback Action to invoke for each element.
 * @param {Object} [thisArg] Optional "this" binding for the callback.
 */
export function forEach(source, callback, thisArg) {
    var i = 0;
    var fn = bindCallback(callback, thisArg, 2);
    try {
        for (var source_1 = tslib_1.__values(source), source_1_1 = source_1.next(); !source_1_1.done; source_1_1 = source_1.next()) {
            var item = source_1_1.value;
            fn(item, i++);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (source_1_1 && !source_1_1.done && (_a = source_1.return)) _a.call(source_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    var e_1, _a;
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2ZvcmVhY2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUV4RDs7Ozs7R0FLRztBQUNILE1BQU0sa0JBQ0YsTUFBeUIsRUFDekIsUUFBaUQsRUFDakQsT0FBYTtJQUNmLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNWLElBQU0sRUFBRSxHQUFHLFlBQVksQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDOztRQUM5QyxHQUFHLENBQUMsQ0FBYSxJQUFBLFdBQUEsaUJBQUEsTUFBTSxDQUFBLDhCQUFBO1lBQWxCLElBQUksSUFBSSxtQkFBQTtZQUNYLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUNmOzs7Ozs7Ozs7O0FBQ0gsQ0FBQyIsImZpbGUiOiJpdGVyYWJsZS9mb3JlYWNoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmluZENhbGxiYWNrIH0gZnJvbSAnLi4vaW50ZXJuYWwvYmluZGNhbGxiYWNrJztcblxuLyoqXG4gKiBJdGVyYXRlcyB0aGUgc2VxdWVuY2UgYW5kIGludm9rZXMgdGhlIGdpdmVuIGFjdGlvbiBmb3IgZWFjaCB2YWx1ZSBpbiB0aGUgc2VxdWVuY2UuXG4gKiBAcGFyYW0ge0l0ZXJhYmxlPFQ+fSBzb3VyY2UgU291cmNlIHNlcXVlbmNlLlxuICogQHBhcmFtIHtmdW5jdGlvbjoodmFsdWU6IFQsIGluZGV4OiBudW1iZXIpOiB2b2lkfSBjYWxsYmFjayBBY3Rpb24gdG8gaW52b2tlIGZvciBlYWNoIGVsZW1lbnQuXG4gKiBAcGFyYW0ge09iamVjdH0gW3RoaXNBcmddIE9wdGlvbmFsIFwidGhpc1wiIGJpbmRpbmcgZm9yIHRoZSBjYWxsYmFjay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2g8VFNvdXJjZT4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPixcbiAgICBjYWxsYmFjazogKHZhbHVlOiBUU291cmNlLCBpbmRleDogbnVtYmVyKSA9PiB2b2lkLFxuICAgIHRoaXNBcmc/OiBhbnkpOiB2b2lkIHtcbiAgbGV0IGkgPSAwO1xuICBjb25zdCBmbiA9IGJpbmRDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMik7XG4gIGZvciAobGV0IGl0ZW0gb2Ygc291cmNlKSB7XG4gICAgZm4oaXRlbSwgaSsrKTtcbiAgfVxufVxuIl19
