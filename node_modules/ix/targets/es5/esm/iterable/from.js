import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
import { bindCallback } from '../internal/bindcallback';
import { identity } from '../internal/identity';
import { toLength } from '../internal/tolength';
import { isIterable } from '../internal/isiterable';
var FromIterable = (function (_super) {
    tslib_1.__extends(FromIterable, _super);
    function FromIterable(source, fn) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._fn = fn;
        return _this;
    }
    FromIterable.prototype[Symbol.iterator] = function () {
        var iterable, i, _a, _b, item, e_1_1, length_1, val, e_1, _c;
        return tslib_1.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    iterable = isIterable(this._source);
                    i = 0;
                    if (!iterable) return [3 /*break*/, 9];
                    _d.label = 1;
                case 1:
                    _d.trys.push([1, 6, 7, 8]);
                    _a = tslib_1.__values(this._source), _b = _a.next();
                    _d.label = 2;
                case 2:
                    if (!!_b.done) return [3 /*break*/, 5];
                    item = _b.value;
                    return [4 /*yield*/, this._fn(item, i++)];
                case 3:
                    _d.sent();
                    _d.label = 4;
                case 4:
                    _b = _a.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _d.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [3 /*break*/, 12];
                case 9:
                    length_1 = toLength(this._source.length);
                    _d.label = 10;
                case 10:
                    if (!(i < length_1)) return [3 /*break*/, 12];
                    val = this._source[i];
                    return [4 /*yield*/, this._fn(val, i++)];
                case 11:
                    _d.sent();
                    return [3 /*break*/, 10];
                case 12: return [2 /*return*/];
            }
        });
    };
    return FromIterable;
}(IterableX));
export function from(source, fn, thisArg) {
    if (fn === void 0) { fn = identity; }
    return new FromIterable(source, bindCallback(fn, thisArg, 2));
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2Zyb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXBEO0lBQXVELHdDQUFrQjtJQUl2RSxzQkFBWSxNQUE4QyxFQUFFLEVBQThDO1FBQTFHLFlBQ0UsaUJBQU8sU0FHUjtRQUZDLEtBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLEtBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDOztJQUNoQixDQUFDO0lBRUEsdUJBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFsQjs7Ozs7b0JBQ1EsUUFBUSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7b0JBQ3RDLENBQUMsR0FBRyxDQUFDLENBQUM7eUJBQ04sUUFBUSxFQUFSLHdCQUFROzs7O29CQUNPLEtBQUEsaUJBQW1CLElBQUksQ0FBQyxPQUFPLENBQUE7Ozs7b0JBQXZDLElBQUk7b0JBQ1gscUJBQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBQTs7b0JBQXpCLFNBQXlCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFHeEIsV0FBUyxRQUFRLENBQXNCLElBQUksQ0FBQyxPQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7Ozt5QkFDMUQsQ0FBQSxDQUFDLEdBQUcsUUFBTSxDQUFBO29CQUNYLEdBQUcsR0FBd0IsSUFBSSxDQUFDLE9BQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDaEQscUJBQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBQTs7b0JBQXhCLFNBQXdCLENBQUM7Ozs7O0tBRzlCO0lBQ0gsbUJBQUM7QUFBRCxDQXpCQSxBQXlCQyxDQXpCc0QsU0FBUyxHQXlCL0Q7QUFFRCxNQUFNLGVBQ0YsTUFBOEMsRUFDOUMsRUFBeUQsRUFDekQsT0FBYTtJQURiLG1CQUFBLEVBQUEsYUFBeUQ7SUFFM0QsTUFBTSxDQUFDLElBQUksWUFBWSxDQUFtQixNQUFNLEVBQUUsWUFBWSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRixDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL2Zyb20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5pbXBvcnQgeyBiaW5kQ2FsbGJhY2sgfSBmcm9tICcuLi9pbnRlcm5hbC9iaW5kY2FsbGJhY2snO1xuaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5pbXBvcnQgeyB0b0xlbmd0aCB9IGZyb20gJy4uL2ludGVybmFsL3RvbGVuZ3RoJztcbmltcG9ydCB7IGlzSXRlcmFibGUgfSBmcm9tICcuLi9pbnRlcm5hbC9pc2l0ZXJhYmxlJztcblxuY2xhc3MgRnJvbUl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQgPSBUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4gfCBBcnJheUxpa2U8VFNvdXJjZT47XG4gIHByaXZhdGUgX2ZuOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IFRSZXN1bHQ7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiB8IEFycmF5TGlrZTxUU291cmNlPiwgZm46ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gVFJlc3VsdCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2ZuID0gZm47XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgaXRlcmFibGUgPSBpc0l0ZXJhYmxlKHRoaXMuX3NvdXJjZSk7XG4gICAgbGV0IGkgPSAwO1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgZm9yIChsZXQgaXRlbSBvZiA8SXRlcmFibGU8VFNvdXJjZT4+dGhpcy5fc291cmNlKSB7XG4gICAgICAgIHlpZWxkIHRoaXMuX2ZuKGl0ZW0sIGkrKyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBsZW5ndGggPSB0b0xlbmd0aCgoPEFycmF5TGlrZTxUU291cmNlPj50aGlzLl9zb3VyY2UpLmxlbmd0aCk7XG4gICAgICB3aGlsZSAoaSA8IGxlbmd0aCkge1xuICAgICAgICBsZXQgdmFsID0gKDxBcnJheUxpa2U8VFNvdXJjZT4+dGhpcy5fc291cmNlKVtpXTtcbiAgICAgICAgeWllbGQgdGhpcy5fZm4odmFsLCBpKyspO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbTxUU291cmNlLCBUUmVzdWx0ID0gVFNvdXJjZT4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiB8IEFycmF5TGlrZTxUU291cmNlPixcbiAgICBmbjogKHZhbHVlOiBUU291cmNlLCBpbmRleDogbnVtYmVyKSA9PiBUUmVzdWx0ID0gaWRlbnRpdHksXG4gICAgdGhpc0FyZz86IGFueSk6IEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgRnJvbUl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+KHNvdXJjZSwgYmluZENhbGxiYWNrKGZuLCB0aGlzQXJnLCAyKSk7XG59XG4iXX0=
