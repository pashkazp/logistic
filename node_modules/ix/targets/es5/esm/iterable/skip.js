import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
var SkipIterable = (function (_super) {
    tslib_1.__extends(SkipIterable, _super);
    function SkipIterable(source, count) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._count = count;
        return _this;
    }
    SkipIterable.prototype[Symbol.iterator] = function () {
        var it, count, next;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    it = this._source[Symbol.iterator](), count = this._count;
                    while (count > 0 && !(next = it.next()).done) {
                        count--;
                    }
                    if (!(count <= 0)) return [3 /*break*/, 3];
                    _a.label = 1;
                case 1:
                    if (!!(next = it.next()).done) return [3 /*break*/, 3];
                    return [4 /*yield*/, next.value];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 1];
                case 3: return [2 /*return*/];
            }
        });
    };
    return SkipIterable;
}(IterableX));
export function skip(source, count) {
    return new SkipIterable(source, count);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3NraXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFeEM7SUFBb0Msd0NBQWtCO0lBSXBELHNCQUFZLE1BQXlCLEVBQUUsS0FBYTtRQUFwRCxZQUNFLGlCQUFPLFNBR1I7UUFGQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixLQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQzs7SUFDdEIsQ0FBQztJQUVBLHVCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7O29CQUNNLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFPO29CQUNwRSxPQUFPLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQzt3QkFDN0MsS0FBSyxFQUFFLENBQUM7b0JBQ1YsQ0FBQzt5QkFDRyxDQUFBLEtBQUssSUFBSSxDQUFDLENBQUEsRUFBVix3QkFBVTs7O3lCQUNMLENBQUMsQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSTtvQkFDN0IscUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQTs7b0JBQWhCLFNBQWdCLENBQUM7Ozs7O0tBR3RCO0lBQ0gsbUJBQUM7QUFBRCxDQXJCQSxBQXFCQyxDQXJCbUMsU0FBUyxHQXFCNUM7QUFFRCxNQUFNLGVBQXdCLE1BQXlCLEVBQUUsS0FBYTtJQUNwRSxNQUFNLENBQUMsSUFBSSxZQUFZLENBQVUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ2xELENBQUMiLCJmaWxlIjoiaXRlcmFibGUvc2tpcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcblxuY2xhc3MgU2tpcEl0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfY291bnQ6IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LCBjb3VudDogbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fY291bnQgPSBjb3VudDtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBsZXQgaXQgPSB0aGlzLl9zb3VyY2VbU3ltYm9sLml0ZXJhdG9yXSgpLCBjb3VudCA9IHRoaXMuX2NvdW50LCBuZXh0O1xuICAgIHdoaWxlIChjb3VudCA+IDAgJiYgIShuZXh0ID0gaXQubmV4dCgpKS5kb25lKSB7XG4gICAgICBjb3VudC0tO1xuICAgIH1cbiAgICBpZiAoY291bnQgPD0gMCkge1xuICAgICAgd2hpbGUgKCEobmV4dCA9IGl0Lm5leHQoKSkuZG9uZSkge1xuICAgICAgICB5aWVsZCBuZXh0LnZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2tpcDxUU291cmNlPihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LCBjb3VudDogbnVtYmVyKTogSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBTa2lwSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBjb3VudCk7XG59XG4iXX0=
