import * as tslib_1 from "tslib";
import { IterableX } from '../iterable';
var TapIterable = (function (_super) {
    tslib_1.__extends(TapIterable, _super);
    function TapIterable(source, observer) {
        var _this = _super.call(this) || this;
        _this._source = source;
        _this._observer = observer;
        return _this;
    }
    TapIterable.prototype[Symbol.iterator] = function () {
        var it, next;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    it = this._source[Symbol.iterator]();
                    _a.label = 1;
                case 1:
                    if (!1) return [3 /*break*/, 3];
                    next = void 0;
                    try {
                        next = it.next();
                        if (next.done) {
                            return [3 /*break*/, 3];
                        }
                    }
                    catch (e) {
                        if (this._observer.error) {
                            this._observer.error(e);
                        }
                        throw e;
                    }
                    if (this._observer.next) {
                        this._observer.next(next.value);
                    }
                    return [4 /*yield*/, next.value];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 1];
                case 3:
                    if (this._observer.complete) {
                        this._observer.complete();
                    }
                    return [2 /*return*/];
            }
        });
    };
    return TapIterable;
}(IterableX));
/**
 * Lazily invokes observer methods for each value in the sequence, and upon successful or exceptional termination.
 * @param {Iterable<TSource>} source Source sequence.
 * @param {PartialObserver<TSource>} observer Observer to invoke notification calls on.<
 * @return {Ierable<TSource>} Sequence exhibiting the side-effects of observer method invocation upon iteration.
 */
export function tap(source, observer) {
    return new TapIterable(source, observer);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3RhcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUd4QztJQUFtQyx1Q0FBa0I7SUFJbkQscUJBQVksTUFBeUIsRUFBRSxRQUFrQztRQUF6RSxZQUNFLGlCQUFPLFNBR1I7UUFGQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixLQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQzs7SUFDNUIsQ0FBQztJQUVBLHNCQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBbEI7Ozs7O29CQUNRLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDOzs7eUJBQ3BDLENBQUM7b0JBQ0YsSUFBSSxTQUFBLENBQUM7b0JBQ1QsSUFBSSxDQUFDO3dCQUNILElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUM7d0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDOzRCQUFDLE1BQU0sa0JBQUE7d0JBQUMsQ0FBQztvQkFDM0IsQ0FBQztvQkFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNYLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzs0QkFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFBQyxDQUFDO3dCQUN0RCxNQUFNLENBQUMsQ0FBQztvQkFDVixDQUFDO29CQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQUMsQ0FBQztvQkFDN0QscUJBQU0sSUFBSSxDQUFDLEtBQUssRUFBQTs7b0JBQWhCLFNBQWdCLENBQUM7OztvQkFHbkIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3dCQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUM7b0JBQUMsQ0FBQzs7OztLQUM1RDtJQUNILGtCQUFDO0FBQUQsQ0E1QkEsQUE0QkMsQ0E1QmtDLFNBQVMsR0E0QjNDO0FBRUQ7Ozs7O0dBS0c7QUFDSCxNQUFNLGNBQXVCLE1BQXlCLEVBQUUsUUFBa0M7SUFDeEYsTUFBTSxDQUFDLElBQUksV0FBVyxDQUFVLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNwRCxDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL3RhcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmltcG9ydCB7IFBhcnRpYWxPYnNlcnZlciB9IGZyb20gJy4uL29ic2VydmVyJztcblxuY2xhc3MgVGFwSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9vYnNlcnZlcjogUGFydGlhbE9ic2VydmVyPFRTb3VyY2U+O1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sIG9ic2VydmVyOiBQYXJ0aWFsT2JzZXJ2ZXI8VFNvdXJjZT4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9vYnNlcnZlciA9IG9ic2VydmVyO1xuICB9XG5cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGNvbnN0IGl0ID0gdGhpcy5fc291cmNlW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgbGV0IG5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBuZXh0ID0gaXQubmV4dCgpO1xuICAgICAgICBpZiAobmV4dC5kb25lKSB7IGJyZWFrOyB9XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmICh0aGlzLl9vYnNlcnZlci5lcnJvcikgeyB0aGlzLl9vYnNlcnZlci5lcnJvcihlKTsgfVxuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fb2JzZXJ2ZXIubmV4dCkgeyB0aGlzLl9vYnNlcnZlci5uZXh0KG5leHQudmFsdWUpOyB9XG4gICAgICB5aWVsZCBuZXh0LnZhbHVlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9vYnNlcnZlci5jb21wbGV0ZSkgeyB0aGlzLl9vYnNlcnZlci5jb21wbGV0ZSgpOyB9XG4gIH1cbn1cblxuLyoqXG4gKiBMYXppbHkgaW52b2tlcyBvYnNlcnZlciBtZXRob2RzIGZvciBlYWNoIHZhbHVlIGluIHRoZSBzZXF1ZW5jZSwgYW5kIHVwb24gc3VjY2Vzc2Z1bCBvciBleGNlcHRpb25hbCB0ZXJtaW5hdGlvbi5cbiAqIEBwYXJhbSB7SXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZSBTb3VyY2Ugc2VxdWVuY2UuXG4gKiBAcGFyYW0ge1BhcnRpYWxPYnNlcnZlcjxUU291cmNlPn0gb2JzZXJ2ZXIgT2JzZXJ2ZXIgdG8gaW52b2tlIG5vdGlmaWNhdGlvbiBjYWxscyBvbi48XG4gKiBAcmV0dXJuIHtJZXJhYmxlPFRTb3VyY2U+fSBTZXF1ZW5jZSBleGhpYml0aW5nIHRoZSBzaWRlLWVmZmVjdHMgb2Ygb2JzZXJ2ZXIgbWV0aG9kIGludm9jYXRpb24gdXBvbiBpdGVyYXRpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0YXA8VFNvdXJjZT4oc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiwgb2JzZXJ2ZXI6IFBhcnRpYWxPYnNlcnZlcjxUU291cmNlPik6IEl0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgVGFwSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBvYnNlcnZlcik7XG59XG4iXX0=
