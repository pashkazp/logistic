goog.module('targets.es2015.cls.asynciterable.single'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/single.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {function(T): (boolean|!Promise<boolean>)=} selector
 * @return {!Promise<T>}
 */
function single(source, selector = () => true) {
    return __awaiter(this, void 0, void 0, function* () {
        let /** @type {T} */ result;
        let /** @type {boolean} */ hasResult = false;
        try {
            for (var source_1 = __asyncValues(source), source_1_1; source_1_1 = yield source_1.next(), !source_1_1.done;) {
                let /** @type {T} */ item = yield source_1_1.value;
                if (hasResult && (yield selector(item))) {
                    throw new Error('More than one element was found');
                }
                if (yield selector(item)) {
                    result = item;
                    hasResult = true;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (source_1_1 && !source_1_1.done && (_a = source_1.return)) yield _a.call(source_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return result;
        var e_1, _a;
    });
}
exports.single = single;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3NpbmdsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBR0g7Ozs7O0dBS0c7QUFYSCxnQkFhSSxNQVp3QixFQWF4QixXQVpvRCxNQUFNLElBQUs7O1FBYWpFLElBQUksZ0JBWkQsQ0FBQSxNQUFzQixDQUFDO1FBYTFCLElBQUksc0JBWkQsQ0FBQSxTQUFVLEdBQUUsS0FBTSxDQUFDOztZQWF0QixHQVpHLENBQUEsQ0FBbUIsSUFBQSxXQUFBLGNBQUEsTUFBTyxDQUFBLFlBQUE7Z0JBQWxCLElBQUEsZ0JBQUcsQ0FBQSxJQUFLLHlCQUFBLENBQUE7Z0JBYWpCLEVBQUUsQ0FBQyxDQVpDLFNBQVMsS0FBRyxNQUFNLFFBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFDLENBQUEsQ0FBRTtvQkFhdEMsTUFaSyxJQUFJLEtBQU0sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO2dCQWFyRCxDQVpDO2dCQWFELEVBQUUsQ0FBQyxDQVpDLE1BQUssUUFBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUEsQ0FBRTtvQkFhekIsTUFaTSxHQUFFLElBQUssQ0FBQztvQkFhZCxTQVpTLEdBQUUsSUFBSyxDQUFDO2dCQWFuQixDQVpDO2FBQ0Y7Ozs7Ozs7OztRQWNELE1BWk0sQ0FBQSxNQUFPLENBQUM7O0lBYWhCLENBWkM7Q0FBQTtBQWhCRCx3QkFnQkMiLCJmaWxlIjoic2luZ2xlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFQ+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVCk6IChib29sZWFufCFQcm9taXNlPGJvb2xlYW4+KT19IHNlbGVjdG9yXG4gKiBAcmV0dXJuIHshUHJvbWlzZTxUPn1cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpbmdsZTxUPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VD4sXG4gICAgc2VsZWN0b3I6ICh2YWx1ZTogVCkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4gPSAoKSA9PiB0cnVlKTogUHJvbWlzZTxUIHwgdW5kZWZpbmVkPiB7XG4gIGxldCAvKiogQHR5cGUge1R9ICovIHJlc3VsdDogVCB8IHVuZGVmaW5lZDtcbiAgbGV0IC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi8gaGFzUmVzdWx0ID0gZmFsc2U7XG4gIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VH0gKi8gaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBpZiAoaGFzUmVzdWx0ICYmIGF3YWl0IHNlbGVjdG9yKGl0ZW0pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01vcmUgdGhhbiBvbmUgZWxlbWVudCB3YXMgZm91bmQnKTtcbiAgICB9XG4gICAgaWYgKGF3YWl0IHNlbGVjdG9yKGl0ZW0pKSB7XG4gICAgICByZXN1bHQgPSBpdGVtO1xuICAgICAgaGFzUmVzdWx0ID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuIl19