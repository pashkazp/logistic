goog.module('targets.es2015.cls.asynciterable.create'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/create.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template T
 */
class AnonymousAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {function(): (!AsyncIterator<T>|!Promise<!AsyncIterator<T>>)} fn
     */
    constructor(fn) {
        super();
        this._fn = fn;
    }
    /**
     * @return {!AsyncIterableIterator<T>}
     */
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            let /** @type {!AsyncIterator<T>} */ it = yield __await(this._fn()), /** @type {!IteratorResult<T>} */ next;
            while (!(next = yield __await(it.next())).done) {
                yield next.value;
            }
        });
    }
}
function AnonymousAsyncIterable_tsickle_Closure_declarations() {
    /** @type {function(): (!AsyncIterator<T>|!Promise<!AsyncIterator<T>>)} */
    AnonymousAsyncIterable.prototype._fn;
}
/**
 * @template T
 * @param {function(): (!AsyncIterator<T>|!Promise<!AsyncIterator<T>>)} fn
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function create(fn) {
    return new AnonymousAsyncIterable(fn);
}
exports.create = create;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2NyZWF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsb0RBTHVCO0FBTXZCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ25HOztHQUVHO0FBUEgsNEJBQStCLFNBQVEsOEJBQWtCO0lBVXpEOztPQUVHO0lBVEQsWUFBWSxFQUFzRDtRQVdoRSxLQVZLLEVBQUUsQ0FBQztRQVdSLElBVkksQ0FBQyxHQUFHLEdBQUUsRUFBRyxDQUFDO0lBV2hCLENBQUM7SUFDSDs7T0FFRztJQVhNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFhM0IsSUFBSSxnQ0FaRCxDQUFBLEVBQUcsR0FBRSxjQUFNLElBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQSxFQUFBLGlDQUFDLENBQUEsSUFBb0MsQ0FBQztZQWEvRCxPQVpPLENBQUMsQ0FBQyxJQUFJLEdBQUUsY0FBTSxFQUFHLENBQUMsSUFBSSxFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUksRUFBQyxDQUFFO2dCQWF0QyxNQVpLLElBQUssQ0FBQyxLQUFLLENBQUM7WUFhbkIsQ0FaQztRQWFILENBWkM7S0FBQTtDQUNIO0FBY0E7SUFDQSwwRUFBMEU7SUFDMUUsc0JBQXNCLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztBQUNyQyxDQUFDO0FBRUQ7Ozs7R0FJRztBQXJCSCxnQkFBMEIsRUFBc0Q7SUF1QjlFLE1BdEJNLENBQUEsSUFBSSxzQkFBdUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQXVCeEMsQ0F0QkM7QUFGRCx3QkFFQyIsImZpbGUiOiJjcmVhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqL1xuY2xhc3MgQW5vbnltb3VzQXN5bmNJdGVyYWJsZTxUPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFQ+IHtcbnByaXZhdGUgX2ZuOiAoKSA9PiBBc3luY0l0ZXJhdG9yPFQ+IHwgUHJvbWlzZTxBc3luY0l0ZXJhdG9yPFQ+Pjtcbi8qKlxuICogQHBhcmFtIHtmdW5jdGlvbigpOiAoIUFzeW5jSXRlcmF0b3I8VD58IVByb21pc2U8IUFzeW5jSXRlcmF0b3I8VD4+KX0gZm5cbiAqL1xuY29uc3RydWN0b3IoZm46ICgpID0+IEFzeW5jSXRlcmF0b3I8VD4gfCBQcm9taXNlPEFzeW5jSXRlcmF0b3I8VD4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9mbiA9IGZuO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8VD59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGxldCAvKiogQHR5cGUgeyFBc3luY0l0ZXJhdG9yPFQ+fSAqLyBpdCA9IGF3YWl0IHRoaXMuX2ZuKCksIC8qKiBAdHlwZSB7IUl0ZXJhdG9yUmVzdWx0PFQ+fSAqLyBuZXh0OiBJdGVyYXRvclJlc3VsdDxUPiB8IHVuZGVmaW5lZDtcbiAgICB3aGlsZSAoIShuZXh0ID0gYXdhaXQgaXQubmV4dCgpKS5kb25lKSB7XG4gICAgICB5aWVsZCBuZXh0LnZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBBbm9ueW1vdXNBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUge2Z1bmN0aW9uKCk6ICghQXN5bmNJdGVyYXRvcjxUPnwhUHJvbWlzZTwhQXN5bmNJdGVyYXRvcjxUPj4pfSAqL1xuQW5vbnltb3VzQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX2ZuO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKCk6ICghQXN5bmNJdGVyYXRvcjxUPnwhUHJvbWlzZTwhQXN5bmNJdGVyYXRvcjxUPj4pfSBmblxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGU8VD4oZm46ICgpID0+IEFzeW5jSXRlcmF0b3I8VD4gfCBQcm9taXNlPEFzeW5jSXRlcmF0b3I8VD4+KTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IEFub255bW91c0FzeW5jSXRlcmFibGUoZm4pO1xufVxuIl19