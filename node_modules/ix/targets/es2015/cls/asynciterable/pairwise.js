goog.module('targets.es2015.cls.asynciterable.pairwise'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/pairwise.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
class PairwiseAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {!AsyncIterable<TSource>} source
     */
    constructor(source) {
        super();
        this._source = source;
    }
    /**
     * @return {!AsyncIterableIterator<!Array<TSource>>}
     */
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            let /** @type {TSource} */ value, /** @type {boolean} */ hasValue = false;
            try {
                for (var _a = __asyncValues(this._source), _b; _b = yield __await(_a.next()), !_b.done;) {
                    const /** @type {TSource} */ item = yield __await(_b.value);
                    if (!hasValue) {
                        hasValue = true;
                    }
                    else {
                        yield [/** @type {TSource} */ ((value)), item];
                    }
                    value = item;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield __await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
function PairwiseAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    PairwiseAsyncIterable.prototype._source;
}
/**
 * Returns a new sequence that triggers on the second and subsequent triggerings of the input sequence.
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<!Array<TSource>>}
 */
function pairwise(source) {
    return new PairwiseAsyncIterable(source);
}
exports.pairwise = pairwise;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3BhaXJ3aXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxvREFMdUI7QUFNdkIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDbkc7O0dBRUc7QUFQSCwyQkFBb0MsU0FBUSw4QkFBMEI7SUFVdEU7O09BRUc7SUFURCxZQUFZLE1BQThCO1FBV3hDLEtBVkssRUFBRSxDQUFDO1FBV1IsSUFWSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7SUFXeEIsQ0FBQztJQUNIOztPQUVHO0lBWE0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOztZQWEzQixJQUFJLHNCQVpELENBQUEsS0FBMkIsRUFBQSxzQkFBQyxDQUFBLFFBQVMsR0FBRSxLQUFNLENBQUM7O2dCQWFqRCxHQVpHLENBQUEsQ0FBcUIsSUFBQSxLQUFBLGNBQUEsSUFBSyxDQUFDLE9BQU8sQ0FBQSxJQUFBO29CQUExQixNQUFBLHNCQUFLLENBQUEsSUFBSywwQkFBQSxDQUFBO29CQWFuQixFQUFFLENBQUMsQ0FaQyxDQUFDLFFBQVEsQ0FBQyxDQUFBLENBQUU7d0JBYWQsUUFaUSxHQUFFLElBQUssQ0FBQztvQkFhbEIsQ0FaQztvQkFBQSxJQUFLLENBQUEsQ0FBRTt3QkFhTixNQVpLLENBQUEsc0JBQUEsQ0FBQSxDQUFBLENBQUUsS0FBQSxDQUFBLENBQU0sRUFBQyxJQUFLLENBQUMsQ0FBQztvQkFhdkIsQ0FaQztvQkFhRCxLQVpLLEdBQUUsSUFBSyxDQUFDO2lCQUNkOzs7Ozs7Ozs7O1FBYUgsQ0FaQztLQUFBO0NBQ0g7QUFjQTtJQUNBLHNDQUFzQztJQUN0QyxxQkFBcUIsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDO0FBQ3hDLENBQUM7QUFFRDs7Ozs7R0FLRztBQWpCSCxrQkFBa0MsTUFBOEI7SUFtQjlELE1BbEJNLENBQUEsSUFBSSxxQkFBc0IsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQW1CcEQsQ0FsQkM7QUFGRCw0QkFFQyIsImZpbGUiOiJwYWlyd2lzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZVxuICovXG5jbGFzcyBQYWlyd2lzZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlW10+IHtcbnByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbi8qKlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKi9cbmNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8IUFycmF5PFRTb3VyY2U+Pn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gdmFsdWU6IFRTb3VyY2UgfCB1bmRlZmluZWQsIC8qKiBAdHlwZSB7Ym9vbGVhbn0gKi8gaGFzVmFsdWUgPSBmYWxzZTtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGlmICghaGFzVmFsdWUpIHtcbiAgICAgICAgaGFzVmFsdWUgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeWllbGQgWyAvKiogQHR5cGUge1RTb3VyY2V9ICovKCh2YWx1ZSkpLCBpdGVtXTtcbiAgICAgIH1cbiAgICAgIHZhbHVlID0gaXRlbTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gUGFpcndpc2VBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuUGFpcndpc2VBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBuZXcgc2VxdWVuY2UgdGhhdCB0cmlnZ2VycyBvbiB0aGUgc2Vjb25kIGFuZCBzdWJzZXF1ZW50IHRyaWdnZXJpbmdzIG9mIHRoZSBpbnB1dCBzZXF1ZW5jZS5cbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPCFBcnJheTxUU291cmNlPj59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYWlyd2lzZTxUU291cmNlPihzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4pOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlW10+IHtcbiAgcmV0dXJuIG5ldyBQYWlyd2lzZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlKTtcbn1cbiJdfQ==