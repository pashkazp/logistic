goog.module('targets.es2015.cls.asynciterable.defaultifempty'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/defaultifempty.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
class DefaultIfEmptyAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {TSource} defaultValue
     */
    constructor(source, defaultValue) {
        super();
        this._source = source;
        this._defaultValue = defaultValue;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            let /** @type {number} */ state = 1;
            try {
                for (var _a = __asyncValues(this._source), _b; _b = yield __await(_a.next()), !_b.done;) {
                    let /** @type {TSource} */ item = yield __await(_b.value);
                    state = 2;
                    yield item;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield __await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            if (state === 1) {
                yield this._defaultValue;
            }
            var e_1, _c;
        });
    }
}
function DefaultIfEmptyAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    DefaultIfEmptyAsyncIterable.prototype._source;
    /** @type {TSource} */
    DefaultIfEmptyAsyncIterable.prototype._defaultValue;
}
/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {T} defaultValue
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function defaultIfEmpty(source, defaultValue) {
    return new DefaultIfEmptyAsyncIterable(source, defaultValue);
}
exports.defaultIfEmpty = defaultIfEmpty;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2RlZmF1bHRpZmVtcHR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxvREFMdUI7QUFNdkIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7QUFDbkc7O0dBRUc7QUFQSCxpQ0FBMEMsU0FBUSw4QkFBd0I7SUFXMUU7OztPQUdHO0lBVkQsWUFBWSxNQUE4QixFQUFDLFlBQXNCO1FBWS9ELEtBWEssRUFBRSxDQUFDO1FBWVIsSUFYSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7UUFZdEIsSUFYSSxDQUFDLGFBQWEsR0FBRSxZQUFhLENBQUM7SUFZcEMsQ0FBQztJQUNIOztPQUVHO0lBWk0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOztZQWMzQixJQUFJLHFCQWJELENBQUEsS0FBTSxHQUFFLENBQUUsQ0FBQzs7Z0JBY2QsR0FiRyxDQUFBLENBQW1CLElBQUEsS0FBQSxjQUFBLElBQUssQ0FBQyxPQUFPLENBQUEsSUFBQTtvQkFBeEIsSUFBQSxzQkFBRyxDQUFBLElBQUssMEJBQUEsQ0FBQTtvQkFjakIsS0FiSyxHQUFFLENBQUUsQ0FBQztvQkFjVixNQWJLLElBQUssQ0FBQztpQkFDWjs7Ozs7Ozs7O1lBY0QsRUFBRSxDQUFDLENBYkMsS0FBSyxLQUFJLENBQUUsQ0FBQyxDQUFBLENBQUU7Z0JBY2hCLE1BYkssSUFBSyxDQUFDLGFBQWEsQ0FBQztZQWMzQixDQWJDOztRQWNILENBYkM7S0FBQTtDQUNIO0FBZUE7SUFDQSxzQ0FBc0M7SUFDdEMsMkJBQTJCLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztJQUM5QyxzQkFBc0I7SUFDdEIsMkJBQTJCLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQztBQUNwRCxDQUFDO0FBRUQ7Ozs7O0dBS0c7QUF6Qkgsd0JBQWtDLE1BQXdCLEVBQUMsWUFBZ0I7SUEyQnpFLE1BMUJNLENBQUEsSUFBSSwyQkFBNEIsQ0FBSSxNQUFNLEVBQUMsWUFBYSxDQUFDLENBQUM7QUEyQmxFLENBMUJDO0FBRkQsd0NBRUMiLCJmaWxlIjoiZGVmYXVsdGlmZW1wdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgRGVmYXVsdElmRW1wdHlBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xucHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfZGVmYXVsdFZhbHVlOiBUU291cmNlO1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7VFNvdXJjZX0gZGVmYXVsdFZhbHVlXG4gKi9cbmNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgZGVmYXVsdFZhbHVlOiBUU291cmNlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fZGVmYXVsdFZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFBc3luY0l0ZXJhYmxlSXRlcmF0b3I8VFNvdXJjZT59XG4gKi9cbmFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gc3RhdGUgPSAxO1xuICAgIGZvciBhd2FpdCAobGV0IC8qKiBAdHlwZSB7VFNvdXJjZX0gKi8gaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIHN0YXRlID0gMjtcbiAgICAgIHlpZWxkIGl0ZW07XG4gICAgfVxuICAgIGlmIChzdGF0ZSA9PT0gMSkge1xuICAgICAgeWllbGQgdGhpcy5fZGVmYXVsdFZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBEZWZhdWx0SWZFbXB0eUFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovXG5EZWZhdWx0SWZFbXB0eUFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9zb3VyY2U7XG4vKiogQHR5cGUge1RTb3VyY2V9ICovXG5EZWZhdWx0SWZFbXB0eUFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9kZWZhdWx0VmFsdWU7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHtUfSBkZWZhdWx0VmFsdWVcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdElmRW1wdHk8VD4oc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LCBkZWZhdWx0VmFsdWU6IFQpOiBBc3luY0l0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBuZXcgRGVmYXVsdElmRW1wdHlBc3luY0l0ZXJhYmxlPFQ+KHNvdXJjZSwgZGVmYXVsdFZhbHVlKTtcbn1cbiJdfQ==