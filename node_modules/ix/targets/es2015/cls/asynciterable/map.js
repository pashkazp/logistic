goog.module('targets.es2015.cls.asynciterable.map'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/map.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var bindcallback_1 = goog.require('targets.es2015.cls.internal.bindcallback');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.bindcallback");
/**
 * @template TSource, TResult
 */
class MapAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {function(TSource, number): (TResult|!Promise<TResult>)} selector
     */
    constructor(source, selector) {
        super();
        this._source = source;
        this._selector = selector;
    }
    /**
     * @return {!AsyncIterableIterator<TResult>}
     */
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            let /** @type {number} */ i = 0;
            try {
                for (var /** @type {!AsyncIterable<TSource>} */ _a = __asyncValues(/** @type {!AsyncIterable<TSource>} */ ((this._source))), _b; _b = yield __await(_a.next()), !_b.done;) {
                    let /** @type {TSource} */ item = yield __await(_b.value);
                    let /** @type {TResult} */ result = yield __await(this._selector(item, i++));
                    yield result;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield __await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
function MapAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    MapAsyncIterable.prototype._source;
    /** @type {function(TSource, number): (TResult|!Promise<TResult>)} */
    MapAsyncIterable.prototype._selector;
}
/**
 * @template TSource, TResult
 * @param {!AsyncIterable<TSource>} source
 * @param {function(TSource, number): (TResult|!Promise<TResult>)} selector
 * @param {?=} thisArg
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TResult>}
 */
function map(source, selector, thisArg) {
    return new MapAsyncIterable(source, bindcallback_1.bindCallback(selector, thisArg, 2));
}
exports.map = map;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL21hcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsb0RBTHVCO0FBTXZCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU5oRDtBQU9sRCwyREFOcUI7QUFPckIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1EQUFtRCxDQUFDLENBQUM7QUFDM0c7O0dBRUc7QUFSSCxzQkFBd0MsU0FBUSw4QkFBd0I7SUFZeEU7OztPQUdHO0lBWEQsWUFhRSxNQVo4QixFQWE5QixRQVp1RTtRQWF2RSxLQVpLLEVBQUUsQ0FBQztRQWFSLElBWkksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDO1FBYXRCLElBWkksQ0FBQyxTQUFTLEdBQUUsUUFBUyxDQUFDO0lBYTVCLENBQUM7SUFDSDs7T0FFRztJQWJNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFlM0IsSUFBSSxxQkFkRCxDQUFBLENBQUUsR0FBRSxDQUFFLENBQUM7O2dCQWVWLEdBZEcsQ0FBQSxDQUFnQixJQUFBLHNDQUFBLENBQUEsS0FBQSxjQUFBLHNDQUFBLENBQUEsQ0FBNEIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFBLENBQUMsQ0FBQSxJQUFBO29CQUFsRCxJQUFBLHNCQUFHLENBQUEsSUFBSywwQkFBQSxDQUFBO29CQWVqQixJQUFJLHNCQWRELENBQUEsTUFBTyxHQUFFLGNBQU0sSUFBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUMsQ0FBRSxFQUFFLENBQUMsQ0FBQSxDQUFDO29CQWU3QyxNQWRLLE1BQU8sQ0FBQztpQkFDZDs7Ozs7Ozs7OztRQWVILENBZEM7S0FBQTtDQUNIO0FBZ0JBO0lBQ0Esc0NBQXNDO0lBQ3RDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7SUFDbkMscUVBQXFFO0lBQ3JFLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUM7QUFDckMsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQTNCSCxhQTZCSSxNQTVCOEIsRUE2QjlCLFFBNUJ1RSxFQTZCdkUsT0E1QmE7SUE2QmYsTUE1Qk0sQ0FBQSxJQUFJLGdCQUFpQixDQUFtQixNQUFNLEVBQUMsMkJBQWEsQ0FBQyxRQUFRLEVBQUMsT0FBUSxFQUFDLENBQUUsQ0FBQyxDQUFDLENBQUM7QUE2QjVGLENBNUJDO0FBTEQsa0JBS0MiLCJmaWxlIjoibWFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG5pbXBvcnQgeyBiaW5kQ2FsbGJhY2sgfSBmcm9tICcuLi9pbnRlcm5hbC9iaW5kY2FsbGJhY2snO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMiA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwuYmluZGNhbGxiYWNrXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFNvdXJjZSwgVFJlc3VsdFxuICovXG5jbGFzcyBNYXBBc3luY0l0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xucHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xucHJpdmF0ZSBfc2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gUHJvbWlzZTxUUmVzdWx0PiB8IFRSZXN1bHQ7XG4vKipcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlLCBudW1iZXIpOiAoVFJlc3VsdHwhUHJvbWlzZTxUUmVzdWx0Pil9IHNlbGVjdG9yXG4gKi9cbmNvbnN0cnVjdG9yKFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBzZWxlY3RvcjogKHZhbHVlOiBUU291cmNlLCBpbmRleDogbnVtYmVyKSA9PiBQcm9taXNlPFRSZXN1bHQ+IHwgVFJlc3VsdCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX3NlbGVjdG9yID0gc2VsZWN0b3I7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGVJdGVyYXRvcjxUUmVzdWx0Pn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBpID0gMDtcbiAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGl0ZW0gb2YgLyoqIEB0eXBlIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gKi8oKCA8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4odGhpcy5fc291cmNlKSkpKSB7XG4gICAgICBsZXQgLyoqIEB0eXBlIHtUUmVzdWx0fSAqLyByZXN1bHQgPSBhd2FpdCB0aGlzLl9zZWxlY3RvcihpdGVtLCBpKyspO1xuICAgICAgeWllbGQgcmVzdWx0O1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBNYXBBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuTWFwQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NvdXJjZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFNvdXJjZSwgbnVtYmVyKTogKFRSZXN1bHR8IVByb21pc2U8VFJlc3VsdD4pfSAqL1xuTWFwQXN5bmNJdGVyYWJsZS5wcm90b3R5cGUuX3NlbGVjdG9yO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlLCBUUmVzdWx0XG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFNvdXJjZSwgbnVtYmVyKTogKFRSZXN1bHR8IVByb21pc2U8VFJlc3VsdD4pfSBzZWxlY3RvclxuICogQHBhcmFtIHs/PX0gdGhpc0FyZ1xuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXA8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IFByb21pc2U8VFJlc3VsdD4gfCBUUmVzdWx0LFxuICAgIHRoaXNBcmc/OiBhbnkpOiBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgTWFwQXN5bmNJdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0Pihzb3VyY2UsIGJpbmRDYWxsYmFjayhzZWxlY3RvciwgdGhpc0FyZywgMikpO1xufVxuIl19