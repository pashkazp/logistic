goog.module('targets.es2015.cls.asynciterable.includes'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/includes.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var comparer_1 = goog.require('targets.es2015.cls.internal.comparer');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.comparer");
/**
 * @template T
 * @param {!AsyncIterable<T>} source
 * @param {T} searchElement
 * @param {number=} fromIndex
 * @return {!Promise<boolean>}
 */
function includes(source, searchElement, fromIndex = 0) {
    return __awaiter(this, void 0, void 0, function* () {
        let /** @type {number} */ i = 0;
        if (Math.abs(fromIndex)) {
            fromIndex = 0;
        }
        try {
            for (var source_1 = __asyncValues(source), source_1_1; source_1_1 = yield source_1.next(), !source_1_1.done;) {
                let /** @type {T} */ item = yield source_1_1.value;
                if (i++ > fromIndex && comparer_1.comparer(item, searchElement)) {
                    return true;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (source_1_1 && !source_1_1.done && (_a = source_1.return)) yield _a.call(source_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return false;
        var e_1, _a;
    });
}
exports.includes = includes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2luY2x1ZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCxtREFMaUI7QUFNakIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLCtDQUErQyxDQUFDLENBQUM7QUFDdkc7Ozs7OztHQU1HO0FBWEgsa0JBYUksTUFad0IsRUFheEIsYUFaZ0IsRUFhaEIsWUFabUIsQ0FBRTs7UUFhdkIsSUFBSSxxQkFaRCxDQUFBLENBQUUsR0FBRSxDQUFFLENBQUM7UUFhVixFQUFFLENBQUMsQ0FaQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUEsQ0FBRTtZQUFBLFNBQVUsR0FBRSxDQUFFLENBQUM7UUFBQSxDQUFFOztZQWEzQyxHQVpHLENBQUEsQ0FBbUIsSUFBQSxXQUFBLGNBQUEsTUFBTyxDQUFBLFlBQUE7Z0JBQWxCLElBQUEsZ0JBQUcsQ0FBQSxJQUFLLHlCQUFBLENBQUE7Z0JBYWpCLEVBQUUsQ0FBQyxDQVpDLENBQUMsRUFBRSxHQUFFLFNBQVUsSUFBRyxtQkFBUyxDQUFDLElBQUksRUFBQyxhQUFjLENBQUMsQ0FBQyxDQUFBLENBQUU7b0JBQUEsTUFBTyxDQUFBLElBQUssQ0FBQztnQkFBQSxDQUFFO2FBQ3ZFOzs7Ozs7Ozs7UUFhRCxNQVpNLENBQUEsS0FBTSxDQUFDOztJQWFmLENBWkM7Q0FBQTtBQVZELDRCQVVDIiwiZmlsZSI6ImluY2x1ZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgY29tcGFyZXIgfSBmcm9tICcuLi9pbnRlcm5hbC9jb21wYXJlcic7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pbnRlcm5hbC5jb21wYXJlclwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VD59IHNvdXJjZVxuICogQHBhcmFtIHtUfSBzZWFyY2hFbGVtZW50XG4gKiBAcGFyYW0ge251bWJlcj19IGZyb21JbmRleFxuICogQHJldHVybiB7IVByb21pc2U8Ym9vbGVhbj59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbmNsdWRlczxUPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VD4sXG4gICAgc2VhcmNoRWxlbWVudDogVCxcbiAgICBmcm9tSW5kZXg6IG51bWJlciA9IDApOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgbGV0IC8qKiBAdHlwZSB7bnVtYmVyfSAqLyBpID0gMDtcbiAgaWYgKE1hdGguYWJzKGZyb21JbmRleCkpIHsgZnJvbUluZGV4ID0gMDsgfVxuICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1R9ICovIGl0ZW0gb2Ygc291cmNlKSB7XG4gICAgaWYgKGkrKyA+IGZyb21JbmRleCAmJiBjb21wYXJlcihpdGVtLCBzZWFyY2hFbGVtZW50KSkgeyByZXR1cm4gdHJ1ZTsgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cbiJdfQ==