goog.module('targets.es2015.cls.asynciterable.startwith'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/startwith.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @template TSource
 */
class StartWithAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {!Array<TSource>} args
     */
    constructor(source, args) {
        super();
        this._source = source;
        this._args = args;
    }
    /**
     * @return {!AsyncIterableIterator<TSource>}
     */
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            for (let /** @type {TSource} */ x of this._args) {
                yield x;
            }
            try {
                for (var _a = __asyncValues(this._source), _b; _b = yield __await(_a.next()), !_b.done;) {
                    let /** @type {TSource} */ item = yield __await(_b.value);
                    yield item;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield __await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
function StartWithAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    StartWithAsyncIterable.prototype._source;
    /** @type {!Array<TSource>} */
    StartWithAsyncIterable.prototype._args;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @param {...TSource} args
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
function startWith(source, ...args) {
    return new StartWithAsyncIterable(source, args);
}
exports.startWith = startWith;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3N0YXJ0d2l0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsb0RBTHVCO0FBTXZCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ25HOztHQUVHO0FBUEgsNEJBQXFDLFNBQVEsOEJBQXdCO0lBV3JFOzs7T0FHRztJQVZELFlBQVksTUFBOEIsRUFBQyxJQUFnQjtRQVl6RCxLQVhLLEVBQUUsQ0FBQztRQVlSLElBWEksQ0FBQyxPQUFPLEdBQUUsTUFBTyxDQUFDO1FBWXRCLElBWEksQ0FBQyxLQUFLLEdBQUUsSUFBSyxDQUFDO0lBWXBCLENBQUM7SUFDSDs7T0FFRztJQVpNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFjM0IsR0FBRyxDQUFDLENBYkMsSUFBQSxzQkFBRyxDQUFBLENBQUUsSUFBRyxJQUFLLENBQUMsS0FBSyxDQUFDLENBQUEsQ0FBRTtnQkFBQSxNQUFNLENBQUUsQ0FBQztZQUFBLENBQUU7O2dCQWN0QyxHQWJHLENBQUEsQ0FBbUIsSUFBQSxLQUFBLGNBQUEsSUFBSyxDQUFDLE9BQU8sQ0FBQSxJQUFBO29CQUF4QixJQUFBLHNCQUFHLENBQUEsSUFBSywwQkFBQSxDQUFBO29CQUFtQixNQUFNLElBQUssQ0FBQztpQkFBRTs7Ozs7Ozs7OztRQWN0RCxDQWJDO0tBQUE7Q0FDSDtBQWVBO0lBQ0Esc0NBQXNDO0lBQ3RDLHNCQUFzQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7SUFDekMsOEJBQThCO0lBQzlCLHNCQUFzQixDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7QUFDdkMsQ0FBQztBQUVEOzs7OztHQUtHO0FBekJILG1CQTJCSSxNQTFCOEIsRUEyQjlCLEdBMUJHLElBQWU7SUEyQnBCLE1BMUJNLENBQUEsSUFBSSxzQkFBdUIsQ0FBVSxNQUFNLEVBQUMsSUFBSyxDQUFDLENBQUM7QUEyQjNELENBMUJDO0FBSkQsOEJBSUMiLCJmaWxlIjoic3RhcnR3aXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKi9cbmNsYXNzIFN0YXJ0V2l0aEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG5wcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG5wcml2YXRlIF9hcmdzOiBUU291cmNlW107XG4vKipcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHshQXJyYXk8VFNvdXJjZT59IGFyZ3NcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBhcmdzOiBUU291cmNlW10pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9hcmdzID0gYXJncztcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIHggb2YgdGhpcy5fYXJncykgeyB5aWVsZCB4OyB9XG4gICAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHRoaXMuX3NvdXJjZSkgeyB5aWVsZCBpdGVtOyB9XG4gIH1cbn1cblxuZnVuY3Rpb24gU3RhcnRXaXRoQXN5bmNJdGVyYWJsZV90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gKi9cblN0YXJ0V2l0aEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9zb3VyY2U7XG4vKiogQHR5cGUgeyFBcnJheTxUU291cmNlPn0gKi9cblN0YXJ0V2l0aEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9hcmdzO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7Li4uVFNvdXJjZX0gYXJnc1xuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdGFydFdpdGg8VFNvdXJjZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIC4uLmFyZ3M6IFRTb3VyY2VbXSk6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBTdGFydFdpdGhBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSwgYXJncyk7XG59XG4iXX0=