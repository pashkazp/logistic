goog.module('targets.es2015.cls.asynciterable.case'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/case.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var defer_1 = goog.require('targets.es2015.cls.asynciterable.defer');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.defer");
var empty_1 = goog.require('targets.es2015.cls.asynciterable.empty');
const tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.empty");
/**
 * @template TSource, TResult
 * @param {function(): (TSource|!Promise<TSource>)} selector
 * @param {!Map<TSource, !AsyncIterable<TResult>>} sources
 * @param {!AsyncIterable<TResult>=} defaultSource
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TResult>}
 */
function _case(selector, sources, defaultSource = empty_1.empty()) {
    return defer_1.defer(() => __awaiter(this, void 0, void 0, function* () {
        const /** @type {TSource} */ key = yield selector();
        return sources.has(key) ? ((sources.get(key))) : defaultSource;
    }));
}
exports._case = _case;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2Nhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUdILE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU5oRDtBQU9sRCxtQ0FOYztBQU9kLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxpREFBaUQsQ0FBQyxDQVB4RTtBQVFoQyxtQ0FQYztBQVFkLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0FBQ3pHOzs7Ozs7R0FNRztBQWJILGVBZUksUUFkMEMsRUFlMUMsT0FkNkMsRUFlN0MsZ0JBZHVDLGFBQU0sRUFBVztJQWUxRCxNQWRNLENBQUEsYUFBTSxDQUFVO1FBZXBCLE1BQU0sc0JBZEQsQ0FBQSxHQUFJLEdBQUUsTUFBTSxRQUFTLEVBQUUsQ0FBQztRQWU3QixNQWRNLENBQUEsT0FBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBQSxDQUFBLENBQUUsT0FBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUEsQ0FBQSxDQUFFLEdBQUUsYUFBYyxDQUFDO0lBZTlELENBZEMsQ0FBQSxDQUFDLENBQUM7QUFlTCxDQWRDO0FBUkQsc0JBUUMiLCJmaWxlIjoiY2FzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgZGVmZXIgfSBmcm9tICcuL2RlZmVyJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGUuZGVmZXJcIik7XG5pbXBvcnQgeyBlbXB0eSB9IGZyb20gJy4vZW1wdHknO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMyA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZS5lbXB0eVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oKTogKFRTb3VyY2V8IVByb21pc2U8VFNvdXJjZT4pfSBzZWxlY3RvclxuICogQHBhcmFtIHshTWFwPFRTb3VyY2UsICFBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+Pn0gc291cmNlc1xuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUUmVzdWx0Pj19IGRlZmF1bHRTb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gX2Nhc2U8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgc2VsZWN0b3I6ICgpID0+IFRTb3VyY2UgfCBQcm9taXNlPFRTb3VyY2U+LFxuICAgIHNvdXJjZXM6IE1hcDxUU291cmNlLCBBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+PixcbiAgICBkZWZhdWx0U291cmNlOiBBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+ID0gZW1wdHk8VFJlc3VsdD4oKSk6IEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIGRlZmVyPFRSZXN1bHQ+KGFzeW5jICgpID0+IHtcbiAgICBjb25zdCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGtleSA9IGF3YWl0IHNlbGVjdG9yKCk7XG4gICAgcmV0dXJuIHNvdXJjZXMuaGFzKGtleSkgPyAvKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+fSAqLygoIHNvdXJjZXMuZ2V0KGtleSkpKSA6IGRlZmF1bHRTb3VyY2U7XG4gIH0pO1xufVxuIl19