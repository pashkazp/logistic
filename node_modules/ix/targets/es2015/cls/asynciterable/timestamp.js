goog.module('targets.es2015.cls.asynciterable.timestamp'); exports = {}; var module = {id: 'targets/es2015/cls/asynciterable/timestamp.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
/**
 * @record
 * @template TSource
 */
function Timestamp() { }
exports.Timestamp = Timestamp;
function Timestamp_tsickle_Closure_declarations() {
    /** @type {number} */
    Timestamp.prototype.time;
    /** @type {TSource} */
    Timestamp.prototype.value;
}
/**
 * @template TSource
 */
class TimestampAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {!AsyncIterable<TSource>} source
     */
    constructor(source) {
        super();
        this._source = source;
    }
    /**
     * @return {!AsyncIterableIterator<?>}
     */
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            try {
                for (var _a = __asyncValues(this._source), _b; _b = yield __await(_a.next()), !_b.done;) {
                    const /** @type {TSource} */ item = yield __await(_b.value);
                    yield { time: Date.now(), value: item };
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield __await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
function TimestampAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    TimestampAsyncIterable.prototype._source;
}
/**
 * @template TSource
 * @param {!AsyncIterable<TSource>} source
 * @return {!tsickle_forward_declare_1.AsyncIterableX<!Timestamp<TSource>>}
 */
function timestamp(source) {
    return new TimestampAsyncIterable(source);
}
exports.timestamp = timestamp;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL3RpbWVzdGFtcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsb0RBTHVCO0FBTXZCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDO0FBQ25HOzs7R0FHRztBQUNILHVCQUE2QixDQUFDO0FBQTlCLDhCQUE4QjtBQUc5QjtJQUNBLHFCQUFxQjtJQUNyQixTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztJQUN6QixzQkFBc0I7SUFDdEIsU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7QUFDMUIsQ0FBQztBQU9EOztHQUVHO0FBckJILDRCQUFxQyxTQUFRLDhCQUFtQztJQXdCaEY7O09BRUc7SUF2QkQsWUFBWSxNQUE4QjtRQXlCeEMsS0F4QkssRUFBRSxDQUFDO1FBeUJSLElBeEJJLENBQUMsT0FBTyxHQUFFLE1BQU8sQ0FBQztJQXlCeEIsQ0FBQztJQUNIOztPQUVHO0lBekJNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7O2dCQTJCM0IsR0ExQkcsQ0FBQSxDQUFxQixJQUFBLEtBQUEsY0FBQSxJQUFLLENBQUMsT0FBTyxDQUFBLElBQUE7b0JBQTFCLE1BQUEsc0JBQUssQ0FBQSxJQUFLLDBCQUFBLENBQUE7b0JBMkJuQixNQTFCSyxFQUFFLElBQUssRUFBQyxJQUFLLENBQUMsR0FBRyxFQUFFLEVBQUMsS0FBTSxFQUFDLElBQUssRUFBRSxDQUFDO2lCQUN6Qzs7Ozs7Ozs7OztRQTJCSCxDQTFCQztLQUFBO0NBQ0g7QUE0QkE7SUFDQSxzQ0FBc0M7SUFDdEMsc0JBQXNCLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUN6QyxDQUFDO0FBRUQ7Ozs7R0FJRztBQW5DSCxtQkFxQ0ksTUFwQzhCO0lBcUNoQyxNQXBDTSxDQUFBLElBQUksc0JBQXVCLENBQVUsTUFBTSxDQUFDLENBQUM7QUFxQ3JELENBcENDO0FBSEQsOEJBR0MiLCJmaWxlIjoidGltZXN0YW1wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmFzeW5jaXRlcmFibGVcIik7XG4vKipcbiAqIEByZWNvcmRcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBUaW1lc3RhbXAoKSB7fVxuXG5cbmZ1bmN0aW9uIFRpbWVzdGFtcF90c2lja2xlX0Nsb3N1cmVfZGVjbGFyYXRpb25zKCkge1xuLyoqIEB0eXBlIHtudW1iZXJ9ICovXG5UaW1lc3RhbXAucHJvdG90eXBlLnRpbWU7XG4vKiogQHR5cGUge1RTb3VyY2V9ICovXG5UaW1lc3RhbXAucHJvdG90eXBlLnZhbHVlO1xufVxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgVGltZXN0YW1wPFRTb3VyY2U+IHtcbiAgdGltZTogbnVtYmVyO1xuICB2YWx1ZTogVFNvdXJjZTtcbn1cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgVGltZXN0YW1wQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRpbWVzdGFtcDxUU291cmNlPj4ge1xucHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuLyoqXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUFzeW5jSXRlcmFibGVJdGVyYXRvcjw/Pn1cbiAqL1xuYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgZm9yIGF3YWl0IChjb25zdCAvKiogQHR5cGUge1RTb3VyY2V9ICovIGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICB5aWVsZCB7IHRpbWU6IERhdGUubm93KCksIHZhbHVlOiBpdGVtIH07XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIFRpbWVzdGFtcEFzeW5jSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59ICovXG5UaW1lc3RhbXBBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPCFUaW1lc3RhbXA8VFNvdXJjZT4+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gdGltZXN0YW1wPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPik6IEFzeW5jSXRlcmFibGVYPFRpbWVzdGFtcDxUU291cmNlPj4ge1xuICByZXR1cm4gbmV3IFRpbWVzdGFtcEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlKTtcbn1cbiJdfQ==