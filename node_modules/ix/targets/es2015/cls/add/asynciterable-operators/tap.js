goog.module('targets.es2015.cls.add.asynciterable_operators.tap'); exports = {}; var module = {id: 'targets/es2015/cls/add/asynciterable-operators/tap.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var tap_1 = goog.require('targets.es2015.cls.asynciterable.tap');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.tap");
const tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.observer");
goog.require("_Users.ptaylor.dev.ixjs.src.observer"); // force type-only module to be loaded
/**
 * @ignore
 * @template T
 * @this {!tsickle_forward_declare_1.AsyncIterableX<T>}
 * @param {(!NextAsyncObserver<T>|!ErrorAsyncObserver<T>|!CompletionAsyncObserver<T>)} observer
 * @return {!tsickle_forward_declare_1.AsyncIterableX<T>}
 */
function tapProto(observer) {
    return tap_1.tap(this, observer);
}
exports.tapProto = tapProto;
asynciterable_1.AsyncIterableX.prototype.tap = tapProto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZGQvYXN5bmNpdGVyYWJsZS1vcGVyYXRvcnMvdGFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCx1REFMdUI7QUFNdkIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDJDQUEyQyxDQUFDLENBTjdDO0FBT3JELGlEQU5ZO0FBT1osTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLCtDQUErQyxDQUFDLENBUHhEO0FBUzlDLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQzlGLElBQUksQ0FBQyxPQUFPLENBQUMsc0NBQXNDLENBQUMsQ0FBQyxDQUFDLHNDQUFzQztBQUM1Rjs7Ozs7O0dBTUc7QUFYSCxrQkFjSSxRQVppQztJQWFuQyxNQVpNLENBQUEsU0FBSSxDQUFDLElBQUksRUFBQyxRQUFTLENBQUMsQ0FBQztBQWE3QixDQVpDO0FBSkQsNEJBSUM7QUFjRCw4QkFaYyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUUsUUFBUyxDQUFDIiwiZmlsZSI6InRhcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgdGFwIH0gZnJvbSAnLi4vLi4vYXN5bmNpdGVyYWJsZS90YXAnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMiA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZS50YXBcIik7XG5pbXBvcnQgeyBQYXJ0aWFsQXN5bmNPYnNlcnZlciB9IGZyb20gJy4uLy4uL29ic2VydmVyJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzMgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLm9ic2VydmVyXCIpO1xuZ29vZy5yZXF1aXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLm9ic2VydmVyXCIpOyAvLyBmb3JjZSB0eXBlLW9ubHkgbW9kdWxlIHRvIGJlIGxvYWRlZFxuLyoqXG4gKiBAaWdub3JlXG4gKiBAdGVtcGxhdGUgVFxuICogQHRoaXMgeyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFQ+fVxuICogQHBhcmFtIHsoIU5leHRBc3luY09ic2VydmVyPFQ+fCFFcnJvckFzeW5jT2JzZXJ2ZXI8VD58IUNvbXBsZXRpb25Bc3luY09ic2VydmVyPFQ+KX0gb2JzZXJ2ZXJcbiAqIEByZXR1cm4geyF0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xLkFzeW5jSXRlcmFibGVYPFQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gdGFwUHJvdG88VD4oXG4gICAgdGhpczogQXN5bmNJdGVyYWJsZVg8VD4sXG4gICAgb2JzZXJ2ZXI6IFBhcnRpYWxBc3luY09ic2VydmVyPFQ+KTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gdGFwKHRoaXMsIG9ic2VydmVyKTtcbn1cblxuQXN5bmNJdGVyYWJsZVgucHJvdG90eXBlLnRhcCA9IHRhcFByb3RvO1xuXG5kZWNsYXJlIG1vZHVsZSAnLi4vLi4vYXN5bmNpdGVyYWJsZScge1xuICBpbnRlcmZhY2UgQXN5bmNJdGVyYWJsZVg8VD4ge1xuICAgIHRhcDogdHlwZW9mIHRhcFByb3RvO1xuICB9XG59Il19