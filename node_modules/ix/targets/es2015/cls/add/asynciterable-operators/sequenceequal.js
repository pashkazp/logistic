goog.module('targets.es2015.cls.add.asynciterable_operators.sequenceequal'); exports = {}; var module = {id: 'targets/es2015/cls/add/asynciterable-operators/sequenceequal.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.es2015.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var sequenceequal_1 = goog.require('targets.es2015.cls.asynciterable.sequenceequal');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.sequenceequal");
var comparer_1 = goog.require('targets.es2015.cls.internal.comparer');
const tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.comparer");
/**
 * @ignore
 * @template T
 * @this {!tsickle_forward_declare_1.AsyncIterableX<T>}
 * @param {!AsyncIterable<T>} other
 * @param {function(T, T): (boolean|!Promise<boolean>)=} comparer
 * @return {!Promise<boolean>}
 */
function sequenceEqualProto(other, comparer = comparer_1.comparerAsync) {
    return sequenceequal_1.sequenceEqual(this, other, comparer);
}
exports.sequenceEqualProto = sequenceEqualProto;
asynciterable_1.AsyncIterableX.prototype.sequenceEqual = sequenceEqualProto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZGQvYXN5bmNpdGVyYWJsZS1vcGVyYXRvcnMvc2VxdWVuY2VlcXVhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsdURBTHVCO0FBTXZCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU43QztBQU9yRCxxRUFOc0I7QUFPdEIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHlEQUF5RCxDQUFDLENBUDlDO0FBUWxFLHNEQVBzQjtBQVF0QixNQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsK0NBQStDLENBQUMsQ0FBQztBQUN2Rzs7Ozs7OztHQU9HO0FBWEgsNEJBY0ksS0FadUIsRUFhdkIsV0FaK0Qsd0JBQWM7SUFhL0UsTUFaTSxDQUFBLDZCQUFjLENBQUMsSUFBSSxFQUFDLEtBQU0sRUFBQyxRQUFTLENBQUMsQ0FBQztBQWE5QyxDQVpDO0FBTEQsZ0RBS0M7QUFjRCw4QkFaYyxDQUFDLFNBQVMsQ0FBQyxhQUFhLEdBQUUsa0JBQW1CLENBQUMiLCJmaWxlIjoic2VxdWVuY2VlcXVhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgc2VxdWVuY2VFcXVhbCB9IGZyb20gJy4uLy4uL2FzeW5jaXRlcmFibGUvc2VxdWVuY2VlcXVhbCc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlLnNlcXVlbmNlZXF1YWxcIik7XG5pbXBvcnQgeyBjb21wYXJlckFzeW5jIH0gZnJvbSAnLi4vLi4vaW50ZXJuYWwvY29tcGFyZXInO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMyA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaW50ZXJuYWwuY29tcGFyZXJcIik7XG4vKipcbiAqIEBpZ25vcmVcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAdGhpcyB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuQXN5bmNJdGVyYWJsZVg8VD59XG4gKiBAcGFyYW0geyFBc3luY0l0ZXJhYmxlPFQ+fSBvdGhlclxuICogQHBhcmFtIHtmdW5jdGlvbihULCBUKTogKGJvb2xlYW58IVByb21pc2U8Ym9vbGVhbj4pPX0gY29tcGFyZXJcbiAqIEByZXR1cm4geyFQcm9taXNlPGJvb2xlYW4+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VxdWVuY2VFcXVhbFByb3RvPFQ+KFxuICAgIHRoaXM6IEFzeW5jSXRlcmFibGVYPFQ+LFxuICAgIG90aGVyOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgIGNvbXBhcmVyOiAoZmlyc3Q6IFQsIHNlY29uZDogVCkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4gPSBjb21wYXJlckFzeW5jKTogUHJvbWlzZTxib29sZWFuPiB7XG4gIHJldHVybiBzZXF1ZW5jZUVxdWFsKHRoaXMsIG90aGVyLCBjb21wYXJlcik7XG59XG5cbkFzeW5jSXRlcmFibGVYLnByb3RvdHlwZS5zZXF1ZW5jZUVxdWFsID0gc2VxdWVuY2VFcXVhbFByb3RvO1xuXG5kZWNsYXJlIG1vZHVsZSAnLi4vLi4vYXN5bmNpdGVyYWJsZScge1xuICBpbnRlcmZhY2UgQXN5bmNJdGVyYWJsZVg8VD4ge1xuICAgIHNlcXVlbmNlRXF1YWw6IHR5cGVvZiBzZXF1ZW5jZUVxdWFsUHJvdG87XG4gIH1cbn0iXX0=