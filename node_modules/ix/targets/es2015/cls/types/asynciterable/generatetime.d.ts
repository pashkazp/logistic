/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AsyncIterableX } from '../asynciterable';
/**
 * @template TState, TResult
 * @param {TState} initialState
 * @param {function(TState): (boolean|!Promise<boolean>)} condition
 * @param {function(TState): (TState|!Promise<TState>)} iterate
 * @param {function(TState): (TResult|!Promise<TResult>)} resultSelector
 * @param {function(TState): (number|!Promise<number>)} timeSelector
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TResult>}
 */
export declare function generateTime<TState, TResult>(initialState: TState, condition: (value: TState) => boolean | Promise<boolean>, iterate: (value: TState) => TState | Promise<TState>, resultSelector: (value: TState) => TResult | Promise<TResult>, timeSelector: (value: TState) => number | Promise<number>): AsyncIterableX<TResult>;
