goog.module('targets.es2015.cls.iterable.reverse'); exports = {}; var module = {id: 'targets/es2015/cls/iterable/reverse.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es2015.cls.iterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TSource
 */
class ReverseIterator extends iterable_1.IterableX {
    /**
     * @param {!Iterable<TSource>} source
     */
    constructor(source) {
        super();
        this._source = source;
    }
    /**
     * @return {!IterableIterator<TSource>}
     */
    *[Symbol.iterator]() {
        let /** @type {!Array<?>} */ results = [];
        for (let /** @type {TSource} */ item of this._source) {
            results.unshift(item);
        }
        yield* results;
    }
}
function ReverseIterator_tsickle_Closure_declarations() {
    /** @type {!Iterable<TSource>} */
    ReverseIterator.prototype._source;
}
/**
 * @template TSource
 * @param {!Iterable<TSource>} source
 * @return {!tsickle_forward_declare_1.IterableX<TSource>}
 */
function reverse(source) {
    return new ReverseIterator(source);
}
exports.reverse = reverse;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9yZXZlcnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRzs7QUFFSCwwQ0FMa0I7QUFNbEIsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7QUFDOUY7O0dBRUc7QUFQSCxxQkFBOEIsU0FBUSxvQkFBbUI7SUFVekQ7O09BRUc7SUFURCxZQUFZLE1BQXlCO1FBV25DLEtBVkssRUFBRSxDQUFDO1FBV1IsSUFWSSxDQUFDLE9BQU8sR0FBRSxNQUFPLENBQUM7SUFXeEIsQ0FBQztJQUNIOztPQUVHO0lBWEQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFhaEIsSUFBSSx3QkFaRCxDQUFBLE9BQVEsR0FBRSxFQUFHLENBQUM7UUFhakIsR0FBRyxDQUFDLENBWkMsSUFBQSxzQkFBRyxDQUFBLElBQUssSUFBRyxJQUFLLENBQUMsT0FBTyxDQUFDLENBQUEsQ0FBRTtZQWE5QixPQVpPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBYXhCLENBWkM7UUFhRCxPQVpNLE9BQVEsQ0FBQztJQWFqQixDQVpDO0NBQ0g7QUFjQTtJQUNBLGlDQUFpQztJQUNqQyxlQUFlLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztBQUNsQyxDQUFDO0FBRUQ7Ozs7R0FJRztBQXJCSCxpQkFBaUMsTUFBeUI7SUF1QnhELE1BdEJNLENBQUEsSUFBSSxlQUFnQixDQUFVLE1BQU0sQ0FBQyxDQUFDO0FBdUI5QyxDQXRCQztBQUZELDBCQUVDIiwiZmlsZSI6InJldmVyc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2VcbiAqL1xuY2xhc3MgUmV2ZXJzZUl0ZXJhdG9yPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbnByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT47XG4vKipcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqL1xuY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPFRTb3VyY2U+fVxuICovXG4qW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgbGV0IC8qKiBAdHlwZSB7IUFycmF5PD8+fSAqLyByZXN1bHRzID0gW107XG4gICAgZm9yIChsZXQgLyoqIEB0eXBlIHtUU291cmNlfSAqLyBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgcmVzdWx0cy51bnNoaWZ0KGl0ZW0pO1xuICAgIH1cbiAgICB5aWVsZCogcmVzdWx0cztcbiAgfVxufVxuXG5mdW5jdGlvbiBSZXZlcnNlSXRlcmF0b3JfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuUmV2ZXJzZUl0ZXJhdG9yLnByb3RvdHlwZS5fc291cmNlO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU291cmNlXG4gKiBAcGFyYW0geyFJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5JdGVyYWJsZVg8VFNvdXJjZT59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXZlcnNlPFRTb3VyY2U+KHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4pOiBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFJldmVyc2VJdGVyYXRvcjxUU291cmNlPihzb3VyY2UpO1xufVxuIl19