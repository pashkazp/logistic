goog.module('targets.es2015.cls.iterable.generate'); exports = {}; var module = {id: 'targets/es2015/cls/iterable/generate.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.es2015.cls.iterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
/**
 * @template TState, TResult
 */
class GenerateIterable extends iterable_1.IterableX {
    /**
     * @param {TState} initialState
     * @param {function(TState): boolean} condition
     * @param {function(TState): TState} iterate
     * @param {function(TState): TResult} resultSelector
     */
    constructor(initialState, condition, iterate, resultSelector) {
        super();
        this._initialState = initialState;
        this._condition = condition;
        this._iterate = iterate;
        this._resultSelector = resultSelector;
    }
    /**
     * @return {!IterableIterator<TResult>}
     */
    *[Symbol.iterator]() {
        for (let /** @type {TState} */ i = this._initialState; this._condition(i); i = this._iterate(i)) {
            yield this._resultSelector(i);
        }
    }
}
function GenerateIterable_tsickle_Closure_declarations() {
    /** @type {TState} */
    GenerateIterable.prototype._initialState;
    /** @type {function(TState): boolean} */
    GenerateIterable.prototype._condition;
    /** @type {function(TState): TState} */
    GenerateIterable.prototype._iterate;
    /** @type {function(TState): TResult} */
    GenerateIterable.prototype._resultSelector;
}
/**
 * @template TState, TResult
 * @param {TState} initialState
 * @param {function(TState): boolean} condition
 * @param {function(TState): TState} iterate
 * @param {function(TState): TResult} resultSelector
 * @return {!tsickle_forward_declare_1.IterableX<TResult>}
 */
function generate(initialState, condition, iterate, resultSelector) {
    return new GenerateIterable(initialState, condition, iterate, resultSelector);
}
exports.generate = generate;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9nZW5lcmF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsMENBTGtCO0FBTWxCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBQzlGOztHQUVHO0FBUEgsc0JBQXVDLFNBQVEsb0JBQW1CO0lBYWxFOzs7OztPQUtHO0lBWkQsWUFjSSxZQWJvQixFQWNwQixTQWJxQyxFQWNyQyxPQWJrQyxFQWNsQyxjQWIwQztRQWM1QyxLQWJLLEVBQUUsQ0FBQztRQWNSLElBYkksQ0FBQyxhQUFhLEdBQUUsWUFBYSxDQUFDO1FBY2xDLElBYkksQ0FBQyxVQUFVLEdBQUUsU0FBVSxDQUFDO1FBYzVCLElBYkksQ0FBQyxRQUFRLEdBQUUsT0FBUSxDQUFDO1FBY3hCLElBYkksQ0FBQyxlQUFlLEdBQUUsY0FBZSxDQUFDO0lBY3hDLENBQUM7SUFDSDs7T0FFRztJQWRELENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBZ0JoQixHQUFHLENBQUMsQ0FmQyxJQUFBLHFCQUFHLENBQUEsQ0FBRSxHQUFFLElBQUssQ0FBQyxhQUFhLEVBQUMsSUFBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFFLEdBQUUsSUFBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFFO1lBZ0IxRSxNQWZLLElBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFnQmhDLENBZkM7SUFnQkgsQ0FmQztDQUNIO0FBaUJBO0lBQ0EscUJBQXFCO0lBQ3JCLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7SUFDekMsd0NBQXdDO0lBQ3hDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUM7SUFDdEMsdUNBQXVDO0lBQ3ZDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUM7SUFDcEMsd0NBQXdDO0lBQ3hDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUM7QUFDM0MsQ0FBQztBQUVEOzs7Ozs7O0dBT0c7QUFqQ0gsa0JBbUNJLFlBbENvQixFQW1DcEIsU0FsQ3FDLEVBbUNyQyxPQWxDa0MsRUFtQ2xDLGNBbEMwQztJQW1DNUMsTUFsQ00sQ0FBQSxJQUFJLGdCQUFpQixDQUFrQixZQUFZLEVBQUMsU0FBVSxFQUFDLE9BQVEsRUFBQyxjQUFlLENBQUMsQ0FBQztBQW1DakcsQ0FsQ0M7QUFORCw0QkFNQyIsImZpbGUiOiJnZW5lcmF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLml0ZXJhYmxlXCIpO1xuLyoqXG4gKiBAdGVtcGxhdGUgVFN0YXRlLCBUUmVzdWx0XG4gKi9cbmNsYXNzIEdlbmVyYXRlSXRlcmFibGU8VFN0YXRlLCBUUmVzdWx0PiBleHRlbmRzIEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG5wcml2YXRlIF9pbml0aWFsU3RhdGU6IFRTdGF0ZTtcbnByaXZhdGUgX2NvbmRpdGlvbjogKHZhbHVlOiBUU3RhdGUpID0+IGJvb2xlYW47XG5wcml2YXRlIF9pdGVyYXRlOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFN0YXRlO1xucHJpdmF0ZSBfcmVzdWx0U2VsZWN0b3I6ICh2YWx1ZTogVFN0YXRlKSA9PiBUUmVzdWx0O1xuLyoqXG4gKiBAcGFyYW0ge1RTdGF0ZX0gaW5pdGlhbFN0YXRlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTdGF0ZSk6IGJvb2xlYW59IGNvbmRpdGlvblxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiBUU3RhdGV9IGl0ZXJhdGVcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogVFJlc3VsdH0gcmVzdWx0U2VsZWN0b3JcbiAqL1xuY29uc3RydWN0b3IoXG4gICAgICBpbml0aWFsU3RhdGU6IFRTdGF0ZSxcbiAgICAgIGNvbmRpdGlvbjogKHZhbHVlOiBUU3RhdGUpID0+IGJvb2xlYW4sXG4gICAgICBpdGVyYXRlOiAodmFsdWU6IFRTdGF0ZSkgPT4gVFN0YXRlLFxuICAgICAgcmVzdWx0U2VsZWN0b3I6ICh2YWx1ZTogVFN0YXRlKSA9PiBUUmVzdWx0KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9pbml0aWFsU3RhdGUgPSBpbml0aWFsU3RhdGU7XG4gICAgdGhpcy5fY29uZGl0aW9uID0gY29uZGl0aW9uO1xuICAgIHRoaXMuX2l0ZXJhdGUgPSBpdGVyYXRlO1xuICAgIHRoaXMuX3Jlc3VsdFNlbGVjdG9yID0gcmVzdWx0U2VsZWN0b3I7XG4gIH1cbi8qKlxuICogQHJldHVybiB7IUl0ZXJhYmxlSXRlcmF0b3I8VFJlc3VsdD59XG4gKi9cbipbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCAvKiogQHR5cGUge1RTdGF0ZX0gKi8gaSA9IHRoaXMuX2luaXRpYWxTdGF0ZTsgdGhpcy5fY29uZGl0aW9uKGkpOyBpID0gdGhpcy5faXRlcmF0ZShpKSkge1xuICAgICAgeWllbGQgdGhpcy5fcmVzdWx0U2VsZWN0b3IoaSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIEdlbmVyYXRlSXRlcmFibGVfdHNpY2tsZV9DbG9zdXJlX2RlY2xhcmF0aW9ucygpIHtcbi8qKiBAdHlwZSB7VFN0YXRlfSAqL1xuR2VuZXJhdGVJdGVyYWJsZS5wcm90b3R5cGUuX2luaXRpYWxTdGF0ZTtcbi8qKiBAdHlwZSB7ZnVuY3Rpb24oVFN0YXRlKTogYm9vbGVhbn0gKi9cbkdlbmVyYXRlSXRlcmFibGUucHJvdG90eXBlLl9jb25kaXRpb247XG4vKiogQHR5cGUge2Z1bmN0aW9uKFRTdGF0ZSk6IFRTdGF0ZX0gKi9cbkdlbmVyYXRlSXRlcmFibGUucHJvdG90eXBlLl9pdGVyYXRlO1xuLyoqIEB0eXBlIHtmdW5jdGlvbihUU3RhdGUpOiBUUmVzdWx0fSAqL1xuR2VuZXJhdGVJdGVyYWJsZS5wcm90b3R5cGUuX3Jlc3VsdFNlbGVjdG9yO1xufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUU3RhdGUsIFRSZXN1bHRcbiAqIEBwYXJhbSB7VFN0YXRlfSBpbml0aWFsU3RhdGVcbiAqIEBwYXJhbSB7ZnVuY3Rpb24oVFN0YXRlKTogYm9vbGVhbn0gY29uZGl0aW9uXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTdGF0ZSk6IFRTdGF0ZX0gaXRlcmF0ZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU3RhdGUpOiBUUmVzdWx0fSByZXN1bHRTZWxlY3RvclxuICogQHJldHVybiB7IXRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzEuSXRlcmFibGVYPFRSZXN1bHQ+fVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGU8VFN0YXRlLCBUUmVzdWx0PihcbiAgICBpbml0aWFsU3RhdGU6IFRTdGF0ZSxcbiAgICBjb25kaXRpb246ICh2YWx1ZTogVFN0YXRlKSA9PiBib29sZWFuLFxuICAgIGl0ZXJhdGU6ICh2YWx1ZTogVFN0YXRlKSA9PiBUU3RhdGUsXG4gICAgcmVzdWx0U2VsZWN0b3I6ICh2YWx1ZTogVFN0YXRlKSA9PiBUUmVzdWx0KTogSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBHZW5lcmF0ZUl0ZXJhYmxlPFRTdGF0ZSwgVFJlc3VsdD4oaW5pdGlhbFN0YXRlLCBjb25kaXRpb24sIGl0ZXJhdGUsIHJlc3VsdFNlbGVjdG9yKTtcbn1cbiJdfQ==