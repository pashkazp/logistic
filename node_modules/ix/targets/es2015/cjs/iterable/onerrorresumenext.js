Object.defineProperty(exports, "__esModule", { value: true });
const iterable_1 = require("../iterable");
class OnErrorResumeNextIterable extends iterable_1.IterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    *[Symbol.iterator]() {
        for (let item of this._source) {
            let it = item[Symbol.iterator]();
            while (1) {
                let next;
                try {
                    next = it.next();
                }
                catch (e) {
                    break;
                }
                if (next.done) {
                    break;
                }
                yield next.value;
            }
        }
    }
}
function onErrorResumeNext(source, ...args) {
    return new OnErrorResumeNextIterable([source, ...args]);
}
exports.onErrorResumeNext = onErrorResumeNext;
function onErrorResumeNextStatic(...source) {
    return new OnErrorResumeNextIterable(source);
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL29uZXJyb3JyZXN1bWVuZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwwQ0FBd0M7QUFFeEMsK0JBQXlDLFNBQVEsb0JBQWtCO0lBR2pFLFlBQVksTUFBbUM7UUFDN0MsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDO0lBRUQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDaEIsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDOUIsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO1lBQ2pDLE9BQU8sQ0FBQyxFQUFFLENBQUM7Z0JBQ1QsSUFBSSxJQUFJLENBQUM7Z0JBQ1QsSUFBSSxDQUFDO29CQUNILElBQUksR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ25CLENBQUM7Z0JBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDWCxLQUFLLENBQUM7Z0JBQ1IsQ0FBQztnQkFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztvQkFBQyxLQUFLLENBQUM7Z0JBQUMsQ0FBQztnQkFDekIsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ25CLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQsMkJBQXFDLE1BQW1CLEVBQUUsR0FBRyxJQUFtQjtJQUM5RSxNQUFNLENBQUMsSUFBSSx5QkFBeUIsQ0FBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDN0QsQ0FBQztBQUZELDhDQUVDO0FBRUQsaUNBQTJDLEdBQUcsTUFBcUI7SUFDakUsTUFBTSxDQUFDLElBQUkseUJBQXlCLENBQUksTUFBTSxDQUFDLENBQUM7QUFDbEQsQ0FBQztBQUZELDBEQUVDIiwiZmlsZSI6Iml0ZXJhYmxlL29uZXJyb3JyZXN1bWVuZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuXG5jbGFzcyBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxJdGVyYWJsZTxUU291cmNlPj47XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxJdGVyYWJsZTxUU291cmNlPj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgbGV0IGl0ID0gaXRlbVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBsZXQgbmV4dDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBuZXh0ID0gaXQubmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobmV4dC5kb25lKSB7IGJyZWFrOyB9XG4gICAgICAgIHlpZWxkIG5leHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkVycm9yUmVzdW1lTmV4dDxUPihzb3VyY2U6IEl0ZXJhYmxlPFQ+LCAuLi5hcmdzOiBJdGVyYWJsZTxUPltdKTogSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBPbkVycm9yUmVzdW1lTmV4dEl0ZXJhYmxlPFQ+KFtzb3VyY2UsIC4uLmFyZ3NdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uRXJyb3JSZXN1bWVOZXh0U3RhdGljPFQ+KC4uLnNvdXJjZTogSXRlcmFibGU8VD5bXSk6IEl0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBuZXcgT25FcnJvclJlc3VtZU5leHRJdGVyYWJsZTxUPihzb3VyY2UpO1xufVxuIl19
