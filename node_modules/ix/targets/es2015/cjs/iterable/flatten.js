Object.defineProperty(exports, "__esModule", { value: true });
const iterable_1 = require("../iterable");
const isiterable_1 = require("../internal/isiterable");
class FlattenIterable extends iterable_1.IterableX {
    constructor(source, depth) {
        super();
        this._source = source;
        this._depth = depth;
    }
    *_flatten(source, depth) {
        if (depth === 0) {
            for (let item of source) {
                yield item;
            }
            return;
        }
        for (let item of source) {
            if (isiterable_1.isIterable(item)) {
                for (let innerItem of this._flatten(item, depth - 1)) {
                    yield innerItem;
                }
            }
            else {
                yield item;
            }
        }
    }
    [Symbol.iterator]() {
        return this._flatten(this._source, this._depth)[Symbol.iterator]();
    }
}
/**
 * Flattens the source sequence until the specified depth.
 * @param {Iterable<T>} source Source sequence.
 * @param {Number} depth The depth to flatten the source sequence.
 * @returns {Iterable<T>} The flattened sequence, flattened to the specified depth.
 */
function flatten(source, depth = Infinity) {
    return new FlattenIterable(source, depth);
}
exports.flatten = flatten;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2ZsYXR0ZW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDBDQUF3QztBQUN4Qyx1REFBb0Q7QUFFcEQscUJBQStCLFNBQVEsb0JBQWtCO0lBSXZELFlBQVksTUFBeUIsRUFBRSxLQUFhO1FBQ2xELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUVELENBQVMsUUFBUSxDQUFDLE1BQXlCLEVBQUUsS0FBYTtRQUN4RCxFQUFFLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQixHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUMsQ0FBQztZQUN4QyxNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN4QixFQUFFLENBQUMsQ0FBQyx1QkFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDckIsR0FBRyxDQUFDLENBQUMsSUFBSSxTQUFTLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFBQyxNQUFNLFNBQVMsQ0FBQztnQkFBQyxDQUFDO1lBQzVFLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixNQUFNLElBQUksQ0FBQztZQUNiLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztJQUVELENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3JFLENBQUM7Q0FDRjtBQUVEOzs7OztHQUtHO0FBQ0gsaUJBQTJCLE1BQW1CLEVBQUUsUUFBZ0IsUUFBUTtJQUN0RSxNQUFNLENBQUMsSUFBSSxlQUFlLENBQUksTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFGRCwwQkFFQyIsImZpbGUiOiJpdGVyYWJsZS9mbGF0dGVuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuaW1wb3J0IHsgaXNJdGVyYWJsZSB9IGZyb20gJy4uL2ludGVybmFsL2lzaXRlcmFibGUnO1xuXG5jbGFzcyBGbGF0dGVuSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9kZXB0aDogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sIGRlcHRoOiBudW1iZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9kZXB0aCA9IGRlcHRoO1xuICB9XG5cbiAgcHJpdmF0ZSAqX2ZsYXR0ZW4oc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiwgZGVwdGg6IG51bWJlcik6IEl0ZXJhYmxlPFRTb3VyY2U+IHtcbiAgICBpZiAoZGVwdGggPT09IDApIHtcbiAgICAgIGZvciAobGV0IGl0ZW0gb2Ygc291cmNlKSB7IHlpZWxkIGl0ZW07IH1cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChsZXQgaXRlbSBvZiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc0l0ZXJhYmxlKGl0ZW0pKSB7XG4gICAgICAgIGZvciAobGV0IGlubmVySXRlbSBvZiB0aGlzLl9mbGF0dGVuKGl0ZW0sIGRlcHRoIC0gMSkpIHsgeWllbGQgaW5uZXJJdGVtOyB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIHJldHVybiB0aGlzLl9mbGF0dGVuKHRoaXMuX3NvdXJjZSwgdGhpcy5fZGVwdGgpW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgfVxufVxuXG4vKipcbiAqIEZsYXR0ZW5zIHRoZSBzb3VyY2Ugc2VxdWVuY2UgdW50aWwgdGhlIHNwZWNpZmllZCBkZXB0aC5cbiAqIEBwYXJhbSB7SXRlcmFibGU8VD59IHNvdXJjZSBTb3VyY2Ugc2VxdWVuY2UuXG4gKiBAcGFyYW0ge051bWJlcn0gZGVwdGggVGhlIGRlcHRoIHRvIGZsYXR0ZW4gdGhlIHNvdXJjZSBzZXF1ZW5jZS5cbiAqIEByZXR1cm5zIHtJdGVyYWJsZTxUPn0gVGhlIGZsYXR0ZW5lZCBzZXF1ZW5jZSwgZmxhdHRlbmVkIHRvIHRoZSBzcGVjaWZpZWQgZGVwdGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuPFQ+KHNvdXJjZTogSXRlcmFibGU8VD4sIGRlcHRoOiBudW1iZXIgPSBJbmZpbml0eSk6IEl0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBuZXcgRmxhdHRlbkl0ZXJhYmxlPFQ+KHNvdXJjZSwgZGVwdGgpO1xufVxuIl19
