Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const asynciterable_1 = require("../asynciterable");
class TakeLastAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(source, count) {
        super();
        this._source = source;
        this._count = count;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            if (this._count === 0) {
                return;
            }
            let q = [];
            try {
                for (var _a = tslib_1.__asyncValues(this._source), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                    let item = yield tslib_1.__await(_b.value);
                    if (q.length >= this._count) {
                        q.shift();
                    }
                    q.push(item);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield tslib_1.__await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            while (q.length > 0) {
                yield q.shift();
            }
            var e_1, _c;
        });
    }
}
function takeLast(source, count) {
    return new TakeLastAsyncIterable(source, count);
}
exports.takeLast = takeLast;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdGFrZWxhc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxvREFBa0Q7QUFFbEQsMkJBQXFDLFNBQVEsOEJBQXVCO0lBSWxFLFlBQVksTUFBOEIsRUFBRSxLQUFhO1FBQ3ZELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUVNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFDM0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUFDLENBQUM7WUFFbEMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDOztnQkFDWCxHQUFHLENBQUMsQ0FBbUIsSUFBQSxLQUFBLHNCQUFBLElBQUksQ0FBQyxPQUFPLENBQUEsSUFBQTtvQkFBeEIsSUFBSSxJQUFJLGtDQUFBLENBQUE7b0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7d0JBQzVCLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQkFDWixDQUFDO29CQUNELENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7aUJBQ2Q7Ozs7Ozs7OztZQUVELE9BQU8sQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztnQkFDcEIsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFHLENBQUM7WUFDbkIsQ0FBQzs7UUFDSCxDQUFDO0tBQUE7Q0FDRjtBQUVELGtCQUFrQyxNQUE4QixFQUFFLEtBQWE7SUFDN0UsTUFBTSxDQUFDLElBQUkscUJBQXFCLENBQVUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQzNELENBQUM7QUFGRCw0QkFFQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL3Rha2VsYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcblxuY2xhc3MgVGFrZUxhc3RBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2NvdW50OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBjb3VudDogbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fY291bnQgPSBjb3VudDtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGlmICh0aGlzLl9jb3VudCA9PT0gMCkgeyByZXR1cm47IH1cblxuICAgIGxldCBxID0gW107XG4gICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGlmIChxLmxlbmd0aCA+PSB0aGlzLl9jb3VudCkge1xuICAgICAgICBxLnNoaWZ0KCk7XG4gICAgICB9XG4gICAgICBxLnB1c2goaXRlbSk7XG4gICAgfVxuXG4gICAgd2hpbGUgKHEubGVuZ3RoID4gMCkge1xuICAgICAgeWllbGQgcS5zaGlmdCgpITtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRha2VMYXN0PFRTb3VyY2U+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgY291bnQ6IG51bWJlcik6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBUYWtlTGFzdEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBjb3VudCk7XG59XG4iXX0=
