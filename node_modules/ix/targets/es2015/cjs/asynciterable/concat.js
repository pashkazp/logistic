Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const asynciterable_1 = require("../asynciterable");
class ConcatAllAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            try {
                for (var _a = tslib_1.__asyncValues(this._source), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                    let outer = yield tslib_1.__await(_b.value);
                    try {
                        for (var outer_1 = tslib_1.__asyncValues(outer), outer_1_1; outer_1_1 = yield tslib_1.__await(outer_1.next()), !outer_1_1.done;) {
                            let item = yield tslib_1.__await(outer_1_1.value);
                            yield item;
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (outer_1_1 && !outer_1_1.done && (_c = outer_1.return)) yield tslib_1.__await(_c.call(outer_1));
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_d = _a.return)) yield tslib_1.__await(_d.call(_a));
                }
                finally { if (e_2) throw e_2.error; }
            }
            var e_2, _d, e_1, _c;
        });
    }
}
class ConcatAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            for (let outer of this._source) {
                try {
                    for (var outer_2 = tslib_1.__asyncValues(outer), outer_2_1; outer_2_1 = yield tslib_1.__await(outer_2.next()), !outer_2_1.done;) {
                        let item = yield tslib_1.__await(outer_2_1.value);
                        yield item;
                    }
                }
                catch (e_3_1) { e_3 = { error: e_3_1 }; }
                finally {
                    try {
                        if (outer_2_1 && !outer_2_1.done && (_a = outer_2.return)) yield tslib_1.__await(_a.call(outer_2));
                    }
                    finally { if (e_3) throw e_3.error; }
                }
            }
            var e_3, _a;
        });
    }
}
function concatAll(source) {
    return new ConcatAllAsyncIterable(source);
}
exports.concatAll = concatAll;
function _concatAll(source) {
    return new ConcatAsyncIterable(source);
}
exports._concatAll = _concatAll;
function concat(source, ...args) {
    return new ConcatAsyncIterable([source, ...args]);
}
exports.concat = concat;
function concatStatic(...args) {
    return new ConcatAsyncIterable(args);
}
exports.concatStatic = concatStatic;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvY29uY2F0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBQWtEO0FBRWxELDRCQUFzQyxTQUFRLDhCQUF1QjtJQUduRSxZQUFZLE1BQTZDO1FBQ3ZELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFDeEIsQ0FBQztJQUVNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7O2dCQUMzQixHQUFHLENBQUMsQ0FBb0IsSUFBQSxLQUFBLHNCQUFBLElBQUksQ0FBQyxPQUFPLENBQUEsSUFBQTtvQkFBekIsSUFBSSxLQUFLLGtDQUFBLENBQUE7O3dCQUNsQixHQUFHLENBQUMsQ0FBbUIsSUFBQSxVQUFBLHNCQUFBLEtBQUssQ0FBQSxXQUFBOzRCQUFqQixJQUFJLElBQUkseUNBQUEsQ0FBQTs0QkFBYSxNQUFNLElBQUksQ0FBQzt5QkFBRTs7Ozs7Ozs7O2lCQUM5Qzs7Ozs7Ozs7OztRQUNILENBQUM7S0FBQTtDQUNGO0FBRUQseUJBQW1DLFNBQVEsOEJBQXVCO0lBR2hFLFlBQVksTUFBd0M7UUFDbEQsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDO0lBRU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOztZQUMzQixHQUFHLENBQUMsQ0FBQyxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQzs7b0JBQy9CLEdBQUcsQ0FBQyxDQUFtQixJQUFBLFVBQUEsc0JBQUEsS0FBSyxDQUFBLFdBQUE7d0JBQWpCLElBQUksSUFBSSx5Q0FBQSxDQUFBO3dCQUFhLE1BQU0sSUFBSSxDQUFDO3FCQUFFOzs7Ozs7Ozs7WUFDL0MsQ0FBQzs7UUFDSCxDQUFDO0tBQUE7Q0FDRjtBQUVELG1CQUFtQyxNQUE2QztJQUM5RSxNQUFNLENBQUMsSUFBSSxzQkFBc0IsQ0FBVSxNQUFNLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRkQsOEJBRUM7QUFFRCxvQkFBb0MsTUFBd0M7SUFDMUUsTUFBTSxDQUFDLElBQUksbUJBQW1CLENBQVUsTUFBTSxDQUFDLENBQUM7QUFDbEQsQ0FBQztBQUZELGdDQUVDO0FBRUQsZ0JBQTBCLE1BQXdCLEVBQUUsR0FBRyxJQUF3QjtJQUM3RSxNQUFNLENBQUMsSUFBSSxtQkFBbUIsQ0FBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDdkQsQ0FBQztBQUZELHdCQUVDO0FBRUQsc0JBQWdDLEdBQUcsSUFBd0I7SUFDekQsTUFBTSxDQUFDLElBQUksbUJBQW1CLENBQUksSUFBSSxDQUFDLENBQUM7QUFDMUMsQ0FBQztBQUZELG9DQUVDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvY29uY2F0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcblxuY2xhc3MgQ29uY2F0QWxsQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+O1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgZm9yIGF3YWl0IChsZXQgb3V0ZXIgb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBmb3IgYXdhaXQgKGxldCBpdGVtIG9mIG91dGVyKSB7IHlpZWxkIGl0ZW07IH1cbiAgICB9XG4gIH1cbn1cblxuY2xhc3MgQ29uY2F0QXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+PjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCBvdXRlciBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGZvciBhd2FpdCAobGV0IGl0ZW0gb2Ygb3V0ZXIpIHsgeWllbGQgaXRlbTsgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0QWxsPFRTb3VyY2U+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pik6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBDb25jYXRBbGxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBfY29uY2F0QWxsPFRTb3VyY2U+KHNvdXJjZTogSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4pOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgQ29uY2F0QXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0PFQ+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPiwgLi4uYXJnczogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IENvbmNhdEFzeW5jSXRlcmFibGU8VD4oW3NvdXJjZSwgLi4uYXJnc10pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uY2F0U3RhdGljPFQ+KC4uLmFyZ3M6IEFzeW5jSXRlcmFibGU8VD5bXSk6IEFzeW5jSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBDb25jYXRBc3luY0l0ZXJhYmxlPFQ+KGFyZ3MpO1xufVxuIl19
