Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const asynciterable_1 = require("../asynciterable");
const toarray_1 = require("./toarray");
class ScanRightAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(source, fn, ...args) {
        super();
        this._source = source;
        this._fn = fn;
        this._hasSeed = args.length === 1;
        this._seed = args[0];
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            let hasValue = false;
            const source = yield tslib_1.__await(toarray_1.toArray(this._source));
            for (let offset = source.length - 1; offset >= 0; offset--) {
                const item = source[offset];
                if (hasValue || (hasValue = this._hasSeed)) {
                    this._seed = yield tslib_1.__await(this._fn(this._seed, item, offset));
                    yield this._seed;
                }
                else {
                    this._seed = item;
                    hasValue = true;
                }
            }
        });
    }
}
function scanRight(source, accumulator, ...args) {
    return new ScanRightAsyncIterable(source, accumulator, ...args);
}
exports.scanRight = scanRight;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvc2NhbnJpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBQWtEO0FBQ2xELHVDQUFvQztBQUVwQyw0QkFBbUMsU0FBUSw4QkFBaUI7SUFNMUQsWUFDSSxNQUF3QixFQUN4QixFQUF1RCxFQUN2RCxHQUFHLElBQWU7UUFDcEIsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNkLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFDM0IsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLE1BQU0sTUFBTSxHQUFHLHNCQUFNLGlCQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBLENBQUM7WUFDM0MsR0FBRyxDQUFDLENBQUMsSUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsTUFBTSxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDO2dCQUMzRCxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQzVCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUMzQyxJQUFJLENBQUMsS0FBSyxHQUFHLHNCQUFNLElBQUksQ0FBQyxHQUFHLENBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUEsQ0FBQztvQkFDekQsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDO2dCQUNuQixDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNOLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO29CQUNsQixRQUFRLEdBQUcsSUFBSSxDQUFDO2dCQUNsQixDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7S0FBQTtDQUNGO0FBU0QsbUJBQ0ksTUFBd0IsRUFDeEIsV0FBb0UsRUFDcEUsR0FBRyxJQUFlO0lBQ3BCLE1BQU0sQ0FBQyxJQUFJLHNCQUFzQixDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUNsRSxDQUFDO0FBTEQsOEJBS0MiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9zY2FucmlnaHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgdG9BcnJheSB9IGZyb20gJy4vdG9hcnJheSc7XG5cbmNsYXNzIFNjYW5SaWdodEFzeW5jSXRlcmFibGU8VCwgUj4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxSPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUPjtcbiAgcHJpdmF0ZSBfZm46IChhY2M6IFQgfCBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPjtcbiAgcHJpdmF0ZSBfc2VlZD86IFQgfCBSO1xuICBwcml2YXRlIF9oYXNTZWVkOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgICAgZm46IChhY2M6IFQgfCBSLCB4OiBULCBpbmRleDogbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPixcbiAgICAgIC4uLmFyZ3M6IChUIHwgUilbXSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2ZuID0gZm47XG4gICAgdGhpcy5faGFzU2VlZCA9IGFyZ3MubGVuZ3RoID09PSAxO1xuICAgIHRoaXMuX3NlZWQgPSBhcmdzWzBdO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IGhhc1ZhbHVlID0gZmFsc2U7XG4gICAgY29uc3Qgc291cmNlID0gYXdhaXQgdG9BcnJheSh0aGlzLl9zb3VyY2UpO1xuICAgIGZvciAobGV0IG9mZnNldCA9IHNvdXJjZS5sZW5ndGggLSAxOyBvZmZzZXQgPj0gMDsgb2Zmc2V0LS0pIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBzb3VyY2Vbb2Zmc2V0XTtcbiAgICAgIGlmIChoYXNWYWx1ZSB8fCAoaGFzVmFsdWUgPSB0aGlzLl9oYXNTZWVkKSkge1xuICAgICAgICB0aGlzLl9zZWVkID0gYXdhaXQgdGhpcy5fZm4oPFI+dGhpcy5fc2VlZCwgaXRlbSwgb2Zmc2V0KTtcbiAgICAgICAgeWllbGQgdGhpcy5fc2VlZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3NlZWQgPSBpdGVtO1xuICAgICAgICBoYXNWYWx1ZSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzY2FuUmlnaHQ8VD4oXG4gIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgYWNjdW11bGF0b3I6IChhY2M6IFQsIHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBUIHwgUHJvbWlzZTxUPik6IEFzeW5jSXRlcmFibGVYPFQ+O1xuZXhwb3J0IGZ1bmN0aW9uIHNjYW5SaWdodDxULCBSID0gVD4oXG4gIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPixcbiAgYWNjdW11bGF0b3I6IChhY2M6IFIsIHZhbHVlOiBULCBpbmRleDogbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPixcbiAgc2VlZDogUik6IEFzeW5jSXRlcmFibGVYPFI+O1xuZXhwb3J0IGZ1bmN0aW9uIHNjYW5SaWdodDxULCBSID0gVD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LFxuICAgIGFjY3VtdWxhdG9yOiAoYWNjOiBUIHwgUiwgdmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IFIgfCBQcm9taXNlPFI+LFxuICAgIC4uLmFyZ3M6IChUIHwgUilbXSk6IEFzeW5jSXRlcmFibGVYPFQgfCBSPiB7XG4gIHJldHVybiBuZXcgU2NhblJpZ2h0QXN5bmNJdGVyYWJsZShzb3VyY2UsIGFjY3VtdWxhdG9yLCAuLi5hcmdzKTtcbn1cbiJdfQ==
