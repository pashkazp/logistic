Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const asynciterable_1 = require("../asynciterable");
class OnErrorResumeNextAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            for (let item of this._source) {
                let it = item[Symbol.asyncIterator]();
                while (1) {
                    let next;
                    try {
                        next = yield tslib_1.__await(it.next());
                    }
                    catch (e) {
                        break;
                    }
                    if (next.done) {
                        break;
                    }
                    yield next.value;
                }
            }
        });
    }
}
function onErrorResumeNext(source, ...args) {
    return new OnErrorResumeNextAsyncIterable([source, ...args]);
}
exports.onErrorResumeNext = onErrorResumeNext;
function onErrorResumeNextStatic(...source) {
    return new OnErrorResumeNextAsyncIterable(source);
}
exports.onErrorResumeNextStatic = onErrorResumeNextStatic;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvb25lcnJvcnJlc3VtZW5leHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxvREFBa0Q7QUFFbEQsb0NBQThDLFNBQVEsOEJBQXVCO0lBRzNFLFlBQVksTUFBd0M7UUFDbEQsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDO0lBRU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOztZQUMzQixHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDOUIsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO2dCQUN0QyxPQUFPLENBQUMsRUFBRSxDQUFDO29CQUNULElBQUksSUFBSSxDQUFDO29CQUNULElBQUksQ0FBQzt3QkFDSCxJQUFJLEdBQUcsc0JBQU0sRUFBRSxDQUFDLElBQUksRUFBRSxDQUFBLENBQUM7b0JBQ3pCLENBQUM7b0JBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDWCxLQUFLLENBQUM7b0JBQ1IsQ0FBQztvQkFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxLQUFLLENBQUM7b0JBQUMsQ0FBQztvQkFDekIsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDO2dCQUNuQixDQUFDO1lBQ0gsQ0FBQztRQUNILENBQUM7S0FBQTtDQUNGO0FBRUQsMkJBQXFDLE1BQXdCLEVBQUUsR0FBRyxJQUF3QjtJQUN4RixNQUFNLENBQUMsSUFBSSw4QkFBOEIsQ0FBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDbEUsQ0FBQztBQUZELDhDQUVDO0FBRUQsaUNBQTJDLEdBQUcsTUFBMEI7SUFDdEUsTUFBTSxDQUFDLElBQUksOEJBQThCLENBQUksTUFBTSxDQUFDLENBQUM7QUFDdkQsQ0FBQztBQUZELDBEQUVDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvb25lcnJvcnJlc3VtZW5leHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuXG5jbGFzcyBPbkVycm9yUmVzdW1lTmV4dEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj47XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxBc3luY0l0ZXJhYmxlPFRTb3VyY2U+Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgZm9yIChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGxldCBpdCA9IGl0ZW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgICB3aGlsZSAoMSkge1xuICAgICAgICBsZXQgbmV4dDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBuZXh0ID0gYXdhaXQgaXQubmV4dCgpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobmV4dC5kb25lKSB7IGJyZWFrOyB9XG4gICAgICAgIHlpZWxkIG5leHQudmFsdWU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkVycm9yUmVzdW1lTmV4dDxUPihzb3VyY2U6IEFzeW5jSXRlcmFibGU8VD4sIC4uLmFyZ3M6IEFzeW5jSXRlcmFibGU8VD5bXSk6IEFzeW5jSXRlcmFibGVYPFQ+IHtcbiAgcmV0dXJuIG5ldyBPbkVycm9yUmVzdW1lTmV4dEFzeW5jSXRlcmFibGU8VD4oW3NvdXJjZSwgLi4uYXJnc10pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25FcnJvclJlc3VtZU5leHRTdGF0aWM8VD4oLi4uc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+W10pOiBBc3luY0l0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBuZXcgT25FcnJvclJlc3VtZU5leHRBc3luY0l0ZXJhYmxlPFQ+KHNvdXJjZSk7XG59XG4iXX0=
