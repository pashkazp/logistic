Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const asynciterable_1 = require("../asynciterable");
const _sleep_1 = require("./_sleep");
class GenerateTimeAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(initialState, condition, iterate, resultSelector, timeSelector) {
        super();
        this._initialState = initialState;
        this._condition = condition;
        this._iterate = iterate;
        this._resultSelector = resultSelector;
        this._timeSelector = timeSelector;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            for (let i = this._initialState; yield tslib_1.__await(this._condition(i)); i = yield tslib_1.__await(this._iterate(i))) {
                yield tslib_1.__await(_sleep_1.sleep(yield tslib_1.__await(this._timeSelector(i))));
                yield yield tslib_1.__await(this._resultSelector(i));
            }
        });
    }
}
function generateTime(initialState, condition, iterate, resultSelector, timeSelector) {
    return new GenerateTimeAsyncIterable(initialState, condition, iterate, resultSelector, timeSelector);
}
exports.generateTime = generateTime;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZ2VuZXJhdGV0aW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBQWtEO0FBQ2xELHFDQUFpQztBQUVqQywrQkFBaUQsU0FBUSw4QkFBdUI7SUFPOUUsWUFDSSxZQUFvQixFQUNwQixTQUF3RCxFQUN4RCxPQUFvRCxFQUNwRCxjQUE2RCxFQUM3RCxZQUF5RDtRQUMzRCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxhQUFhLEdBQUcsWUFBWSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1FBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxlQUFlLEdBQUcsY0FBYyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxhQUFhLEdBQUcsWUFBWSxDQUFDO0lBQ3BDLENBQUM7SUFFTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7O1lBQzNCLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUUsc0JBQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsR0FBRyxzQkFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQztnQkFDdEYsc0JBQU0sY0FBSyxDQUFDLHNCQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFBLENBQUM7Z0JBQ3pDLE1BQU0sc0JBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDO1lBQ3RDLENBQUM7UUFDSCxDQUFDO0tBQUE7Q0FDRjtBQUVELHNCQUNJLFlBQW9CLEVBQ3BCLFNBQXdELEVBQ3hELE9BQW9ELEVBQ3BELGNBQTZELEVBQzdELFlBQXlEO0lBQzNELE1BQU0sQ0FBQyxJQUFJLHlCQUF5QixDQUNsQyxZQUFZLEVBQ1osU0FBUyxFQUNULE9BQU8sRUFDUCxjQUFjLEVBQ2QsWUFBWSxDQUFDLENBQUM7QUFDbEIsQ0FBQztBQVpELG9DQVlDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvZ2VuZXJhdGV0aW1lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi9fc2xlZXAnO1xuXG5jbGFzcyBHZW5lcmF0ZVRpbWVBc3luY0l0ZXJhYmxlPFRTdGF0ZSwgVFJlc3VsdD4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHByaXZhdGUgX2luaXRpYWxTdGF0ZTogVFN0YXRlO1xuICBwcml2YXRlIF9jb25kaXRpb246ICh2YWx1ZTogVFN0YXRlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPjtcbiAgcHJpdmF0ZSBfaXRlcmF0ZTogKHZhbHVlOiBUU3RhdGUpID0+IFRTdGF0ZSB8IFByb21pc2U8VFN0YXRlPjtcbiAgcHJpdmF0ZSBfcmVzdWx0U2VsZWN0b3I6ICh2YWx1ZTogVFN0YXRlKSA9PiBUUmVzdWx0IHwgUHJvbWlzZTxUUmVzdWx0PjtcbiAgcHJpdmF0ZSBfdGltZVNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgaW5pdGlhbFN0YXRlOiBUU3RhdGUsXG4gICAgICBjb25kaXRpb246ICh2YWx1ZTogVFN0YXRlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPixcbiAgICAgIGl0ZXJhdGU6ICh2YWx1ZTogVFN0YXRlKSA9PiBUU3RhdGUgfCBQcm9taXNlPFRTdGF0ZT4sXG4gICAgICByZXN1bHRTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IFRSZXN1bHQgfCBQcm9taXNlPFRSZXN1bHQ+LFxuICAgICAgdGltZVNlbGVjdG9yOiAodmFsdWU6IFRTdGF0ZSkgPT4gbnVtYmVyIHwgUHJvbWlzZTxudW1iZXI+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9pbml0aWFsU3RhdGUgPSBpbml0aWFsU3RhdGU7XG4gICAgdGhpcy5fY29uZGl0aW9uID0gY29uZGl0aW9uO1xuICAgIHRoaXMuX2l0ZXJhdGUgPSBpdGVyYXRlO1xuICAgIHRoaXMuX3Jlc3VsdFNlbGVjdG9yID0gcmVzdWx0U2VsZWN0b3I7XG4gICAgdGhpcy5fdGltZVNlbGVjdG9yID0gdGltZVNlbGVjdG9yO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgZm9yIChsZXQgaSA9IHRoaXMuX2luaXRpYWxTdGF0ZTsgYXdhaXQgdGhpcy5fY29uZGl0aW9uKGkpOyBpID0gYXdhaXQgdGhpcy5faXRlcmF0ZShpKSkge1xuICAgICAgYXdhaXQgc2xlZXAoYXdhaXQgdGhpcy5fdGltZVNlbGVjdG9yKGkpKTtcbiAgICAgIHlpZWxkIGF3YWl0IHRoaXMuX3Jlc3VsdFNlbGVjdG9yKGkpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVUaW1lPFRTdGF0ZSwgVFJlc3VsdD4oXG4gICAgaW5pdGlhbFN0YXRlOiBUU3RhdGUsXG4gICAgY29uZGl0aW9uOiAodmFsdWU6IFRTdGF0ZSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4sXG4gICAgaXRlcmF0ZTogKHZhbHVlOiBUU3RhdGUpID0+IFRTdGF0ZSB8IFByb21pc2U8VFN0YXRlPixcbiAgICByZXN1bHRTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IFRSZXN1bHQgfCBQcm9taXNlPFRSZXN1bHQ+LFxuICAgIHRpbWVTZWxlY3RvcjogKHZhbHVlOiBUU3RhdGUpID0+IG51bWJlciB8IFByb21pc2U8bnVtYmVyPik6IEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBHZW5lcmF0ZVRpbWVBc3luY0l0ZXJhYmxlPFRTdGF0ZSwgVFJlc3VsdD4oXG4gICAgaW5pdGlhbFN0YXRlLFxuICAgIGNvbmRpdGlvbixcbiAgICBpdGVyYXRlLFxuICAgIHJlc3VsdFNlbGVjdG9yLFxuICAgIHRpbWVTZWxlY3Rvcik7XG59XG4iXX0=
