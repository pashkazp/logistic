Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const asynciterable_1 = require("../asynciterable");
const arrayindexof_1 = require("../internal/arrayindexof");
const comparer_1 = require("../internal/comparer");
class ExceptAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(first, second, comparer) {
        super();
        this._first = first;
        this._second = second;
        this._comparer = comparer;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            let map = [];
            try {
                for (var _a = tslib_1.__asyncValues(this._second), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                    let secondItem = yield tslib_1.__await(_b.value);
                    map.push(secondItem);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield tslib_1.__await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            try {
                for (var _d = tslib_1.__asyncValues(this._first), _e; _e = yield tslib_1.__await(_d.next()), !_e.done;) {
                    let firstItem = yield tslib_1.__await(_e.value);
                    if ((yield tslib_1.__await(arrayindexof_1.arrayIndexOfAsync(map, firstItem, this._comparer))) === -1) {
                        map.push(firstItem);
                        yield firstItem;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_e && !_e.done && (_f = _d.return)) yield tslib_1.__await(_f.call(_d));
                }
                finally { if (e_2) throw e_2.error; }
            }
            var e_1, _c, e_2, _f;
        });
    }
}
function except(first, second, comparer = comparer_1.comparerAsync) {
    return new ExceptAsyncIterable(first, second, comparer);
}
exports.except = except;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZXhjZXB0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBQWtEO0FBQ2xELDJEQUE2RDtBQUM3RCxtREFBcUQ7QUFFckQseUJBQW1DLFNBQVEsOEJBQXVCO0lBS2hFLFlBQ0ksS0FBNkIsRUFDN0IsTUFBOEIsRUFDOUIsUUFBZ0U7UUFDbEUsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLFFBQVEsQ0FBQztJQUM1QixDQUFDO0lBRU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOztZQUMzQixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7O2dCQUNiLEdBQUcsQ0FBQyxDQUF5QixJQUFBLEtBQUEsc0JBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQSxJQUFBO29CQUE5QixJQUFJLFVBQVUsa0NBQUEsQ0FBQTtvQkFDdkIsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztpQkFDdEI7Ozs7Ozs7Ozs7Z0JBRUQsR0FBRyxDQUFDLENBQXdCLElBQUEsS0FBQSxzQkFBQSxJQUFJLENBQUMsTUFBTSxDQUFBLElBQUE7b0JBQTVCLElBQUksU0FBUyxrQ0FBQSxDQUFBO29CQUN0QixFQUFFLENBQUMsQ0FBQyxDQUFBLHNCQUFNLGdDQUFpQixDQUFDLEdBQUcsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBLE1BQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNuRSxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO3dCQUNwQixNQUFNLFNBQVMsQ0FBQztvQkFDbEIsQ0FBQztpQkFDRjs7Ozs7Ozs7OztRQUNILENBQUM7S0FBQTtDQUNGO0FBRUQsZ0JBQ0ksS0FBNkIsRUFDN0IsTUFBOEIsRUFDOUIsV0FBbUUsd0JBQWE7SUFDbEYsTUFBTSxDQUFDLElBQUksbUJBQW1CLENBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBTEQsd0JBS0MiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS9leGNlcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgYXJyYXlJbmRleE9mQXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9hcnJheWluZGV4b2YnO1xuaW1wb3J0IHsgY29tcGFyZXJBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2NvbXBhcmVyJztcblxuY2xhc3MgRXhjZXB0QXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfZmlyc3Q6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX3NlY29uZDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIGZpcnN0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgc2Vjb25kOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fZmlyc3QgPSBmaXJzdDtcbiAgICB0aGlzLl9zZWNvbmQgPSBzZWNvbmQ7XG4gICAgdGhpcy5fY29tcGFyZXIgPSBjb21wYXJlcjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGxldCBtYXAgPSBbXTtcbiAgICBmb3IgYXdhaXQgKGxldCBzZWNvbmRJdGVtIG9mIHRoaXMuX3NlY29uZCkge1xuICAgICAgbWFwLnB1c2goc2Vjb25kSXRlbSk7XG4gICAgfVxuXG4gICAgZm9yIGF3YWl0IChsZXQgZmlyc3RJdGVtIG9mIHRoaXMuX2ZpcnN0KSB7XG4gICAgICBpZiAoYXdhaXQgYXJyYXlJbmRleE9mQXN5bmMobWFwLCBmaXJzdEl0ZW0sIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgbWFwLnB1c2goZmlyc3RJdGVtKTtcbiAgICAgICAgeWllbGQgZmlyc3RJdGVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhjZXB0PFRTb3VyY2U+KFxuICAgIGZpcnN0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlY29uZDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBjb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+ID0gY29tcGFyZXJBc3luYyk6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBFeGNlcHRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KGZpcnN0LCBzZWNvbmQsIGNvbXBhcmVyKTtcbn1cbiJdfQ==
