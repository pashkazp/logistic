import { IterableX } from '../iterable';
import { identity } from '../internal/identity';
import { createGrouping } from './_grouping';
export class GroupedIterable extends IterableX {
    constructor(key, source) {
        super();
        this.key = key;
        this._source = source;
    }
    [Symbol.iterator]() {
        return this._source[Symbol.iterator]();
    }
}
export class GroupByIterable extends IterableX {
    constructor(source, keySelector, elementSelector) {
        super();
        this._source = source;
        this._keySelector = keySelector;
        this._elementSelector = elementSelector;
    }
    *[Symbol.iterator]() {
        const map = createGrouping(this._source, this._keySelector, this._elementSelector);
        for (let [key, values] of map) {
            yield new GroupedIterable(key, values);
        }
    }
}
export function groupBy(source, keySelector, elementSelector = identity) {
    return new GroupByIterable(source, keySelector, elementSelector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2dyb3VwYnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUU3QyxNQUFNLHNCQUFxQyxTQUFRLFNBQWlCO0lBSWxFLFlBQVksR0FBUyxFQUFFLE1BQXdCO1FBQzdDLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztJQUN4QixDQUFDO0lBRUQsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7SUFDekMsQ0FBQztDQUNGO0FBRUQsTUFBTSxzQkFBOEMsU0FBUSxTQUF3QztJQUtsRyxZQUNJLE1BQXlCLEVBQ3pCLFdBQXFDLEVBQ3JDLGVBQTJDO1FBQzdDLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDaEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztJQUMxQyxDQUFDO0lBRUQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDaEIsTUFBTSxHQUFHLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUNuRixHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDOUIsTUFBTSxJQUFJLGVBQWUsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDekMsQ0FBQztJQUNILENBQUM7Q0FDRjtBQVNELE1BQU0sa0JBQ0YsTUFBeUIsRUFDekIsV0FBcUMsRUFDckMsa0JBQThDLFFBQVE7SUFDeEQsTUFBTSxDQUFDLElBQUksZUFBZSxDQUF3QixNQUFNLEVBQUUsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBQzFGLENBQUMiLCJmaWxlIjoiaXRlcmFibGUvZ3JvdXBieS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmltcG9ydCB7IGlkZW50aXR5IH0gZnJvbSAnLi4vaW50ZXJuYWwvaWRlbnRpdHknO1xuaW1wb3J0IHsgY3JlYXRlR3JvdXBpbmcgfSBmcm9tICcuL19ncm91cGluZyc7XG5cbmV4cG9ydCBjbGFzcyBHcm91cGVkSXRlcmFibGU8VEtleSwgVFZhbHVlPiBleHRlbmRzIEl0ZXJhYmxlWDxUVmFsdWU+IHtcbiAgcHVibGljIHJlYWRvbmx5IGtleTogVEtleTtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUVmFsdWU+O1xuXG4gIGNvbnN0cnVjdG9yKGtleTogVEtleSwgc291cmNlOiBJdGVyYWJsZTxUVmFsdWU+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmtleSA9IGtleTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cblxuICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcy5fc291cmNlW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgR3JvdXBCeUl0ZXJhYmxlPFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4gZXh0ZW5kcyBJdGVyYWJsZVg8R3JvdXBlZEl0ZXJhYmxlPFRLZXksIFRWYWx1ZT4+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfa2V5U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVEtleTtcbiAgcHJpdmF0ZSBfZWxlbWVudFNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRWYWx1ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5LFxuICAgICAgZWxlbWVudFNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRWYWx1ZSkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2tleVNlbGVjdG9yID0ga2V5U2VsZWN0b3I7XG4gICAgdGhpcy5fZWxlbWVudFNlbGVjdG9yID0gZWxlbWVudFNlbGVjdG9yO1xuICB9XG5cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGNvbnN0IG1hcCA9IGNyZWF0ZUdyb3VwaW5nKHRoaXMuX3NvdXJjZSwgdGhpcy5fa2V5U2VsZWN0b3IsIHRoaXMuX2VsZW1lbnRTZWxlY3Rvcik7XG4gICAgZm9yIChsZXQgW2tleSwgdmFsdWVzXSBvZiBtYXApIHtcbiAgICAgIHlpZWxkIG5ldyBHcm91cGVkSXRlcmFibGUoa2V5LCB2YWx1ZXMpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBCeTxUU291cmNlLCBUS2V5PihcbiAgICBzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkpOiBJdGVyYWJsZVg8R3JvdXBlZEl0ZXJhYmxlPFRLZXksIFRTb3VyY2U+PjtcbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5PFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4oXG4gIHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sXG4gIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXksXG4gIGVsZW1lbnRTZWxlY3Rvcj86ICh2YWx1ZTogVFNvdXJjZSkgPT4gVFZhbHVlKTogSXRlcmFibGVYPEdyb3VwZWRJdGVyYWJsZTxUS2V5LCBUVmFsdWU+PjtcbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5PFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5LFxuICAgIGVsZW1lbnRTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUVmFsdWUgPSBpZGVudGl0eSk6IEl0ZXJhYmxlWDxHcm91cGVkSXRlcmFibGU8VEtleSwgVFZhbHVlPj4ge1xuICByZXR1cm4gbmV3IEdyb3VwQnlJdGVyYWJsZTxUU291cmNlLCBUS2V5LCBUVmFsdWU+KHNvdXJjZSwga2V5U2VsZWN0b3IsIGVsZW1lbnRTZWxlY3Rvcik7XG59XG4iXX0=
