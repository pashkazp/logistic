import { IterableX } from '../iterable';
import { bindCallback } from '../internal/bindcallback';
import { identity } from '../internal/identity';
import { toLength } from '../internal/tolength';
import { isIterable } from '../internal/isiterable';
class FromIterable extends IterableX {
    constructor(source, fn) {
        super();
        this._source = source;
        this._fn = fn;
    }
    *[Symbol.iterator]() {
        const iterable = isIterable(this._source);
        let i = 0;
        if (iterable) {
            for (let item of this._source) {
                yield this._fn(item, i++);
            }
        }
        else {
            let length = toLength(this._source.length);
            while (i < length) {
                let val = this._source[i];
                yield this._fn(val, i++);
            }
        }
    }
}
export function from(source, fn = identity, thisArg) {
    return new FromIterable(source, bindCallback(fn, thisArg, 2));
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2Zyb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFcEQsa0JBQStDLFNBQVEsU0FBa0I7SUFJdkUsWUFBWSxNQUE4QyxFQUFFLEVBQThDO1FBQ3hHLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2hCLE1BQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNiLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUF1QixJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDakQsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzVCLENBQUM7UUFDSCxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLE1BQU0sR0FBRyxRQUFRLENBQXNCLElBQUksQ0FBQyxPQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDakUsT0FBTyxDQUFDLEdBQUcsTUFBTSxFQUFFLENBQUM7Z0JBQ2xCLElBQUksR0FBRyxHQUF3QixJQUFJLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoRCxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDM0IsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLGVBQ0YsTUFBOEMsRUFDOUMsS0FBaUQsUUFBUSxFQUN6RCxPQUFhO0lBQ2YsTUFBTSxDQUFDLElBQUksWUFBWSxDQUFtQixNQUFNLEVBQUUsWUFBWSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRixDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL2Zyb20uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5pbXBvcnQgeyBiaW5kQ2FsbGJhY2sgfSBmcm9tICcuLi9pbnRlcm5hbC9iaW5kY2FsbGJhY2snO1xuaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5pbXBvcnQgeyB0b0xlbmd0aCB9IGZyb20gJy4uL2ludGVybmFsL3RvbGVuZ3RoJztcbmltcG9ydCB7IGlzSXRlcmFibGUgfSBmcm9tICcuLi9pbnRlcm5hbC9pc2l0ZXJhYmxlJztcblxuY2xhc3MgRnJvbUl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQgPSBUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4gfCBBcnJheUxpa2U8VFNvdXJjZT47XG4gIHByaXZhdGUgX2ZuOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IFRSZXN1bHQ7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiB8IEFycmF5TGlrZTxUU291cmNlPiwgZm46ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gVFJlc3VsdCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2ZuID0gZm47XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgaXRlcmFibGUgPSBpc0l0ZXJhYmxlKHRoaXMuX3NvdXJjZSk7XG4gICAgbGV0IGkgPSAwO1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgZm9yIChsZXQgaXRlbSBvZiA8SXRlcmFibGU8VFNvdXJjZT4+dGhpcy5fc291cmNlKSB7XG4gICAgICAgIHlpZWxkIHRoaXMuX2ZuKGl0ZW0sIGkrKyk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBsZW5ndGggPSB0b0xlbmd0aCgoPEFycmF5TGlrZTxUU291cmNlPj50aGlzLl9zb3VyY2UpLmxlbmd0aCk7XG4gICAgICB3aGlsZSAoaSA8IGxlbmd0aCkge1xuICAgICAgICBsZXQgdmFsID0gKDxBcnJheUxpa2U8VFNvdXJjZT4+dGhpcy5fc291cmNlKVtpXTtcbiAgICAgICAgeWllbGQgdGhpcy5fZm4odmFsLCBpKyspO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZnJvbTxUU291cmNlLCBUUmVzdWx0ID0gVFNvdXJjZT4oXG4gICAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiB8IEFycmF5TGlrZTxUU291cmNlPixcbiAgICBmbjogKHZhbHVlOiBUU291cmNlLCBpbmRleDogbnVtYmVyKSA9PiBUUmVzdWx0ID0gaWRlbnRpdHksXG4gICAgdGhpc0FyZz86IGFueSk6IEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgRnJvbUl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+KHNvdXJjZSwgYmluZENhbGxiYWNrKGZuLCB0aGlzQXJnLCAyKSk7XG59XG4iXX0=
