import { IterableX } from '../iterable';
import { createGrouping } from './_grouping';
import { identity } from '../internal/identity';
class JoinIterable extends IterableX {
    constructor(outer, inner, outerSelector, innerSelector, resultSelector) {
        super();
        this._outer = outer;
        this._inner = inner;
        this._outerSelector = outerSelector;
        this._innerSelector = innerSelector;
        this._resultSelector = resultSelector;
    }
    *[Symbol.iterator]() {
        const map = createGrouping(this._inner, this._innerSelector, identity);
        for (let outerElement of this._outer) {
            const outerKey = this._outerSelector(outerElement);
            if (map.has(outerKey)) {
                for (let innerElement of map.get(outerKey)) {
                    yield this._resultSelector(outerElement, innerElement);
                }
            }
        }
    }
}
export function innerJoin(outer, inner, outerSelector, innerSelector, resultSelector) {
    return new JoinIterable(outer, inner, outerSelector, innerSelector, resultSelector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2lubmVyam9pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDN0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRWhELGtCQUFrRCxTQUFRLFNBQWtCO0lBTzFFLFlBQ0UsS0FBdUIsRUFDdkIsS0FBdUIsRUFDdkIsYUFBc0MsRUFDdEMsYUFBc0MsRUFDdEMsY0FBeUQ7UUFDekQsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQztRQUNwQyxJQUFJLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQztRQUNwQyxJQUFJLENBQUMsZUFBZSxHQUFHLGNBQWMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDaEIsTUFBTSxHQUFHLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN2RSxHQUFHLENBQUMsQ0FBQyxJQUFJLFlBQVksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNyQyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ25ELEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixHQUFHLENBQUMsQ0FBQyxJQUFJLFlBQVksSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBRSxDQUFDLENBQUMsQ0FBQztvQkFDNUMsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFDekQsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxvQkFDRixLQUF1QixFQUN2QixLQUF1QixFQUN2QixhQUFzQyxFQUN0QyxhQUFzQyxFQUN0QyxjQUF5RDtJQUMzRCxNQUFNLENBQUMsSUFBSSxZQUFZLENBQ3JCLEtBQUssRUFDTCxLQUFLLEVBQ0wsYUFBYSxFQUNiLGFBQWEsRUFDYixjQUFjLENBQUMsQ0FBQztBQUNwQixDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL2lubmVyam9pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmltcG9ydCB7IGNyZWF0ZUdyb3VwaW5nIH0gZnJvbSAnLi9fZ3JvdXBpbmcnO1xuaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5cbmNsYXNzIEpvaW5JdGVyYWJsZTxUT3V0ZXIsIFRJbm5lciwgVEtleSwgVFJlc3VsdD4gZXh0ZW5kcyBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICBwcml2YXRlIF9vdXRlcjogSXRlcmFibGU8VE91dGVyPjtcbiAgcHJpdmF0ZSBfaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj47XG4gIHByaXZhdGUgX291dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5O1xuICBwcml2YXRlIF9pbm5lclNlbGVjdG9yOiAodmFsdWU6IFRJbm5lcikgPT4gVEtleTtcbiAgcHJpdmF0ZSBfcmVzdWx0U2VsZWN0b3I6IChvdXRlcjogVE91dGVyLCBpbm5lcjogVElubmVyKSA9PiBUUmVzdWx0O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIG91dGVyOiBJdGVyYWJsZTxUT3V0ZXI+LFxuICAgIGlubmVyOiBJdGVyYWJsZTxUSW5uZXI+LFxuICAgIG91dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5LFxuICAgIGlubmVyU2VsZWN0b3I6ICh2YWx1ZTogVElubmVyKSA9PiBUS2V5LFxuICAgIHJlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IFRJbm5lcikgPT4gVFJlc3VsdCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fb3V0ZXIgPSBvdXRlcjtcbiAgICB0aGlzLl9pbm5lciA9IGlubmVyO1xuICAgIHRoaXMuX291dGVyU2VsZWN0b3IgPSBvdXRlclNlbGVjdG9yO1xuICAgIHRoaXMuX2lubmVyU2VsZWN0b3IgPSBpbm5lclNlbGVjdG9yO1xuICAgIHRoaXMuX3Jlc3VsdFNlbGVjdG9yID0gcmVzdWx0U2VsZWN0b3I7XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgbWFwID0gY3JlYXRlR3JvdXBpbmcodGhpcy5faW5uZXIsIHRoaXMuX2lubmVyU2VsZWN0b3IsIGlkZW50aXR5KTtcbiAgICBmb3IgKGxldCBvdXRlckVsZW1lbnQgb2YgdGhpcy5fb3V0ZXIpIHtcbiAgICAgIGNvbnN0IG91dGVyS2V5ID0gdGhpcy5fb3V0ZXJTZWxlY3RvcihvdXRlckVsZW1lbnQpO1xuICAgICAgaWYgKG1hcC5oYXMob3V0ZXJLZXkpKSB7XG4gICAgICAgIGZvciAobGV0IGlubmVyRWxlbWVudCBvZiBtYXAuZ2V0KG91dGVyS2V5KSEpIHtcbiAgICAgICAgICB5aWVsZCB0aGlzLl9yZXN1bHRTZWxlY3RvcihvdXRlckVsZW1lbnQsIGlubmVyRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlubmVySm9pbjxUT3V0ZXIsIFRJbm5lciwgVEtleSwgVFJlc3VsdD4oXG4gICAgb3V0ZXI6IEl0ZXJhYmxlPFRPdXRlcj4sXG4gICAgaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj4sXG4gICAgb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXksXG4gICAgaW5uZXJTZWxlY3RvcjogKHZhbHVlOiBUSW5uZXIpID0+IFRLZXksXG4gICAgcmVzdWx0U2VsZWN0b3I6IChvdXRlcjogVE91dGVyLCBpbm5lcjogVElubmVyKSA9PiBUUmVzdWx0KTogSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBKb2luSXRlcmFibGU8VE91dGVyLCBUSW5uZXIsIFRLZXksIFRSZXN1bHQ+KFxuICAgIG91dGVyLFxuICAgIGlubmVyLFxuICAgIG91dGVyU2VsZWN0b3IsXG4gICAgaW5uZXJTZWxlY3RvcixcbiAgICByZXN1bHRTZWxlY3Rvcik7XG59XG4iXX0=
