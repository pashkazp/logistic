import * as tslib_1 from "tslib";
import { of } from './of';
import { AsyncIterableX } from '../asynciterable';
class RepeatAsyncIterable extends AsyncIterableX {
    constructor(source, count) {
        super();
        this._source = source;
        this._count = count;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            if (this._count === -1) {
                while (1) {
                    try {
                        for (var _a = tslib_1.__asyncValues(this._source), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                            let item = yield tslib_1.__await(_b.value);
                            yield item;
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_b && !_b.done && (_c = _a.return)) yield tslib_1.__await(_c.call(_a));
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
            }
            else {
                for (let i = 0; i < this._count; i++) {
                    try {
                        for (var _d = tslib_1.__asyncValues(this._source), _e; _e = yield tslib_1.__await(_d.next()), !_e.done;) {
                            let item = yield tslib_1.__await(_e.value);
                            yield item;
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_e && !_e.done && (_f = _d.return)) yield tslib_1.__await(_f.call(_d));
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                }
            }
            var e_1, _c, e_2, _f;
        });
    }
}
export function repeat(source, count = -1) {
    return new RepeatAsyncIterable(source, count);
}
export function repeatStatic(value, count = -1) {
    return new RepeatAsyncIterable(of(value), count);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvcmVwZWF0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzFCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRCx5QkFBbUMsU0FBUSxjQUF1QjtJQUloRSxZQUFZLE1BQThCLEVBQUUsS0FBYTtRQUN2RCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7O1lBQzNCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN2QixPQUFPLENBQUMsRUFBRSxDQUFDOzt3QkFDVCxHQUFHLENBQUMsQ0FBbUIsSUFBQSxLQUFBLHNCQUFBLElBQUksQ0FBQyxPQUFPLENBQUEsSUFBQTs0QkFBeEIsSUFBSSxJQUFJLGtDQUFBLENBQUE7NEJBQW9CLE1BQU0sSUFBSSxDQUFDO3lCQUFFOzs7Ozs7Ozs7Z0JBQ3RELENBQUM7WUFDSCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7O3dCQUNyQyxHQUFHLENBQUMsQ0FBbUIsSUFBQSxLQUFBLHNCQUFBLElBQUksQ0FBQyxPQUFPLENBQUEsSUFBQTs0QkFBeEIsSUFBSSxJQUFJLGtDQUFBLENBQUE7NEJBQW9CLE1BQU0sSUFBSSxDQUFDO3lCQUFFOzs7Ozs7Ozs7Z0JBQ3RELENBQUM7WUFDSCxDQUFDOztRQUNILENBQUM7S0FBQTtDQUNGO0FBRUQsTUFBTSxpQkFBMEIsTUFBOEIsRUFBRSxRQUFnQixDQUFDLENBQUM7SUFDaEYsTUFBTSxDQUFDLElBQUksbUJBQW1CLENBQVUsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3pELENBQUM7QUFFRCxNQUFNLHVCQUFnQyxLQUFjLEVBQUUsUUFBZ0IsQ0FBQyxDQUFDO0lBQ3RFLE1BQU0sQ0FBQyxJQUFJLG1CQUFtQixDQUFVLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUM1RCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvcmVwZWF0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb2YgfSBmcm9tICcuL29mJztcbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5cbmNsYXNzIFJlcGVhdEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfY291bnQ6IG51bWJlcjtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sIGNvdW50OiBudW1iZXIpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9jb3VudCA9IGNvdW50O1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgaWYgKHRoaXMuX2NvdW50ID09PSAtMSkge1xuICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHsgeWllbGQgaXRlbTsgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2NvdW50OyBpKyspIHtcbiAgICAgICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHsgeWllbGQgaXRlbTsgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVwZWF0PFRTb3VyY2U+KHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgY291bnQ6IG51bWJlciA9IC0xKTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFJlcGVhdEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBjb3VudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBlYXRTdGF0aWM8VFNvdXJjZT4odmFsdWU6IFRTb3VyY2UsIGNvdW50OiBudW1iZXIgPSAtMSk6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBSZXBlYXRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KG9mKHZhbHVlKSwgY291bnQpO1xufVxuIl19
