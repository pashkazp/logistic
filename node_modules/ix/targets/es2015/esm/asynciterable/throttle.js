import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class ThrottleAsyncIterable extends AsyncIterableX {
    constructor(source, time) {
        super();
        this._source = source;
        this._time = time;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            let currentTime, previousTime;
            try {
                for (var _a = tslib_1.__asyncValues(this._source), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                    const item = yield tslib_1.__await(_b.value);
                    currentTime = Date.now();
                    if (!previousTime || currentTime - previousTime > this._time) {
                        previousTime = currentTime;
                        yield item;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield tslib_1.__await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
export function throttle(source, time) {
    return new ThrottleAsyncIterable(source, time);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdGhyb3R0bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRCwyQkFBcUMsU0FBUSxjQUF1QjtJQUlsRSxZQUFZLE1BQThCLEVBQUUsSUFBWTtRQUN0RCxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ3BCLENBQUM7SUFFTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7O1lBQzNCLElBQUksV0FBVyxFQUFFLFlBQVksQ0FBQzs7Z0JBQzlCLEdBQUcsQ0FBQyxDQUFxQixJQUFBLEtBQUEsc0JBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQSxJQUFBO29CQUExQixNQUFNLElBQUksa0NBQUEsQ0FBQTtvQkFDbkIsV0FBVyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztvQkFDekIsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLElBQUksV0FBVyxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzt3QkFDN0QsWUFBWSxHQUFHLFdBQVcsQ0FBQzt3QkFDM0IsTUFBTSxJQUFJLENBQUM7b0JBQ2IsQ0FBQztpQkFDRjs7Ozs7Ozs7OztRQUNILENBQUM7S0FBQTtDQUNGO0FBRUQsTUFBTSxtQkFBNEIsTUFBOEIsRUFBRSxJQUFZO0lBQzVFLE1BQU0sQ0FBQyxJQUFJLHFCQUFxQixDQUFVLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMxRCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvdGhyb3R0bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuXG5jbGFzcyBUaHJvdHRsZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfdGltZTogbnVtYmVyO1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgdGltZTogbnVtYmVyKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fdGltZSA9IHRpbWU7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgY3VycmVudFRpbWUsIHByZXZpb3VzVGltZTtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBjdXJyZW50VGltZSA9IERhdGUubm93KCk7XG4gICAgICBpZiAoIXByZXZpb3VzVGltZSB8fCBjdXJyZW50VGltZSAtIHByZXZpb3VzVGltZSA+IHRoaXMuX3RpbWUpIHtcbiAgICAgICAgcHJldmlvdXNUaW1lID0gY3VycmVudFRpbWU7XG4gICAgICAgIHlpZWxkIGl0ZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsZTxUU291cmNlPihzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sIHRpbWU6IG51bWJlcik6IEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBUaHJvdHRsZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCB0aW1lKTtcbn1cbiJdfQ==
