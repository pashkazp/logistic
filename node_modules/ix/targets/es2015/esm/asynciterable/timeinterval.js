import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class TimeIntervalAsyncIterable extends AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            let last = Date.now();
            try {
                for (var _a = tslib_1.__asyncValues(this._source), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                    let item = yield tslib_1.__await(_b.value);
                    const now = Date.now();
                    const span = now - last;
                    last = now;
                    yield { value: item, elapsed: span };
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield tslib_1.__await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
export function timeInterval(source) {
    return new TimeIntervalAsyncIterable(source);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdGltZWludGVydmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFPbEQsK0JBQXlDLFNBQVEsY0FBcUM7SUFHcEYsWUFBWSxNQUE4QjtRQUN4QyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0lBQ3hCLENBQUM7SUFFTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7O1lBQzNCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQzs7Z0JBQ3RCLEdBQUcsQ0FBQyxDQUFtQixJQUFBLEtBQUEsc0JBQUEsSUFBSSxDQUFDLE9BQU8sQ0FBQSxJQUFBO29CQUF4QixJQUFJLElBQUksa0NBQUEsQ0FBQTtvQkFDakIsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO29CQUN2QixNQUFNLElBQUksR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDO29CQUN4QixJQUFJLEdBQUcsR0FBRyxDQUFDO29CQUNYLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztpQkFDdEM7Ozs7Ozs7Ozs7UUFDSCxDQUFDO0tBQUE7Q0FDRjtBQUVELE1BQU0sdUJBQ0YsTUFBOEI7SUFDaEMsTUFBTSxDQUFDLElBQUkseUJBQXlCLENBQVUsTUFBTSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL3RpbWVpbnRlcnZhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGltZUludGVydmFsPFQ+IHtcbiAgdmFsdWU6IFQ7XG4gIGVsYXBzZWQ6IG51bWJlcjtcbn1cblxuY2xhc3MgVGltZUludGVydmFsQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRpbWVJbnRlcnZhbDxUU291cmNlPj4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgbGFzdCA9IERhdGUubm93KCk7XG4gICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICBjb25zdCBzcGFuID0gbm93IC0gbGFzdDtcbiAgICAgIGxhc3QgPSBub3c7XG4gICAgICB5aWVsZCB7IHZhbHVlOiBpdGVtLCBlbGFwc2VkOiBzcGFuIH07XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0aW1lSW50ZXJ2YWw8VFNvdXJjZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KTogQXN5bmNJdGVyYWJsZVg8VGltZUludGVydmFsPFRTb3VyY2U+PiB7XG4gIHJldHVybiBuZXcgVGltZUludGVydmFsQXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UpO1xufSJdfQ==
