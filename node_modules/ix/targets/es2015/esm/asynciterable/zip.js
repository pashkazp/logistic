import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class ZipIterable extends AsyncIterableX {
    constructor(left, right, fn) {
        super();
        this._left = left;
        this._right = right;
        this._fn = fn;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            const it1 = this._left[Symbol.asyncIterator]();
            const it2 = this._right[Symbol.asyncIterator]();
            while (1) {
                const [next1, next2] = yield tslib_1.__await(Promise.all([it1.next(), it2.next()]));
                if (!next1.done && !next2.done) {
                    yield yield tslib_1.__await(this._fn(next1.value, next2.value));
                }
                else {
                    break;
                }
            }
        });
    }
}
export function zip(left, right, fn) {
    return new ZipIterable(left, right, fn);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvemlwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFbEQsaUJBQW9DLFNBQVEsY0FBdUI7SUFLakUsWUFDSSxJQUE0QixFQUM1QixLQUE2QixFQUM3QixFQUFpRTtRQUNuRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7O1lBQzNCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUM7WUFDL0MsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztZQUNoRCxPQUFPLENBQUMsRUFBRSxDQUFDO2dCQUNULE1BQU0sQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEdBQUcsc0JBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUM7Z0JBQ25FLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUMvQixNQUFNLHNCQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUEsQ0FBQztnQkFDakQsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDTixLQUFLLENBQUM7Z0JBQ1IsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDO0tBQUE7Q0FDRjtBQUVELE1BQU0sY0FDRixJQUE0QixFQUM1QixLQUE2QixFQUM3QixFQUFpRTtJQUNuRSxNQUFNLENBQUMsSUFBSSxXQUFXLENBQW1CLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDNUQsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL3ppcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5cbmNsYXNzIFppcEl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICBwcml2YXRlIF9sZWZ0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9yaWdodDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfZm46IChsZWZ0OiBUU291cmNlLCByaWdodDogVFNvdXJjZSkgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBsZWZ0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgcmlnaHQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBmbjogKGxlZnQ6IFRTb3VyY2UsIHJpZ2h0OiBUU291cmNlKSA9PiBUUmVzdWx0IHwgUHJvbWlzZTxUUmVzdWx0Pikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fbGVmdCA9IGxlZnQ7XG4gICAgdGhpcy5fcmlnaHQgPSByaWdodDtcbiAgICB0aGlzLl9mbiA9IGZuO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgaXQxID0gdGhpcy5fbGVmdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICBjb25zdCBpdDIgPSB0aGlzLl9yaWdodFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgY29uc3QgW25leHQxLCBuZXh0Ml0gPSBhd2FpdCBQcm9taXNlLmFsbChbaXQxLm5leHQoKSwgaXQyLm5leHQoKV0pO1xuICAgICAgaWYgKCFuZXh0MS5kb25lICYmICFuZXh0Mi5kb25lKSB7XG4gICAgICAgIHlpZWxkIGF3YWl0IHRoaXMuX2ZuKG5leHQxLnZhbHVlLCBuZXh0Mi52YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHppcDxUU291cmNlLCBUUmVzdWx0PihcbiAgICBsZWZ0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHJpZ2h0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGZuOiAobGVmdDogVFNvdXJjZSwgcmlnaHQ6IFRTb3VyY2UpID0+IFRSZXN1bHQgfCBQcm9taXNlPFRSZXN1bHQ+KTogQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IFppcEl0ZXJhYmxlPFRTb3VyY2UsIFRSZXN1bHQ+KGxlZnQsIHJpZ2h0LCBmbik7XG59XG4iXX0=
