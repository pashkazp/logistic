import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class OnErrorResumeNextAsyncIterable extends AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            for (let item of this._source) {
                let it = item[Symbol.asyncIterator]();
                while (1) {
                    let next;
                    try {
                        next = yield tslib_1.__await(it.next());
                    }
                    catch (e) {
                        break;
                    }
                    if (next.done) {
                        break;
                    }
                    yield next.value;
                }
            }
        });
    }
}
export function onErrorResumeNext(source, ...args) {
    return new OnErrorResumeNextAsyncIterable([source, ...args]);
}
export function onErrorResumeNextStatic(...source) {
    return new OnErrorResumeNextAsyncIterable(source);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvb25lcnJvcnJlc3VtZW5leHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRCxvQ0FBOEMsU0FBUSxjQUF1QjtJQUczRSxZQUFZLE1BQXdDO1FBQ2xELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFDeEIsQ0FBQztJQUVNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFDM0IsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztnQkFDdEMsT0FBTyxDQUFDLEVBQUUsQ0FBQztvQkFDVCxJQUFJLElBQUksQ0FBQztvQkFDVCxJQUFJLENBQUM7d0JBQ0gsSUFBSSxHQUFHLHNCQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQSxDQUFDO29CQUN6QixDQUFDO29CQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQ1gsS0FBSyxDQUFDO29CQUNSLENBQUM7b0JBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7d0JBQUMsS0FBSyxDQUFDO29CQUFDLENBQUM7b0JBQ3pCLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQztnQkFDbkIsQ0FBQztZQUNILENBQUM7UUFDSCxDQUFDO0tBQUE7Q0FDRjtBQUVELE1BQU0sNEJBQStCLE1BQXdCLEVBQUUsR0FBRyxJQUF3QjtJQUN4RixNQUFNLENBQUMsSUFBSSw4QkFBOEIsQ0FBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDbEUsQ0FBQztBQUVELE1BQU0sa0NBQXFDLEdBQUcsTUFBMEI7SUFDdEUsTUFBTSxDQUFDLElBQUksOEJBQThCLENBQUksTUFBTSxDQUFDLENBQUM7QUFDdkQsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL29uZXJyb3JyZXN1bWVuZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcblxuY2xhc3MgT25FcnJvclJlc3VtZU5leHRBc3luY0l0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICBwcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPEFzeW5jSXRlcmFibGU8VFNvdXJjZT4+O1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogSXRlcmFibGU8QXN5bmNJdGVyYWJsZTxUU291cmNlPj4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBsZXQgaXQgPSBpdGVtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgbGV0IG5leHQ7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbmV4dCA9IGF3YWl0IGl0Lm5leHQoKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG5leHQuZG9uZSkgeyBicmVhazsgfVxuICAgICAgICB5aWVsZCBuZXh0LnZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25FcnJvclJlc3VtZU5leHQ8VD4oc291cmNlOiBBc3luY0l0ZXJhYmxlPFQ+LCAuLi5hcmdzOiBBc3luY0l0ZXJhYmxlPFQ+W10pOiBBc3luY0l0ZXJhYmxlWDxUPiB7XG4gIHJldHVybiBuZXcgT25FcnJvclJlc3VtZU5leHRBc3luY0l0ZXJhYmxlPFQ+KFtzb3VyY2UsIC4uLmFyZ3NdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uRXJyb3JSZXN1bWVOZXh0U3RhdGljPFQ+KC4uLnNvdXJjZTogQXN5bmNJdGVyYWJsZTxUPltdKTogQXN5bmNJdGVyYWJsZVg8VD4ge1xuICByZXR1cm4gbmV3IE9uRXJyb3JSZXN1bWVOZXh0QXN5bmNJdGVyYWJsZTxUPihzb3VyY2UpO1xufVxuIl19
