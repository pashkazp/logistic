import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class TapAsyncIterable extends AsyncIterableX {
    constructor(source, observer) {
        super();
        this._source = source;
        this._observer = observer;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            const it = this._source[Symbol.asyncIterator]();
            while (1) {
                let next;
                try {
                    next = yield tslib_1.__await(it.next());
                }
                catch (e) {
                    if (this._observer.error) {
                        yield tslib_1.__await(this._observer.error(e));
                    }
                    throw e;
                }
                if (next.done) {
                    if (this._observer.complete) {
                        yield tslib_1.__await(this._observer.complete());
                    }
                    break;
                }
                if (this._observer.next) {
                    yield tslib_1.__await(this._observer.next(next.value));
                }
                yield next.value;
            }
        });
    }
}
export function tap(source, observer) {
    return new TapAsyncIterable(source, observer);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdGFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHbEQsc0JBQWdDLFNBQVEsY0FBdUI7SUFJN0QsWUFBWSxNQUE4QixFQUFFLFFBQXVDO1FBQ2pGLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVNLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQzs7WUFDM0IsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztZQUNoRCxPQUFPLENBQUMsRUFBRSxDQUFDO2dCQUNULElBQUksSUFBSSxDQUFDO2dCQUNULElBQUksQ0FBQztvQkFDSCxJQUFJLEdBQUcsc0JBQU0sRUFBRSxDQUFDLElBQUksRUFBRSxDQUFBLENBQUM7Z0JBQ3pCLENBQUM7Z0JBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDWCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7d0JBQUMsc0JBQU0sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztvQkFBQyxDQUFDO29CQUM1RCxNQUFNLENBQUMsQ0FBQztnQkFDVixDQUFDO2dCQUVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUNkLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxzQkFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFBLENBQUM7b0JBQUMsQ0FBQztvQkFDakUsS0FBSyxDQUFDO2dCQUNSLENBQUM7Z0JBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUFDLHNCQUFNLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFDO2dCQUFDLENBQUM7Z0JBQ25FLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNuQixDQUFDO1FBQ0gsQ0FBQztLQUFBO0NBQ0Y7QUFFRCxNQUFNLGNBQ0YsTUFBOEIsRUFDOUIsUUFBdUM7SUFDekMsTUFBTSxDQUFDLElBQUksZ0JBQWdCLENBQVUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3pELENBQUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS90YXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgUGFydGlhbEFzeW5jT2JzZXJ2ZXIgfSBmcm9tICcuLi9vYnNlcnZlcic7XG5cbmNsYXNzIFRhcEFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfb2JzZXJ2ZXI6IFBhcnRpYWxBc3luY09ic2VydmVyPFRTb3VyY2U+O1xuXG4gIGNvbnN0cnVjdG9yKHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPiwgb2JzZXJ2ZXI6IFBhcnRpYWxBc3luY09ic2VydmVyPFRTb3VyY2U+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fb2JzZXJ2ZXIgPSBvYnNlcnZlcjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGNvbnN0IGl0ID0gdGhpcy5fc291cmNlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIHdoaWxlICgxKSB7XG4gICAgICBsZXQgbmV4dDtcbiAgICAgIHRyeSB7XG4gICAgICAgIG5leHQgPSBhd2FpdCBpdC5uZXh0KCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmICh0aGlzLl9vYnNlcnZlci5lcnJvcikgeyBhd2FpdCB0aGlzLl9vYnNlcnZlci5lcnJvcihlKTsgfVxuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuXG4gICAgICBpZiAobmV4dC5kb25lKSB7XG4gICAgICAgIGlmICh0aGlzLl9vYnNlcnZlci5jb21wbGV0ZSkgeyBhd2FpdCB0aGlzLl9vYnNlcnZlci5jb21wbGV0ZSgpOyB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5fb2JzZXJ2ZXIubmV4dCkgeyBhd2FpdCB0aGlzLl9vYnNlcnZlci5uZXh0KG5leHQudmFsdWUpOyB9XG4gICAgICB5aWVsZCBuZXh0LnZhbHVlO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdGFwPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBvYnNlcnZlcjogUGFydGlhbEFzeW5jT2JzZXJ2ZXI8VFNvdXJjZT4pOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgVGFwQXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UsIG9ic2VydmVyKTtcbn1cbiJdfQ==
