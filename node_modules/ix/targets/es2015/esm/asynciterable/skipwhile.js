import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class SkipWhileAsyncIterable extends AsyncIterableX {
    constructor(source, predicate) {
        super();
        this._source = source;
        this._predicate = predicate;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            let yielding = false, i = 0;
            try {
                for (var _a = tslib_1.__asyncValues(this._source), _b; _b = yield tslib_1.__await(_a.next()), !_b.done;) {
                    let element = yield tslib_1.__await(_b.value);
                    if (!yielding && !(yield tslib_1.__await(this._predicate(element, i++)))) {
                        yielding = true;
                    }
                    if (yielding) {
                        yield element;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_b && !_b.done && (_c = _a.return)) yield tslib_1.__await(_c.call(_a));
                }
                finally { if (e_1) throw e_1.error; }
            }
            var e_1, _c;
        });
    }
}
export function skipWhile(source, predicate) {
    return new SkipWhileAsyncIterable(source, predicate);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvc2tpcHdoaWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFbEQsNEJBQXNDLFNBQVEsY0FBdUI7SUFJbkUsWUFDSSxNQUE4QixFQUM5QixTQUF3RTtRQUMxRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO0lBQzlCLENBQUM7SUFFTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7O1lBQzNCLElBQUksUUFBUSxHQUFHLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDOztnQkFDNUIsR0FBRyxDQUFDLENBQXNCLElBQUEsS0FBQSxzQkFBQSxJQUFJLENBQUMsT0FBTyxDQUFBLElBQUE7b0JBQTNCLElBQUksT0FBTyxrQ0FBQSxDQUFBO29CQUNwQixFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsc0JBQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7b0JBQUMsQ0FBQztvQkFDN0UsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt3QkFBQyxNQUFNLE9BQU8sQ0FBQztvQkFBQyxDQUFDO2lCQUNqQzs7Ozs7Ozs7OztRQUNILENBQUM7S0FBQTtDQUNGO0FBRUQsTUFBTSxvQkFDRixNQUE4QixFQUM5QixTQUF3RTtJQUMxRSxNQUFNLENBQUMsSUFBSSxzQkFBc0IsQ0FBVSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDaEUsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL3NraXB3aGlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5cbmNsYXNzIFNraXBXaGlsZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfcHJlZGljYXRlOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgcHJlZGljYXRlOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fcHJlZGljYXRlID0gcHJlZGljYXRlO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IHlpZWxkaW5nID0gZmFsc2UsIGkgPSAwO1xuICAgIGZvciBhd2FpdCAobGV0IGVsZW1lbnQgb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBpZiAoIXlpZWxkaW5nICYmICEoYXdhaXQgdGhpcy5fcHJlZGljYXRlKGVsZW1lbnQsIGkrKykpKSB7IHlpZWxkaW5nID0gdHJ1ZTsgfVxuICAgICAgaWYgKHlpZWxkaW5nKSB7IHlpZWxkIGVsZW1lbnQ7IH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNraXBXaGlsZTxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgcHJlZGljYXRlOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFNraXBXaGlsZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4oc291cmNlLCBwcmVkaWNhdGUpO1xufVxuIl19
