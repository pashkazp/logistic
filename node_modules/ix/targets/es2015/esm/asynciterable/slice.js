import * as tslib_1 from "tslib";
import { AsyncIterableX } from '../asynciterable';
class SliceAsyncIterable extends AsyncIterableX {
    constructor(source, begin, end) {
        super();
        this._source = source;
        this._begin = begin;
        this._end = end;
    }
    [Symbol.asyncIterator]() {
        return tslib_1.__asyncGenerator(this, arguments, function* _a() {
            let it = this._source[Symbol.asyncIterator](), begin = this._begin, next;
            while (begin > 0 && !(next = yield tslib_1.__await(it.next())).done) {
                begin--;
            }
            let end = this._end;
            if (end > 0) {
                while (!(next = yield tslib_1.__await(it.next())).done) {
                    yield next.value;
                    if (--end === 0) {
                        break;
                    }
                }
            }
        });
    }
}
export function slice(source, begin, end = Infinity) {
    return new SliceAsyncIterable(source, begin, end);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvc2xpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRCx3QkFBa0MsU0FBUSxjQUF1QjtJQUsvRCxZQUFZLE1BQThCLEVBQUUsS0FBYSxFQUFFLEdBQVc7UUFDcEUsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztJQUNsQixDQUFDO0lBRU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOztZQUMzQixJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQztZQUN6RSxPQUFPLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxzQkFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNuRCxLQUFLLEVBQUUsQ0FBQztZQUNWLENBQUM7WUFFRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3BCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNaLE9BQU8sQ0FBQyxDQUFDLElBQUksR0FBRyxzQkFBTSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO29CQUN0QyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUM7b0JBQ2pCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQUMsS0FBSyxDQUFDO29CQUFDLENBQUM7Z0JBQzdCLENBQUM7WUFDSCxDQUFDO1FBQ0gsQ0FBQztLQUFBO0NBQ0Y7QUFFRCxNQUFNLGdCQUNGLE1BQThCLEVBQzlCLEtBQWEsRUFDYixNQUFjLFFBQVE7SUFDeEIsTUFBTSxDQUFDLElBQUksa0JBQWtCLENBQVUsTUFBTSxFQUFFLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztBQUM3RCxDQUFDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvc2xpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuXG5jbGFzcyBTbGljZUFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfYmVnaW46IG51bWJlcjtcbiAgcHJpdmF0ZSBfZW5kOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LCBiZWdpbjogbnVtYmVyLCBlbmQ6IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2JlZ2luID0gYmVnaW47XG4gICAgdGhpcy5fZW5kID0gZW5kO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgbGV0IGl0ID0gdGhpcy5fc291cmNlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpLCBiZWdpbiA9IHRoaXMuX2JlZ2luLCBuZXh0O1xuICAgIHdoaWxlIChiZWdpbiA+IDAgJiYgIShuZXh0ID0gYXdhaXQgaXQubmV4dCgpKS5kb25lKSB7XG4gICAgICBiZWdpbi0tO1xuICAgIH1cblxuICAgIGxldCBlbmQgPSB0aGlzLl9lbmQ7XG4gICAgaWYgKGVuZCA+IDApIHtcbiAgICAgIHdoaWxlICghKG5leHQgPSBhd2FpdCBpdC5uZXh0KCkpLmRvbmUpIHtcbiAgICAgICAgeWllbGQgbmV4dC52YWx1ZTtcbiAgICAgICAgaWYgKC0tZW5kID09PSAwKSB7IGJyZWFrOyB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbGljZTxUU291cmNlPihcbiAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgYmVnaW46IG51bWJlcixcbiAgICBlbmQ6IG51bWJlciA9IEluZmluaXR5KTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IFNsaWNlQXN5bmNJdGVyYWJsZTxUU291cmNlPihzb3VyY2UsIGJlZ2luLCBlbmQpO1xufVxuIl19
