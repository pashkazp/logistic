import { bindCallback } from '../internal/bindcallback';
/**
 * Returns the value of the first element in the sequence that satisfies the provided testing function.
 * Otherwise undefined is returned.
 * @param {Iterable<T>} source Source sequence.
 * @param {function(value: T, index: number): boolean} predicate Function to execute for every item in the sequence.
 * @param {Object} [thisArg] Object to use as this when executing callback.
 * @return {T | undefined} The value of the first element in the sequence that satisfies the provided testing function.
 * Otherwise undefined is returned.
 */
export function find(source, predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError();
    }
    const f = bindCallback(predicate, thisArg, 2);
    let i = 0;
    for (let item of source) {
        if (f(item, i++)) {
            return item;
        }
    }
    return undefined;
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2ZpbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXhEOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxlQUNGLE1BQW1CLEVBQ25CLFNBQStDLEVBQy9DLE9BQWE7SUFDZixFQUFFLENBQUMsQ0FBQyxPQUFPLFNBQVMsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQUMsTUFBTSxJQUFJLFNBQVMsRUFBRSxDQUFDO0lBQUMsQ0FBQztJQUMvRCxNQUFNLENBQUMsR0FBRyxZQUFZLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFVixHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakIsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNkLENBQUM7SUFDSCxDQUFDO0lBQ0QsTUFBTSxDQUFDLFNBQVMsQ0FBQztBQUNuQixDQUFDIiwiZmlsZSI6Iml0ZXJhYmxlL2ZpbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiaW5kQ2FsbGJhY2sgfSBmcm9tICcuLi9pbnRlcm5hbC9iaW5kY2FsbGJhY2snO1xuXG4vKipcbiAqIFJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSBmaXJzdCBlbGVtZW50IGluIHRoZSBzZXF1ZW5jZSB0aGF0IHNhdGlzZmllcyB0aGUgcHJvdmlkZWQgdGVzdGluZyBmdW5jdGlvbi5cbiAqIE90aGVyd2lzZSB1bmRlZmluZWQgaXMgcmV0dXJuZWQuXG4gKiBAcGFyYW0ge0l0ZXJhYmxlPFQ+fSBzb3VyY2UgU291cmNlIHNlcXVlbmNlLlxuICogQHBhcmFtIHtmdW5jdGlvbih2YWx1ZTogVCwgaW5kZXg6IG51bWJlcik6IGJvb2xlYW59IHByZWRpY2F0ZSBGdW5jdGlvbiB0byBleGVjdXRlIGZvciBldmVyeSBpdGVtIGluIHRoZSBzZXF1ZW5jZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbdGhpc0FyZ10gT2JqZWN0IHRvIHVzZSBhcyB0aGlzIHdoZW4gZXhlY3V0aW5nIGNhbGxiYWNrLlxuICogQHJldHVybiB7VCB8IHVuZGVmaW5lZH0gVGhlIHZhbHVlIG9mIHRoZSBmaXJzdCBlbGVtZW50IGluIHRoZSBzZXF1ZW5jZSB0aGF0IHNhdGlzZmllcyB0aGUgcHJvdmlkZWQgdGVzdGluZyBmdW5jdGlvbi5cbiAqIE90aGVyd2lzZSB1bmRlZmluZWQgaXMgcmV0dXJuZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaW5kPFQ+KFxuICAgIHNvdXJjZTogSXRlcmFibGU8VD4sXG4gICAgcHJlZGljYXRlOiAodmFsdWU6IFQsIGluZGV4OiBudW1iZXIpID0+IGJvb2xlYW4sXG4gICAgdGhpc0FyZz86IGFueSk6IFQgfCB1bmRlZmluZWQge1xuICBpZiAodHlwZW9mIHByZWRpY2F0ZSAhPT0gJ2Z1bmN0aW9uJykgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCk7IH1cbiAgY29uc3QgZiA9IGJpbmRDYWxsYmFjayhwcmVkaWNhdGUsIHRoaXNBcmcsIDIpO1xuICBsZXQgaSA9IDA7XG5cbiAgZm9yIChsZXQgaXRlbSBvZiBzb3VyY2UpIHtcbiAgICBpZiAoZihpdGVtLCBpKyspKSB7XG4gICAgICByZXR1cm4gaXRlbTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdfQ==
