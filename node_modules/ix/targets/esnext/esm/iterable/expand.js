import { IterableX } from '../iterable';
class ExpandIterable extends IterableX {
    constructor(source, fn) {
        super();
        this._source = source;
        this._fn = fn;
    }
    *[Symbol.iterator]() {
        let q = [this._source];
        while (q.length > 0) {
            let src = q.shift();
            for (let item of src) {
                q.push(this._fn(item));
                yield item;
            }
        }
    }
}
/**
 * Expands the sequence by recursively applying a selector function.
 * @param {Iterable<T>} source Source sequence.
 * @param {function(value: T): Iterable<T>} selector Selector function to retrieve the next sequence to expand
 * @return {Iterable<T>} Sequence with results from the recursive expansion of the source sequence.
 */
export function expand(source, selector) {
    return new ExpandIterable(source, selector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2V4cGFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDLG9CQUE4QixTQUFRLFNBQWtCO0lBSXRELFlBQVksTUFBeUIsRUFBRSxFQUF5QztRQUM5RSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNoQixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUN2QixPQUFPLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDcEIsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ3BCLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLEdBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUN2QixNQUFNLElBQUksQ0FBQztZQUNiLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQ7Ozs7O0dBS0c7QUFDSCxNQUFNLGlCQUNGLE1BQXlCLEVBQ3pCLFFBQStDO0lBQ2pELE1BQU0sQ0FBQyxJQUFJLGNBQWMsQ0FBVSxNQUFNLEVBQUMsUUFBUSxDQUFDLENBQUM7QUFDdEQsQ0FBQyIsImZpbGUiOiJpdGVyYWJsZS9leHBhbmQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5cbmNsYXNzIEV4cGFuZEl0ZXJhYmxlPFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfZm46ICh2YWx1ZTogVFNvdXJjZSkgPT4gSXRlcmFibGU8VFNvdXJjZT47XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiwgZm46ICh2YWx1ZTogVFNvdXJjZSkgPT4gSXRlcmFibGU8VFNvdXJjZT4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9mbiA9IGZuO1xuICB9XG5cbiAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgIGxldCBxID0gW3RoaXMuX3NvdXJjZV07XG4gICAgd2hpbGUgKHEubGVuZ3RoID4gMCkge1xuICAgICAgbGV0IHNyYyA9IHEuc2hpZnQoKTtcbiAgICAgIGZvciAobGV0IGl0ZW0gb2Ygc3JjISkge1xuICAgICAgICBxLnB1c2godGhpcy5fZm4oaXRlbSkpO1xuICAgICAgICB5aWVsZCBpdGVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEV4cGFuZHMgdGhlIHNlcXVlbmNlIGJ5IHJlY3Vyc2l2ZWx5IGFwcGx5aW5nIGEgc2VsZWN0b3IgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge0l0ZXJhYmxlPFQ+fSBzb3VyY2UgU291cmNlIHNlcXVlbmNlLlxuICogQHBhcmFtIHtmdW5jdGlvbih2YWx1ZTogVCk6IEl0ZXJhYmxlPFQ+fSBzZWxlY3RvciBTZWxlY3RvciBmdW5jdGlvbiB0byByZXRyaWV2ZSB0aGUgbmV4dCBzZXF1ZW5jZSB0byBleHBhbmRcbiAqIEByZXR1cm4ge0l0ZXJhYmxlPFQ+fSBTZXF1ZW5jZSB3aXRoIHJlc3VsdHMgZnJvbSB0aGUgcmVjdXJzaXZlIGV4cGFuc2lvbiBvZiB0aGUgc291cmNlIHNlcXVlbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXhwYW5kPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgc2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gSXRlcmFibGU8VFNvdXJjZT4pOiBJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IEV4cGFuZEl0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSxzZWxlY3Rvcik7XG59XG4iXX0=
