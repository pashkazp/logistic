import { IterableX } from '../iterable';
class TakeLastIterable extends IterableX {
    constructor(source, count) {
        super();
        this._source = source;
        this._count = count;
    }
    *[Symbol.iterator]() {
        if (this._count === 0) {
            return;
        }
        let q = [];
        for (let item of this._source) {
            if (q.length >= this._count) {
                q.shift();
            }
            q.push(item);
        }
        while (q.length > 0) {
            yield q.shift();
        }
    }
}
export function takeLast(source, count) {
    return new TakeLastIterable(source, count);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL3Rha2VsYXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFeEMsc0JBQWdDLFNBQVEsU0FBa0I7SUFJeEQsWUFBWSxNQUF5QixFQUFFLEtBQWE7UUFDbEQsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN0QixDQUFDO0lBRUQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDaEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQUMsTUFBTSxDQUFDO1FBQUMsQ0FBQztRQUVsQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDWCxHQUFHLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUM5QixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO2dCQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUFDLENBQUM7WUFDM0MsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNmLENBQUM7UUFFRCxPQUFPLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDcEIsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFHLENBQUM7UUFDbkIsQ0FBQztJQUNILENBQUM7Q0FDRjtBQUVELE1BQU0sbUJBQTRCLE1BQXlCLEVBQUUsS0FBYTtJQUN4RSxNQUFNLENBQUMsSUFBSSxnQkFBZ0IsQ0FBVSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDdEQsQ0FBQyIsImZpbGUiOiJpdGVyYWJsZS90YWtlbGFzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcblxuY2xhc3MgVGFrZUxhc3RJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEl0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHByaXZhdGUgX3NvdXJjZTogSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2NvdW50OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3Ioc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiwgY291bnQ6IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2NvdW50ID0gY291bnQ7XG4gIH1cblxuICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgaWYgKHRoaXMuX2NvdW50ID09PSAwKSB7IHJldHVybjsgfVxuXG4gICAgbGV0IHEgPSBbXTtcbiAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgaWYgKHEubGVuZ3RoID49IHRoaXMuX2NvdW50KSB7IHEuc2hpZnQoKTsgfVxuICAgICAgcS5wdXNoKGl0ZW0pO1xuICAgIH1cblxuICAgIHdoaWxlIChxLmxlbmd0aCA+IDApIHtcbiAgICAgIHlpZWxkIHEuc2hpZnQoKSE7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0YWtlTGFzdDxUU291cmNlPihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+LCBjb3VudDogbnVtYmVyKTogSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcmV0dXJuIG5ldyBUYWtlTGFzdEl0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSwgY291bnQpO1xufVxuIl19
