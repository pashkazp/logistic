import { IterableX } from '../iterable';
/**
 * Concatenates the input sequences.
 * @param {Iterable<Iterable<TSource>>} source Source sequences.
 * @return {Iterable<TSource>} Sequence with the elements of the source sequences concatenated.
 */
export declare function concatAll<TSource>(source: Iterable<Iterable<TSource>>): IterableX<TSource>;
/**
 * Concatenates the input sequences.
 * @param {Iterable<TSource>} source The first source sequence.
 * @param {...Iterable<TSource>} args The rest of the source sequences.
 * @return {Iterable<TSource>} Sequence with the elements of the source sequences concatenated.
 */
export declare function concat<T>(source: Iterable<T>, ...args: Iterable<T>[]): IterableX<T>;
/**
 * Concatenates the input sequences.
 * @param {...Iterable<TSource>} args Source sequences.
 * @return {Iterable<TSource>} Sequence with the elements of the source sequences concatenated.
 */
export declare function concatStatic<T>(...args: Iterable<T>[]): IterableX<T>;
