import { AsyncIterableX } from '../asynciterable';
import { createGrouping } from './_grouping';
import { empty } from './empty';
import { from } from './from';
import { identity } from '../internal/identity';
class GroupJoinAsyncIterable extends AsyncIterableX {
    constructor(outer, inner, outerSelector, innerSelector, resultSelector) {
        super();
        this._outer = outer;
        this._inner = inner;
        this._outerSelector = outerSelector;
        this._innerSelector = innerSelector;
        this._resultSelector = resultSelector;
    }
    async *[Symbol.asyncIterator]() {
        const map = await createGrouping(this._inner, this._innerSelector, identity);
        for await (let outerElement of this._outer) {
            const outerKey = await this._outerSelector(outerElement);
            const innerElements = map.has(outerKey) ? map.get(outerKey) : empty();
            yield await this._resultSelector(outerElement, from(innerElements));
        }
    }
}
export function groupJoin(outer, inner, outerSelector, innerSelector, resultSelector) {
    return new GroupJoinAsyncIterable(outer, inner, outerSelector, innerSelector, resultSelector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZ3JvdXBqb2luLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDaEMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM5QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFaEQsNEJBQTRELFNBQVEsY0FBdUI7SUFPekYsWUFDSSxLQUE0QixFQUM1QixLQUE0QixFQUM1QixhQUFzRCxFQUN0RCxhQUFzRCxFQUN0RCxjQUEyRjtRQUM3RixLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxjQUFjLEdBQUcsYUFBYSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxjQUFjLEdBQUcsYUFBYSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxlQUFlLEdBQUcsY0FBYyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO1FBQzNCLE1BQU0sR0FBRyxHQUFHLE1BQU0sY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM3RSxHQUFHLENBQUMsS0FBSyxDQUFMLENBQU8sSUFBSSxZQUFZLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDM0MsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3pELE1BQU0sYUFBYSxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQXFCLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxFQUFVLENBQUM7WUFDaEcsTUFBTSxNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLENBQUM7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLG9CQUNGLEtBQTRCLEVBQzVCLEtBQTRCLEVBQzVCLGFBQXNELEVBQ3RELGFBQXNELEVBQ3RELGNBQTJGO0lBQzdGLE1BQU0sQ0FBQyxJQUFJLHNCQUFzQixDQUMvQixLQUFLLEVBQ0wsS0FBSyxFQUNMLGFBQWEsRUFDYixhQUFhLEVBQ2IsY0FBYyxDQUFDLENBQUM7QUFDcEIsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL2dyb3Vwam9pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5pbXBvcnQgeyBjcmVhdGVHcm91cGluZyB9IGZyb20gJy4vX2dyb3VwaW5nJztcbmltcG9ydCB7IGVtcHR5IH0gZnJvbSAnLi9lbXB0eSc7XG5pbXBvcnQgeyBmcm9tIH0gZnJvbSAnLi9mcm9tJztcbmltcG9ydCB7IGlkZW50aXR5IH0gZnJvbSAnLi4vaW50ZXJuYWwvaWRlbnRpdHknO1xuXG5jbGFzcyBHcm91cEpvaW5Bc3luY0l0ZXJhYmxlPFRPdXRlciwgVElubmVyLCBUS2V5LCBUUmVzdWx0PiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcHJpdmF0ZSBfb3V0ZXI6IEFzeW5jSXRlcmFibGU8VE91dGVyPjtcbiAgcHJpdmF0ZSBfaW5uZXI6IEFzeW5jSXRlcmFibGU8VElubmVyPjtcbiAgcHJpdmF0ZSBfb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+O1xuICBwcml2YXRlIF9pbm5lclNlbGVjdG9yOiAodmFsdWU6IFRJbm5lcikgPT4gVEtleSB8IFByb21pc2U8VEtleT47XG4gIHByaXZhdGUgX3Jlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IEFzeW5jSXRlcmFibGU8VElubmVyPikgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBvdXRlcjogQXN5bmNJdGVyYWJsZTxUT3V0ZXI+LFxuICAgICAgaW5uZXI6IEFzeW5jSXRlcmFibGU8VElubmVyPixcbiAgICAgIG91dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgICAgIGlubmVyU2VsZWN0b3I6ICh2YWx1ZTogVElubmVyKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgICAgIHJlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IEFzeW5jSXRlcmFibGU8VElubmVyPikgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX291dGVyID0gb3V0ZXI7XG4gICAgdGhpcy5faW5uZXIgPSBpbm5lcjtcbiAgICB0aGlzLl9vdXRlclNlbGVjdG9yID0gb3V0ZXJTZWxlY3RvcjtcbiAgICB0aGlzLl9pbm5lclNlbGVjdG9yID0gaW5uZXJTZWxlY3RvcjtcbiAgICB0aGlzLl9yZXN1bHRTZWxlY3RvciA9IHJlc3VsdFNlbGVjdG9yO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgbWFwID0gYXdhaXQgY3JlYXRlR3JvdXBpbmcodGhpcy5faW5uZXIsIHRoaXMuX2lubmVyU2VsZWN0b3IsIGlkZW50aXR5KTtcbiAgICBmb3IgYXdhaXQgKGxldCBvdXRlckVsZW1lbnQgb2YgdGhpcy5fb3V0ZXIpIHtcbiAgICAgIGNvbnN0IG91dGVyS2V5ID0gYXdhaXQgdGhpcy5fb3V0ZXJTZWxlY3RvcihvdXRlckVsZW1lbnQpO1xuICAgICAgY29uc3QgaW5uZXJFbGVtZW50cyA9IG1hcC5oYXMob3V0ZXJLZXkpID8gPEl0ZXJhYmxlPFRJbm5lcj4+bWFwLmdldChvdXRlcktleSkgOiBlbXB0eTxUSW5uZXI+KCk7XG4gICAgICB5aWVsZCBhd2FpdCB0aGlzLl9yZXN1bHRTZWxlY3RvcihvdXRlckVsZW1lbnQsIGZyb20oaW5uZXJFbGVtZW50cykpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBKb2luPFRPdXRlciwgVElubmVyLCBUS2V5LCBUUmVzdWx0PihcbiAgICBvdXRlcjogQXN5bmNJdGVyYWJsZTxUT3V0ZXI+LFxuICAgIGlubmVyOiBBc3luY0l0ZXJhYmxlPFRJbm5lcj4sXG4gICAgb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+LFxuICAgIGlubmVyU2VsZWN0b3I6ICh2YWx1ZTogVElubmVyKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgICByZXN1bHRTZWxlY3RvcjogKG91dGVyOiBUT3V0ZXIsIGlubmVyOiBBc3luY0l0ZXJhYmxlPFRJbm5lcj4pID0+IFRSZXN1bHQgfCBQcm9taXNlPFRSZXN1bHQ+KTogQXN5bmNJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IEdyb3VwSm9pbkFzeW5jSXRlcmFibGU8VE91dGVyLCBUSW5uZXIsIFRLZXksIFRSZXN1bHQ+KFxuICAgIG91dGVyLFxuICAgIGlubmVyLFxuICAgIG91dGVyU2VsZWN0b3IsXG4gICAgaW5uZXJTZWxlY3RvcixcbiAgICByZXN1bHRTZWxlY3Rvcik7XG59XG4iXX0=
