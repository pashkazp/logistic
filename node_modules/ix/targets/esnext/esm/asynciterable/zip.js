import { AsyncIterableX } from '../asynciterable';
class ZipIterable extends AsyncIterableX {
    constructor(left, right, fn) {
        super();
        this._left = left;
        this._right = right;
        this._fn = fn;
    }
    async *[Symbol.asyncIterator]() {
        const it1 = this._left[Symbol.asyncIterator]();
        const it2 = this._right[Symbol.asyncIterator]();
        while (1) {
            const [next1, next2] = await Promise.all([it1.next(), it2.next()]);
            if (!next1.done && !next2.done) {
                yield await this._fn(next1.value, next2.value);
            }
            else {
                break;
            }
        }
    }
}
export function zip(left, right, fn) {
    return new ZipIterable(left, right, fn);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvemlwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRCxpQkFBb0MsU0FBUSxjQUF1QjtJQUtqRSxZQUNJLElBQTRCLEVBQzVCLEtBQTZCLEVBQzdCLEVBQWlFO1FBQ25FLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDM0IsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQztRQUMvQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDO1FBQ2hELE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDVCxNQUFNLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ25FLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixNQUFNLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNqRCxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sS0FBSyxDQUFDO1lBQ1IsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLGNBQ0YsSUFBNEIsRUFDNUIsS0FBNkIsRUFDN0IsRUFBaUU7SUFDbkUsTUFBTSxDQUFDLElBQUksV0FBVyxDQUFtQixJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzVELENBQUMiLCJmaWxlIjoiYXN5bmNpdGVyYWJsZS96aXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuXG5jbGFzcyBaaXBJdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0PiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcHJpdmF0ZSBfbGVmdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfcmlnaHQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2ZuOiAobGVmdDogVFNvdXJjZSwgcmlnaHQ6IFRTb3VyY2UpID0+IFRSZXN1bHQgfCBQcm9taXNlPFRSZXN1bHQ+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgbGVmdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICAgIHJpZ2h0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgZm46IChsZWZ0OiBUU291cmNlLCByaWdodDogVFNvdXJjZSkgPT4gVFJlc3VsdCB8IFByb21pc2U8VFJlc3VsdD4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX2xlZnQgPSBsZWZ0O1xuICAgIHRoaXMuX3JpZ2h0ID0gcmlnaHQ7XG4gICAgdGhpcy5fZm4gPSBmbjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGNvbnN0IGl0MSA9IHRoaXMuX2xlZnRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgY29uc3QgaXQyID0gdGhpcy5fcmlnaHRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgd2hpbGUgKDEpIHtcbiAgICAgIGNvbnN0IFtuZXh0MSwgbmV4dDJdID0gYXdhaXQgUHJvbWlzZS5hbGwoW2l0MS5uZXh0KCksIGl0Mi5uZXh0KCldKTtcbiAgICAgIGlmICghbmV4dDEuZG9uZSAmJiAhbmV4dDIuZG9uZSkge1xuICAgICAgICB5aWVsZCBhd2FpdCB0aGlzLl9mbihuZXh0MS52YWx1ZSwgbmV4dDIudmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB6aXA8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgbGVmdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICByaWdodDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBmbjogKGxlZnQ6IFRTb3VyY2UsIHJpZ2h0OiBUU291cmNlKSA9PiBUUmVzdWx0IHwgUHJvbWlzZTxUUmVzdWx0Pik6IEFzeW5jSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBaaXBJdGVyYWJsZTxUU291cmNlLCBUUmVzdWx0PihsZWZ0LCByaWdodCwgZm4pO1xufVxuIl19
