import { AsyncIterableX } from '../asynciterable';
import { identityAsync } from '../internal/identity';
import { createGrouping } from './_grouping';
export class GroupedAsyncIterable extends AsyncIterableX {
    constructor(key, source) {
        super();
        this.key = key;
        this._source = source;
    }
    async *[Symbol.asyncIterator]() {
        for (let item of this._source) {
            yield item;
        }
    }
}
export class GroupByAsyncIterable extends AsyncIterableX {
    constructor(source, keySelector, elementSelector) {
        super();
        this._source = source;
        this._keySelector = keySelector;
        this._elementSelector = elementSelector;
    }
    async *[Symbol.asyncIterator]() {
        const map = await createGrouping(this._source, this._keySelector, this._elementSelector);
        for (let [key, values] of map) {
            yield new GroupedAsyncIterable(key, values);
        }
    }
}
export function groupBy(source, keySelector, elementSelector = identityAsync) {
    return new GroupByAsyncIterable(source, keySelector, elementSelector);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZ3JvdXBieS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFN0MsTUFBTSwyQkFBMEMsU0FBUSxjQUFzQjtJQUk1RSxZQUFZLEdBQVMsRUFBRSxNQUF3QjtRQUM3QyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFDeEIsQ0FBQztJQUVELEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDM0IsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDOUIsTUFBTSxJQUFJLENBQUM7UUFDYixDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSwyQkFBbUQsU0FBUSxjQUFrRDtJQUtqSCxZQUNJLE1BQThCLEVBQzlCLFdBQXFELEVBQ3JELGVBQTZEO1FBQy9ELEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDaEMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztJQUMxQyxDQUFDO0lBRUQsS0FBSyxFQUFFLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQztRQUMzQixNQUFNLEdBQUcsR0FBRyxNQUFNLGNBQWMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDekYsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzlCLE1BQU0sSUFBSSxvQkFBb0IsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDOUMsQ0FBQztJQUNILENBQUM7Q0FDRjtBQVNELE1BQU0sa0JBQ0YsTUFBOEIsRUFDOUIsV0FBcUQsRUFDckQsa0JBQWdFLGFBQWE7SUFFL0UsTUFBTSxDQUFDLElBQUksb0JBQW9CLENBQXdCLE1BQU0sRUFBRSxXQUFXLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDL0YsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL2dyb3VwYnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgaWRlbnRpdHlBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2lkZW50aXR5JztcbmltcG9ydCB7IGNyZWF0ZUdyb3VwaW5nIH0gZnJvbSAnLi9fZ3JvdXBpbmcnO1xuXG5leHBvcnQgY2xhc3MgR3JvdXBlZEFzeW5jSXRlcmFibGU8VEtleSwgVFZhbHVlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRWYWx1ZT4ge1xuICBwdWJsaWMgcmVhZG9ubHkga2V5OiBUS2V5O1xuICBwcml2YXRlIF9zb3VyY2U6IEl0ZXJhYmxlPFRWYWx1ZT47XG5cbiAgY29uc3RydWN0b3Ioa2V5OiBUS2V5LCBzb3VyY2U6IEl0ZXJhYmxlPFRWYWx1ZT4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMua2V5ID0ga2V5O1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGZvciAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICB5aWVsZCBpdGVtO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgR3JvdXBCeUFzeW5jSXRlcmFibGU8VFNvdXJjZSwgVEtleSwgVFZhbHVlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPEdyb3VwZWRBc3luY0l0ZXJhYmxlPFRLZXksIFRWYWx1ZT4+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9rZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PjtcbiAgcHJpdmF0ZSBfZWxlbWVudFNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRWYWx1ZSB8IFByb21pc2U8VFZhbHVlPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+LFxuICAgICAgZWxlbWVudFNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRWYWx1ZSB8IFByb21pc2U8VFZhbHVlPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2tleVNlbGVjdG9yID0ga2V5U2VsZWN0b3I7XG4gICAgdGhpcy5fZWxlbWVudFNlbGVjdG9yID0gZWxlbWVudFNlbGVjdG9yO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgY29uc3QgbWFwID0gYXdhaXQgY3JlYXRlR3JvdXBpbmcodGhpcy5fc291cmNlLCB0aGlzLl9rZXlTZWxlY3RvciwgdGhpcy5fZWxlbWVudFNlbGVjdG9yKTtcbiAgICBmb3IgKGxldCBba2V5LCB2YWx1ZXNdIG9mIG1hcCkge1xuICAgICAgeWllbGQgbmV3IEdyb3VwZWRBc3luY0l0ZXJhYmxlKGtleSwgdmFsdWVzKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwQnk8VFNvdXJjZSwgVEtleT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+KTogQXN5bmNJdGVyYWJsZVg8R3JvdXBlZEFzeW5jSXRlcmFibGU8VEtleSwgVFNvdXJjZT4+O1xuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwQnk8VFNvdXJjZSwgVEtleSwgVFZhbHVlPihcbiAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgZWxlbWVudFNlbGVjdG9yPzogKHZhbHVlOiBUU291cmNlKSA9PiBUVmFsdWUgfCBQcm9taXNlPFRWYWx1ZT4pOiBBc3luY0l0ZXJhYmxlWDxHcm91cGVkQXN5bmNJdGVyYWJsZTxUS2V5LCBUVmFsdWU+PjtcbmV4cG9ydCBmdW5jdGlvbiBncm91cEJ5PFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+LFxuICAgIGVsZW1lbnRTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUVmFsdWUgfCBQcm9taXNlPFRWYWx1ZT4gPSBpZGVudGl0eUFzeW5jKTpcbiAgICBBc3luY0l0ZXJhYmxlWDxHcm91cGVkQXN5bmNJdGVyYWJsZTxUS2V5LCBUVmFsdWU+PiB7XG4gIHJldHVybiBuZXcgR3JvdXBCeUFzeW5jSXRlcmFibGU8VFNvdXJjZSwgVEtleSwgVFZhbHVlPihzb3VyY2UsIGtleVNlbGVjdG9yLCBlbGVtZW50U2VsZWN0b3IpO1xufVxuIl19
