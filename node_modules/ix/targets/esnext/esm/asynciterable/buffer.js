import { AsyncIterableX } from '../asynciterable';
class BufferAsyncIterable extends AsyncIterableX {
    constructor(source, count, skip) {
        super();
        this._source = source;
        this._count = count;
        this._skip = skip;
    }
    async *[Symbol.asyncIterator]() {
        let buffers = [], i = 0;
        for await (let item of this._source) {
            if (i % this._skip === 0) {
                buffers.push([]);
            }
            for (let buffer of buffers) {
                buffer.push(item);
            }
            if (buffers.length > 0 && buffers[0].length === this._count) {
                yield buffers.shift();
            }
            i++;
        }
        while (buffers.length > 0) {
            yield buffers.shift();
        }
    }
}
export function buffer(source, count, skip) {
    if (skip == null) {
        skip = count;
    }
    return new BufferAsyncIterable(source, count, skip);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvYnVmZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVsRCx5QkFBbUMsU0FBUSxjQUF5QjtJQUtsRSxZQUNJLE1BQThCLEVBQzlCLEtBQWEsRUFDYixJQUFZO1FBQ1osS0FBSyxFQUFFLENBQUM7UUFDVixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUNwQixDQUFDO0lBRUQsS0FBSyxFQUFFLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQztRQUUzQixJQUFJLE9BQU8sR0FBZ0IsRUFBRSxFQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsR0FBRyxDQUFDLEtBQUssQ0FBTCxDQUFPLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDbkIsQ0FBQztZQUVELEdBQUcsQ0FBQyxDQUFDLElBQUksTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDcEIsQ0FBQztZQUVELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQzVELE1BQU0sT0FBTyxDQUFDLEtBQUssRUFBRyxDQUFDO1lBQ3pCLENBQUM7WUFFRCxDQUFDLEVBQUUsQ0FBQztRQUNOLENBQUM7UUFFRCxPQUFPLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDMUIsTUFBTSxPQUFPLENBQUMsS0FBSyxFQUFHLENBQUM7UUFDekIsQ0FBQztJQUNILENBQUM7Q0FDRjtBQUVELE1BQU0saUJBQ0YsTUFBOEIsRUFDOUIsS0FBYSxFQUNiLElBQWE7SUFDZixFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztRQUFDLElBQUksR0FBRyxLQUFLLENBQUM7SUFBQyxDQUFDO0lBQ25DLE1BQU0sQ0FBQyxJQUFJLG1CQUFtQixDQUFVLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDL0QsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL2J1ZmZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5cbmNsYXNzIEJ1ZmZlckFzeW5jSXRlcmFibGU8VFNvdXJjZT4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUU291cmNlW10+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9jb3VudDogbnVtYmVyO1xuICBwcml2YXRlIF9za2lwOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBzb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBjb3VudDogbnVtYmVyLFxuICAgICAgc2tpcDogbnVtYmVyKSB7XG4gICAgICBzdXBlcigpO1xuICAgIHRoaXMuX3NvdXJjZSA9IHNvdXJjZTtcbiAgICB0aGlzLl9jb3VudCA9IGNvdW50O1xuICAgIHRoaXMuX3NraXAgPSBza2lwO1xuICB9XG5cbiAgYXN5bmMgKltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG5cbiAgICBsZXQgYnVmZmVyczogVFNvdXJjZVtdW10gPSBbXSwgIGkgPSAwO1xuICAgIGZvciBhd2FpdCAobGV0IGl0ZW0gb2YgdGhpcy5fc291cmNlKSB7XG4gICAgICBpZiAoaSAlIHRoaXMuX3NraXAgPT09IDApIHtcbiAgICAgICAgYnVmZmVycy5wdXNoKFtdKTtcbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgYnVmZmVyIG9mIGJ1ZmZlcnMpIHtcbiAgICAgICAgYnVmZmVyLnB1c2goaXRlbSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChidWZmZXJzLmxlbmd0aCA+IDAgJiYgYnVmZmVyc1swXS5sZW5ndGggPT09IHRoaXMuX2NvdW50KSB7XG4gICAgICAgIHlpZWxkIGJ1ZmZlcnMuc2hpZnQoKSE7XG4gICAgICB9XG5cbiAgICAgIGkrKztcbiAgICB9XG5cbiAgICB3aGlsZSAoYnVmZmVycy5sZW5ndGggPiAwKSB7XG4gICAgICB5aWVsZCBidWZmZXJzLnNoaWZ0KCkhO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVmZmVyPFRTb3VyY2U+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBjb3VudDogbnVtYmVyLFxuICAgIHNraXA/OiBudW1iZXIpOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlW10+IHtcbiAgaWYgKHNraXAgPT0gbnVsbCkgeyBza2lwID0gY291bnQ7IH1cbiAgcmV0dXJuIG5ldyBCdWZmZXJBc3luY0l0ZXJhYmxlPFRTb3VyY2U+KHNvdXJjZSwgY291bnQsIHNraXApO1xufVxuIl19
