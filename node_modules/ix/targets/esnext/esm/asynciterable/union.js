import { AsyncIterableX } from '../asynciterable';
import { arrayIndexOfAsync } from '../internal/arrayindexof';
import { comparerAsync } from '../internal/comparer';
class UnionAsyncIterable extends AsyncIterableX {
    constructor(left, right, comparer) {
        super();
        this._left = left;
        this._right = right;
        this._comparer = comparer;
    }
    async *[Symbol.asyncIterator]() {
        let map = [];
        for await (let lItem of this._left) {
            if (await arrayIndexOfAsync(map, lItem, this._comparer) === -1) {
                map.push(lItem);
                yield lItem;
            }
        }
        for await (let rItem of this._right) {
            if (await arrayIndexOfAsync(map, rItem, this._comparer) === -1) {
                map.push(rItem);
                yield rItem;
            }
        }
    }
}
export function union(left, right, comparer = comparerAsync) {
    return new UnionAsyncIterable(left, right, comparer);
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvdW5pb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVyRCx3QkFBa0MsU0FBUSxjQUF1QjtJQUsvRCxZQUNJLElBQTRCLEVBQzVCLEtBQTZCLEVBQzdCLFFBQWdFO1FBQ2xFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVELEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDM0IsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2IsR0FBRyxDQUFDLEtBQUssQ0FBTCxDQUFPLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ25DLEVBQUUsQ0FBQyxDQUFDLE1BQU0saUJBQWlCLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvRCxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNoQixNQUFNLEtBQUssQ0FBQztZQUNkLENBQUM7UUFDSCxDQUFDO1FBRUQsR0FBRyxDQUFDLEtBQUssQ0FBTCxDQUFPLElBQUksS0FBSyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLEVBQUUsQ0FBQyxDQUFDLE1BQU0saUJBQWlCLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvRCxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNoQixNQUFNLEtBQUssQ0FBQztZQUNkLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxnQkFDRixJQUE0QixFQUM1QixLQUE2QixFQUM3QixXQUFtRSxhQUFhO0lBQ2xGLE1BQU0sQ0FBQyxJQUFJLGtCQUFrQixDQUFVLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDaEUsQ0FBQyIsImZpbGUiOiJhc3luY2l0ZXJhYmxlL3VuaW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IGFycmF5SW5kZXhPZkFzeW5jIH0gZnJvbSAnLi4vaW50ZXJuYWwvYXJyYXlpbmRleG9mJztcbmltcG9ydCB7IGNvbXBhcmVyQXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9jb21wYXJlcic7XG5cbmNsYXNzIFVuaW9uQXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfbGVmdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfcmlnaHQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX2NvbXBhcmVyOiAoeDogVFNvdXJjZSwgeTogVFNvdXJjZSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBsZWZ0OiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgICAgcmlnaHQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgICBjb21wYXJlcjogKHg6IFRTb3VyY2UsIHk6IFRTb3VyY2UpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9sZWZ0ID0gbGVmdDtcbiAgICB0aGlzLl9yaWdodCA9IHJpZ2h0O1xuICAgIHRoaXMuX2NvbXBhcmVyID0gY29tcGFyZXI7XG4gIH1cblxuICBhc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBsZXQgbWFwID0gW107XG4gICAgZm9yIGF3YWl0IChsZXQgbEl0ZW0gb2YgdGhpcy5fbGVmdCkge1xuICAgICAgaWYgKGF3YWl0IGFycmF5SW5kZXhPZkFzeW5jKG1hcCwgbEl0ZW0sIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgbWFwLnB1c2gobEl0ZW0pO1xuICAgICAgICB5aWVsZCBsSXRlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgYXdhaXQgKGxldCBySXRlbSBvZiB0aGlzLl9yaWdodCkge1xuICAgICAgaWYgKGF3YWl0IGFycmF5SW5kZXhPZkFzeW5jKG1hcCwgckl0ZW0sIHRoaXMuX2NvbXBhcmVyKSA9PT0gLTEpIHtcbiAgICAgICAgbWFwLnB1c2gockl0ZW0pO1xuICAgICAgICB5aWVsZCBySXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuaW9uPFRTb3VyY2U+KFxuICAgIGxlZnQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgcmlnaHQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiA9IGNvbXBhcmVyQXN5bmMpOiBBc3luY0l0ZXJhYmxlWDxUU291cmNlPiB7XG4gIHJldHVybiBuZXcgVW5pb25Bc3luY0l0ZXJhYmxlPFRTb3VyY2U+KGxlZnQsIHJpZ2h0LCBjb21wYXJlcik7XG59XG4iXX0=
