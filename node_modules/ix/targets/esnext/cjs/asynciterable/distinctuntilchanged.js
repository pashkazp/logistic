Object.defineProperty(exports, "__esModule", { value: true });
const asynciterable_1 = require("../asynciterable");
const identity_1 = require("../internal/identity");
const comparer_1 = require("../internal/comparer");
class DistinctUntilChangedAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(source, keySelector, comparer) {
        super();
        this._source = source;
        this._keySelector = keySelector;
        this._comparer = comparer;
    }
    async *[Symbol.asyncIterator]() {
        let currentKey, hasCurrentKey = false;
        for await (let item of this._source) {
            let key = await this._keySelector(item);
            let comparerEquals = false;
            if (hasCurrentKey) {
                comparerEquals = await this._comparer(currentKey, key);
            }
            if (!hasCurrentKey || !comparerEquals) {
                hasCurrentKey = true;
                currentKey = key;
                yield item;
            }
        }
    }
}
function distinctUntilChanged(source, keySelector = identity_1.identityAsync, comparer = comparer_1.comparerAsync) {
    return new DistinctUntilChangedAsyncIterable(source, keySelector, comparer);
}
exports.distinctUntilChanged = distinctUntilChanged;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvZGlzdGluY3R1bnRpbGNoYW5nZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG9EQUFrRDtBQUNsRCxtREFBcUQ7QUFDckQsbURBQXFEO0FBRXJELHVDQUF1RCxTQUFRLDhCQUF1QjtJQUtwRixZQUNJLE1BQThCLEVBQzlCLFdBQXFELEVBQ3JELFFBQW1FO1FBQ3JFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDaEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7SUFDNUIsQ0FBQztJQUVELEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDM0IsSUFBSSxVQUE0QixFQUFFLGFBQWEsR0FBRyxLQUFLLENBQUM7UUFDeEQsR0FBRyxDQUFDLEtBQUssQ0FBTCxDQUFPLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLElBQUksR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN4QyxJQUFJLGNBQWMsR0FBRyxLQUFLLENBQUM7WUFDM0IsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztnQkFBQyxjQUFjLEdBQUcsTUFBTSxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUFDLENBQUM7WUFDL0UsRUFBRSxDQUFDLENBQUMsQ0FBQyxhQUFhLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxhQUFhLEdBQUcsSUFBSSxDQUFDO2dCQUNyQixVQUFVLEdBQUcsR0FBRyxDQUFDO2dCQUNqQixNQUFNLElBQUksQ0FBQztZQUNiLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQsOEJBQ0ksTUFBOEIsRUFDOUIsY0FBd0Qsd0JBQWEsRUFDckUsV0FBc0Usd0JBQWE7SUFDckYsTUFBTSxDQUFDLElBQUksaUNBQWlDLENBQWdCLE1BQU0sRUFBRSxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDN0YsQ0FBQztBQUxELG9EQUtDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvZGlzdGluY3R1bnRpbGNoYW5nZWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0l0ZXJhYmxlWCB9IGZyb20gJy4uL2FzeW5jaXRlcmFibGUnO1xuaW1wb3J0IHsgaWRlbnRpdHlBc3luYyB9IGZyb20gJy4uL2ludGVybmFsL2lkZW50aXR5JztcbmltcG9ydCB7IGNvbXBhcmVyQXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9jb21wYXJlcic7XG5cbmNsYXNzIERpc3RpbmN0VW50aWxDaGFuZ2VkQXN5bmNJdGVyYWJsZTxUU291cmNlLCBUS2V5PiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+O1xuICBwcml2YXRlIF9rZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PjtcbiAgcHJpdmF0ZSBfY29tcGFyZXI6ICh4OiBUS2V5LCB5OiBUS2V5KSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICAgIGtleVNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRLZXkgfCBQcm9taXNlPFRLZXk+LFxuICAgICAgY29tcGFyZXI6IChmaXJzdDogVEtleSwgc2Vjb25kOiBUS2V5KSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc291cmNlID0gc291cmNlO1xuICAgIHRoaXMuX2tleVNlbGVjdG9yID0ga2V5U2VsZWN0b3I7XG4gICAgdGhpcy5fY29tcGFyZXIgPSBjb21wYXJlcjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGxldCBjdXJyZW50S2V5OiBUS2V5IHwgdW5kZWZpbmVkLCBoYXNDdXJyZW50S2V5ID0gZmFsc2U7XG4gICAgZm9yIGF3YWl0IChsZXQgaXRlbSBvZiB0aGlzLl9zb3VyY2UpIHtcbiAgICAgIGxldCBrZXkgPSBhd2FpdCB0aGlzLl9rZXlTZWxlY3RvcihpdGVtKTtcbiAgICAgIGxldCBjb21wYXJlckVxdWFscyA9IGZhbHNlO1xuICAgICAgaWYgKGhhc0N1cnJlbnRLZXkpIHsgY29tcGFyZXJFcXVhbHMgPSBhd2FpdCB0aGlzLl9jb21wYXJlcihjdXJyZW50S2V5ISwga2V5KTsgfVxuICAgICAgaWYgKCFoYXNDdXJyZW50S2V5IHx8ICFjb21wYXJlckVxdWFscykge1xuICAgICAgICBoYXNDdXJyZW50S2V5ID0gdHJ1ZTtcbiAgICAgICAgY3VycmVudEtleSA9IGtleTtcbiAgICAgICAgeWllbGQgaXRlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpc3RpbmN0VW50aWxDaGFuZ2VkPFRTb3VyY2UsIFRLZXk+KFxuICAgIHNvdXJjZTogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PiA9IGlkZW50aXR5QXN5bmMsXG4gICAgY29tcGFyZXI6IChmaXJzdDogVEtleSwgc2Vjb25kOiBUS2V5KSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiA9IGNvbXBhcmVyQXN5bmMpOiAgQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IERpc3RpbmN0VW50aWxDaGFuZ2VkQXN5bmNJdGVyYWJsZTxUU291cmNlLCBUS2V5Pihzb3VyY2UsIGtleVNlbGVjdG9yLCBjb21wYXJlcik7XG59XG4iXX0=
