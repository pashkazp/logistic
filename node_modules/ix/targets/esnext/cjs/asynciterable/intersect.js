Object.defineProperty(exports, "__esModule", { value: true });
const asynciterable_1 = require("../asynciterable");
const arrayindexof_1 = require("../internal/arrayindexof");
const comparer_1 = require("../internal/comparer");
async function arrayRemove(array, item, comparer) {
    let idx = await arrayindexof_1.arrayIndexOfAsync(array, item, comparer);
    if (idx === -1) {
        return false;
    }
    array.splice(idx, 1);
    return true;
}
class IntersectAsyncIterable extends asynciterable_1.AsyncIterableX {
    constructor(first, second, comparer) {
        super();
        this._first = first;
        this._second = second;
        this._comparer = comparer;
    }
    async *[Symbol.asyncIterator]() {
        let map = [];
        for await (let secondItem of this._second) {
            map.push(secondItem);
        }
        for await (let firstItem of this._first) {
            if (await arrayRemove(map, firstItem, this._comparer)) {
                yield firstItem;
            }
        }
    }
}
function intersect(first, second, comparer = comparer_1.comparerAsync) {
    return new IntersectAsyncIterable(first, second, comparer);
}
exports.intersect = intersect;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzeW5jaXRlcmFibGUvaW50ZXJzZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxvREFBa0Q7QUFDbEQsMkRBQTZEO0FBQzdELG1EQUFxRDtBQUVyRCxLQUFLLHNCQUNELEtBQVUsRUFBRSxJQUFPLEVBQ25CLFFBQW9EO0lBQ3RELElBQUksR0FBRyxHQUFHLE1BQU0sZ0NBQWlCLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN6RCxFQUFFLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUFDLENBQUM7SUFDakMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDckIsTUFBTSxDQUFDLElBQUksQ0FBQztBQUNkLENBQUM7QUFFRCw0QkFBc0MsU0FBUSw4QkFBdUI7SUFLbkUsWUFDRSxLQUE2QixFQUM3QixNQUE4QixFQUM5QixRQUFnRTtRQUNoRSxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzVCLENBQUM7SUFFRCxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO1FBQzNCLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztRQUNiLEdBQUcsQ0FBQyxLQUFLLENBQUwsQ0FBTyxJQUFJLFVBQVUsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMxQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3ZCLENBQUM7UUFFRCxHQUFHLENBQUMsS0FBSyxDQUFMLENBQU8sSUFBSSxTQUFTLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDeEMsRUFBRSxDQUFDLENBQUMsTUFBTSxXQUFXLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0RCxNQUFNLFNBQVMsQ0FBQztZQUNsQixDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7Q0FDRjtBQUVELG1CQUNJLEtBQTZCLEVBQzdCLE1BQThCLEVBQzlCLFdBQW1FLHdCQUFhO0lBQ2xGLE1BQU0sQ0FBQyxJQUFJLHNCQUFzQixDQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDdEUsQ0FBQztBQUxELDhCQUtDIiwiZmlsZSI6ImFzeW5jaXRlcmFibGUvaW50ZXJzZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNJdGVyYWJsZVggfSBmcm9tICcuLi9hc3luY2l0ZXJhYmxlJztcbmltcG9ydCB7IGFycmF5SW5kZXhPZkFzeW5jIH0gZnJvbSAnLi4vaW50ZXJuYWwvYXJyYXlpbmRleG9mJztcbmltcG9ydCB7IGNvbXBhcmVyQXN5bmMgfSBmcm9tICcuLi9pbnRlcm5hbC9jb21wYXJlcic7XG5cbmFzeW5jIGZ1bmN0aW9uIGFycmF5UmVtb3ZlPFQ+KFxuICAgIGFycmF5OiBUW10sIGl0ZW06IFQsXG4gICAgY29tcGFyZXI6ICh4OiBULCB5OiBUKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPik6IFByb21pc2U8Ym9vbGVhbj4ge1xuICBsZXQgaWR4ID0gYXdhaXQgYXJyYXlJbmRleE9mQXN5bmMoYXJyYXksIGl0ZW0sIGNvbXBhcmVyKTtcbiAgaWYgKGlkeCA9PT0gLTEpIHsgcmV0dXJuIGZhbHNlOyB9XG4gIGFycmF5LnNwbGljZShpZHgsIDEpO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuY2xhc3MgSW50ZXJzZWN0QXN5bmNJdGVyYWJsZTxUU291cmNlPiBleHRlbmRzIEFzeW5jSXRlcmFibGVYPFRTb3VyY2U+IHtcbiAgcHJpdmF0ZSBfZmlyc3Q6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG4gIHByaXZhdGUgX3NlY29uZDogQXN5bmNJdGVyYWJsZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBmaXJzdDogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBzZWNvbmQ6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgY29tcGFyZXI6ICh4OiBUU291cmNlLCB5OiBUU291cmNlKSA9PiBib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fZmlyc3QgPSBmaXJzdDtcbiAgICB0aGlzLl9zZWNvbmQgPSBzZWNvbmQ7XG4gICAgdGhpcy5fY29tcGFyZXIgPSBjb21wYXJlcjtcbiAgfVxuXG4gIGFzeW5jICpbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgIGxldCBtYXAgPSBbXTtcbiAgICBmb3IgYXdhaXQgKGxldCBzZWNvbmRJdGVtIG9mIHRoaXMuX3NlY29uZCkge1xuICAgICAgbWFwLnB1c2goc2Vjb25kSXRlbSk7XG4gICAgfVxuXG4gICAgZm9yIGF3YWl0IChsZXQgZmlyc3RJdGVtIG9mIHRoaXMuX2ZpcnN0KSB7XG4gICAgICBpZiAoYXdhaXQgYXJyYXlSZW1vdmUobWFwLCBmaXJzdEl0ZW0sIHRoaXMuX2NvbXBhcmVyKSkge1xuICAgICAgICB5aWVsZCBmaXJzdEl0ZW07XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnNlY3Q8VFNvdXJjZT4oXG4gICAgZmlyc3Q6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAgc2Vjb25kOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIGNvbXBhcmVyOiAoeDogVFNvdXJjZSwgeTogVFNvdXJjZSkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4gPSBjb21wYXJlckFzeW5jKTogQXN5bmNJdGVyYWJsZVg8VFNvdXJjZT4ge1xuICByZXR1cm4gbmV3IEludGVyc2VjdEFzeW5jSXRlcmFibGU8VFNvdXJjZT4oZmlyc3QsIHNlY29uZCwgY29tcGFyZXIpO1xufVxuIl19
