Object.defineProperty(exports, "__esModule", { value: true });
const iterable_1 = require("../iterable");
const bindcallback_1 = require("../internal/bindcallback");
const identity_1 = require("../internal/identity");
const tolength_1 = require("../internal/tolength");
const isiterable_1 = require("../internal/isiterable");
class FromIterable extends iterable_1.IterableX {
    constructor(source, fn) {
        super();
        this._source = source;
        this._fn = fn;
    }
    *[Symbol.iterator]() {
        const iterable = isiterable_1.isIterable(this._source);
        let i = 0;
        if (iterable) {
            for (let item of this._source) {
                yield this._fn(item, i++);
            }
        }
        else {
            let length = tolength_1.toLength(this._source.length);
            while (i < length) {
                let val = this._source[i];
                yield this._fn(val, i++);
            }
        }
    }
}
function from(source, fn = identity_1.identity, thisArg) {
    return new FromIterable(source, bindcallback_1.bindCallback(fn, thisArg, 2));
}
exports.from = from;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2Zyb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDBDQUF3QztBQUN4QywyREFBd0Q7QUFDeEQsbURBQWdEO0FBQ2hELG1EQUFnRDtBQUNoRCx1REFBb0Q7QUFFcEQsa0JBQStDLFNBQVEsb0JBQWtCO0lBSXZFLFlBQVksTUFBOEMsRUFBRSxFQUE4QztRQUN4RyxLQUFLLEVBQUUsQ0FBQztRQUNSLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQztRQUNoQixNQUFNLFFBQVEsR0FBRyx1QkFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDVixFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2IsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLElBQXVCLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUNqRCxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDNUIsQ0FBQztRQUNILENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksTUFBTSxHQUFHLG1CQUFRLENBQXNCLElBQUksQ0FBQyxPQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDakUsT0FBTyxDQUFDLEdBQUcsTUFBTSxFQUFFLENBQUM7Z0JBQ2xCLElBQUksR0FBRyxHQUF3QixJQUFJLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNoRCxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDM0IsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxjQUNJLE1BQThDLEVBQzlDLEtBQWlELG1CQUFRLEVBQ3pELE9BQWE7SUFDZixNQUFNLENBQUMsSUFBSSxZQUFZLENBQW1CLE1BQU0sRUFBRSwyQkFBWSxDQUFDLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRixDQUFDO0FBTEQsb0JBS0MiLCJmaWxlIjoiaXRlcmFibGUvZnJvbS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlWCB9IGZyb20gJy4uL2l0ZXJhYmxlJztcbmltcG9ydCB7IGJpbmRDYWxsYmFjayB9IGZyb20gJy4uL2ludGVybmFsL2JpbmRjYWxsYmFjayc7XG5pbXBvcnQgeyBpZGVudGl0eSB9IGZyb20gJy4uL2ludGVybmFsL2lkZW50aXR5JztcbmltcG9ydCB7IHRvTGVuZ3RoIH0gZnJvbSAnLi4vaW50ZXJuYWwvdG9sZW5ndGgnO1xuaW1wb3J0IHsgaXNJdGVyYWJsZSB9IGZyb20gJy4uL2ludGVybmFsL2lzaXRlcmFibGUnO1xuXG5jbGFzcyBGcm9tSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdCA9IFRTb3VyY2U+IGV4dGVuZHMgSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcHJpdmF0ZSBfc291cmNlOiBJdGVyYWJsZTxUU291cmNlPiB8IEFycmF5TGlrZTxUU291cmNlPjtcbiAgcHJpdmF0ZSBfZm46ICh2YWx1ZTogVFNvdXJjZSwgaW5kZXg6IG51bWJlcikgPT4gVFJlc3VsdDtcblxuICBjb25zdHJ1Y3Rvcihzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+IHwgQXJyYXlMaWtlPFRTb3VyY2U+LCBmbjogKHZhbHVlOiBUU291cmNlLCBpbmRleDogbnVtYmVyKSA9PiBUUmVzdWx0KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fZm4gPSBmbjtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCBpdGVyYWJsZSA9IGlzSXRlcmFibGUodGhpcy5fc291cmNlKTtcbiAgICBsZXQgaSA9IDA7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICBmb3IgKGxldCBpdGVtIG9mIDxJdGVyYWJsZTxUU291cmNlPj50aGlzLl9zb3VyY2UpIHtcbiAgICAgICAgeWllbGQgdGhpcy5fZm4oaXRlbSwgaSsrKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IGxlbmd0aCA9IHRvTGVuZ3RoKCg8QXJyYXlMaWtlPFRTb3VyY2U+PnRoaXMuX3NvdXJjZSkubGVuZ3RoKTtcbiAgICAgIHdoaWxlIChpIDwgbGVuZ3RoKSB7XG4gICAgICAgIGxldCB2YWwgPSAoPEFycmF5TGlrZTxUU291cmNlPj50aGlzLl9zb3VyY2UpW2ldO1xuICAgICAgICB5aWVsZCB0aGlzLl9mbih2YWwsIGkrKyk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmcm9tPFRTb3VyY2UsIFRSZXN1bHQgPSBUU291cmNlPihcbiAgICBzb3VyY2U6IEl0ZXJhYmxlPFRTb3VyY2U+IHwgQXJyYXlMaWtlPFRTb3VyY2U+LFxuICAgIGZuOiAodmFsdWU6IFRTb3VyY2UsIGluZGV4OiBudW1iZXIpID0+IFRSZXN1bHQgPSBpZGVudGl0eSxcbiAgICB0aGlzQXJnPzogYW55KTogSXRlcmFibGVYPFRSZXN1bHQ+IHtcbiAgcmV0dXJuIG5ldyBGcm9tSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdD4oc291cmNlLCBiaW5kQ2FsbGJhY2soZm4sIHRoaXNBcmcsIDIpKTtcbn1cbiJdfQ==
