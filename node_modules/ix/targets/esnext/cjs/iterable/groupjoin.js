Object.defineProperty(exports, "__esModule", { value: true });
const iterable_1 = require("../iterable");
const _grouping_1 = require("./_grouping");
const empty_1 = require("./empty");
const identity_1 = require("../internal/identity");
class GroupJoinIterable extends iterable_1.IterableX {
    constructor(outer, inner, outerSelector, innerSelector, resultSelector) {
        super();
        this._outer = outer;
        this._inner = inner;
        this._outerSelector = outerSelector;
        this._innerSelector = innerSelector;
        this._resultSelector = resultSelector;
    }
    *[Symbol.iterator]() {
        const map = _grouping_1.createGrouping(this._inner, this._innerSelector, identity_1.identity);
        for (let outerElement of this._outer) {
            const outerKey = this._outerSelector(outerElement);
            const innerElements = map.has(outerKey) ? map.get(outerKey) : empty_1.empty();
            yield this._resultSelector(outerElement, innerElements);
        }
    }
}
function groupJoin(outer, inner, outerSelector, innerSelector, resultSelector) {
    return new GroupJoinIterable(outer, inner, outerSelector, innerSelector, resultSelector);
}
exports.groupJoin = groupJoin;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIml0ZXJhYmxlL2dyb3Vwam9pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsMENBQXdDO0FBQ3hDLDJDQUE2QztBQUM3QyxtQ0FBZ0M7QUFDaEMsbURBQWdEO0FBRWhELHVCQUF1RCxTQUFRLG9CQUFrQjtJQU8vRSxZQUNJLEtBQXVCLEVBQ3ZCLEtBQXVCLEVBQ3ZCLGFBQXNDLEVBQ3RDLGFBQXNDLEVBQ3RDLGNBQW1FO1FBQ3JFLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDcEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDcEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7SUFDeEMsQ0FBQztJQUVELENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2hCLE1BQU0sR0FBRyxHQUFHLDBCQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFLG1CQUFRLENBQUMsQ0FBQztRQUN2RSxHQUFHLENBQUMsQ0FBQyxJQUFJLFlBQVksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNyQyxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ25ELE1BQU0sYUFBYSxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQXFCLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsYUFBSyxFQUFVLENBQUM7WUFDaEcsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsQ0FBQztRQUMxRCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBRUQsbUJBQ0ksS0FBdUIsRUFDdkIsS0FBdUIsRUFDdkIsYUFBc0MsRUFDdEMsYUFBc0MsRUFDdEMsY0FBbUU7SUFDckUsTUFBTSxDQUFDLElBQUksaUJBQWlCLENBQzFCLEtBQUssRUFDTCxLQUFLLEVBQ0wsYUFBYSxFQUNiLGFBQWEsRUFDYixjQUFjLENBQUMsQ0FBQztBQUNwQixDQUFDO0FBWkQsOEJBWUMiLCJmaWxlIjoiaXRlcmFibGUvZ3JvdXBqb2luLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuaW1wb3J0IHsgY3JlYXRlR3JvdXBpbmcgfSBmcm9tICcuL19ncm91cGluZyc7XG5pbXBvcnQgeyBlbXB0eSB9IGZyb20gJy4vZW1wdHknO1xuaW1wb3J0IHsgaWRlbnRpdHkgfSBmcm9tICcuLi9pbnRlcm5hbC9pZGVudGl0eSc7XG5cbmNsYXNzIEdyb3VwSm9pbkl0ZXJhYmxlPFRPdXRlciwgVElubmVyLCBUS2V5LCBUUmVzdWx0PiBleHRlbmRzIEl0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHByaXZhdGUgX291dGVyOiBJdGVyYWJsZTxUT3V0ZXI+O1xuICBwcml2YXRlIF9pbm5lcjogSXRlcmFibGU8VElubmVyPjtcbiAgcHJpdmF0ZSBfb3V0ZXJTZWxlY3RvcjogKHZhbHVlOiBUT3V0ZXIpID0+IFRLZXk7XG4gIHByaXZhdGUgX2lubmVyU2VsZWN0b3I6ICh2YWx1ZTogVElubmVyKSA9PiBUS2V5O1xuICBwcml2YXRlIF9yZXN1bHRTZWxlY3RvcjogKG91dGVyOiBUT3V0ZXIsIGlubmVyOiBJdGVyYWJsZTxUSW5uZXI+KSA9PiBUUmVzdWx0O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgICAgb3V0ZXI6IEl0ZXJhYmxlPFRPdXRlcj4sXG4gICAgICBpbm5lcjogSXRlcmFibGU8VElubmVyPixcbiAgICAgIG91dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5LFxuICAgICAgaW5uZXJTZWxlY3RvcjogKHZhbHVlOiBUSW5uZXIpID0+IFRLZXksXG4gICAgICByZXN1bHRTZWxlY3RvcjogKG91dGVyOiBUT3V0ZXIsIGlubmVyOiBJdGVyYWJsZTxUSW5uZXI+KSA9PiBUUmVzdWx0KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9vdXRlciA9IG91dGVyO1xuICAgIHRoaXMuX2lubmVyID0gaW5uZXI7XG4gICAgdGhpcy5fb3V0ZXJTZWxlY3RvciA9IG91dGVyU2VsZWN0b3I7XG4gICAgdGhpcy5faW5uZXJTZWxlY3RvciA9IGlubmVyU2VsZWN0b3I7XG4gICAgdGhpcy5fcmVzdWx0U2VsZWN0b3IgPSByZXN1bHRTZWxlY3RvcjtcbiAgfVxuXG4gICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBjb25zdCBtYXAgPSBjcmVhdGVHcm91cGluZyh0aGlzLl9pbm5lciwgdGhpcy5faW5uZXJTZWxlY3RvciwgaWRlbnRpdHkpO1xuICAgIGZvciAobGV0IG91dGVyRWxlbWVudCBvZiB0aGlzLl9vdXRlcikge1xuICAgICAgY29uc3Qgb3V0ZXJLZXkgPSB0aGlzLl9vdXRlclNlbGVjdG9yKG91dGVyRWxlbWVudCk7XG4gICAgICBjb25zdCBpbm5lckVsZW1lbnRzID0gbWFwLmhhcyhvdXRlcktleSkgPyA8SXRlcmFibGU8VElubmVyPj5tYXAuZ2V0KG91dGVyS2V5KSA6IGVtcHR5PFRJbm5lcj4oKTtcbiAgICAgIHlpZWxkIHRoaXMuX3Jlc3VsdFNlbGVjdG9yKG91dGVyRWxlbWVudCwgaW5uZXJFbGVtZW50cyk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBncm91cEpvaW48VE91dGVyLCBUSW5uZXIsIFRLZXksIFRSZXN1bHQ+KFxuICAgIG91dGVyOiBJdGVyYWJsZTxUT3V0ZXI+LFxuICAgIGlubmVyOiBJdGVyYWJsZTxUSW5uZXI+LFxuICAgIG91dGVyU2VsZWN0b3I6ICh2YWx1ZTogVE91dGVyKSA9PiBUS2V5LFxuICAgIGlubmVyU2VsZWN0b3I6ICh2YWx1ZTogVElubmVyKSA9PiBUS2V5LFxuICAgIHJlc3VsdFNlbGVjdG9yOiAob3V0ZXI6IFRPdXRlciwgaW5uZXI6IEl0ZXJhYmxlPFRJbm5lcj4pID0+IFRSZXN1bHQpOiBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbmV3IEdyb3VwSm9pbkl0ZXJhYmxlPFRPdXRlciwgVElubmVyLCBUS2V5LCBUUmVzdWx0PihcbiAgICBvdXRlcixcbiAgICBpbm5lcixcbiAgICBvdXRlclNlbGVjdG9yLFxuICAgIGlubmVyU2VsZWN0b3IsXG4gICAgcmVzdWx0U2VsZWN0b3IpO1xufVxuIl19
