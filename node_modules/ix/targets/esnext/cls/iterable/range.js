goog.module('targets.esnext.cls.iterable.range'); exports = {}; var module = {id: 'targets/esnext/cls/iterable/range.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var iterable_1 = goog.require('targets.esnext.cls.iterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
class RangeIterable extends iterable_1.IterableX {
    /**
     * @param {number} start
     * @param {number} count
     */
    constructor(start, count) {
        super();
        this._start = start;
        this._count = count;
    }
    /**
     * @return {!IterableIterator<number>}
     */
    *[Symbol.iterator]() {
        for (let /** @type {number} */ current = this._start, /** @type {number} */ end = this._start + this._count; current < end; current++) {
            yield current;
        }
    }
}
function RangeIterable_tsickle_Closure_declarations() {
    /** @type {number} */
    RangeIterable.prototype._start;
    /** @type {number} */
    RangeIterable.prototype._count;
}
/**
 * @param {number} start
 * @param {number} count
 * @return {!tsickle_forward_declare_1.IterableX<number>}
 */
function range(start, count) {
    return new RangeIterable(start, count);
}
exports.range = range;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9yYW5nZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsMENBTGtCO0FBTWxCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO0FBSjlGLG1CQUFtQixTQUFRLG9CQUFrQjtJQVE3Qzs7O09BR0c7SUFQRCxZQUFZLEtBQWEsRUFBQyxLQUFjO1FBU3RDLEtBUkssRUFBRSxDQUFDO1FBU1IsSUFSSSxDQUFDLE1BQU0sR0FBRSxLQUFNLENBQUM7UUFTcEIsSUFSSSxDQUFDLE1BQU0sR0FBRSxLQUFNLENBQUM7SUFTdEIsQ0FBQztJQUNIOztPQUVHO0lBVEQsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFXaEIsR0FBRyxDQUFDLENBVkMsSUFBQSxxQkFBRyxDQUFBLE9BQVEsR0FBRSxJQUFLLENBQUMsTUFBTSxFQUFBLHFCQUFDLENBQUEsR0FBSSxHQUFFLElBQUssQ0FBQyxNQUFNLEdBQUUsSUFBSyxDQUFDLE1BQU0sRUFBQyxPQUFRLEdBQUUsR0FBSSxFQUFDLE9BQVEsRUFBRSxFQUFDLENBQUU7WUFXMUYsTUFWSyxPQUFRLENBQUM7UUFXaEIsQ0FWQztJQVdILENBVkM7Q0FDSDtBQVlBO0lBQ0EscUJBQXFCO0lBQ3JCLGFBQWEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO0lBQy9CLHFCQUFxQjtJQUNyQixhQUFhLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztBQUMvQixDQUFDO0FBRUQ7Ozs7R0FJRztBQXJCSCxlQUFzQixLQUFhLEVBQUMsS0FBYztJQXVCaEQsTUF0Qk0sQ0FBQSxJQUFJLGFBQWMsQ0FBQyxLQUFLLEVBQUMsS0FBTSxDQUFDLENBQUM7QUF1QnpDLENBdEJDO0FBRkQsc0JBRUMiLCJmaWxlIjoicmFuZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlc30gY2hlY2tlZCBieSB0c2NcbiAqL1xuXG5pbXBvcnQgeyBJdGVyYWJsZVggfSBmcm9tICcuLi9pdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZVwiKTtcbmNsYXNzIFJhbmdlSXRlcmFibGUgZXh0ZW5kcyBJdGVyYWJsZVg8bnVtYmVyPiB7XG5wcml2YXRlIF9zdGFydDogbnVtYmVyO1xucHJpdmF0ZSBfY291bnQ6IG51bWJlcjtcbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0XG4gKiBAcGFyYW0ge251bWJlcn0gY291bnRcbiAqL1xuY29uc3RydWN0b3Ioc3RhcnQ6IG51bWJlciwgY291bnQ6IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fc3RhcnQgPSBzdGFydDtcbiAgICB0aGlzLl9jb3VudCA9IGNvdW50O1xuICB9XG4vKipcbiAqIEByZXR1cm4geyFJdGVyYWJsZUl0ZXJhdG9yPG51bWJlcj59XG4gKi9cbipbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICBmb3IgKGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gY3VycmVudCA9IHRoaXMuX3N0YXJ0LCAvKiogQHR5cGUge251bWJlcn0gKi8gZW5kID0gdGhpcy5fc3RhcnQgKyB0aGlzLl9jb3VudDsgY3VycmVudCA8IGVuZDsgY3VycmVudCsrKSB7XG4gICAgICB5aWVsZCBjdXJyZW50O1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBSYW5nZUl0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUge251bWJlcn0gKi9cblJhbmdlSXRlcmFibGUucHJvdG90eXBlLl9zdGFydDtcbi8qKiBAdHlwZSB7bnVtYmVyfSAqL1xuUmFuZ2VJdGVyYWJsZS5wcm90b3R5cGUuX2NvdW50O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydFxuICogQHBhcmFtIHtudW1iZXJ9IGNvdW50XG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5JdGVyYWJsZVg8bnVtYmVyPn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJhbmdlKHN0YXJ0OiBudW1iZXIsIGNvdW50OiBudW1iZXIpOiBJdGVyYWJsZVg8bnVtYmVyPiB7XG4gIHJldHVybiBuZXcgUmFuZ2VJdGVyYWJsZShzdGFydCwgY291bnQpO1xufVxuIl19