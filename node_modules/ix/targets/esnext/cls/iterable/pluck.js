goog.module('targets.esnext.cls.iterable.pluck'); exports = {}; var module = {id: 'targets/esnext/cls/iterable/pluck.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable");
var map_1 = goog.require('targets.esnext.cls.iterable.map');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.iterable.map");
/**
 * @param {!Array<string>} props
 * @param {number} length
 * @return {function(?): ?}
 */
function plucker(props, length) {
    const /** @type {function(?): ?} */ mapper = (x) => {
        let /** @type {?} */ currentProp = x;
        for (let /** @type {number} */ i = 0; i < length; i++) {
            const /** @type {?} */ p = currentProp[props[i]];
            if (typeof p !== 'undefined') {
                currentProp = p;
            }
            else {
                return undefined;
            }
        }
        return currentProp;
    };
    return mapper;
}
/**
 * @template TSource, TResult
 * @param {!Iterable<TSource>} source
 * @param {...string} args
 * @return {!tsickle_forward_declare_1.IterableX<TResult>}
 */
function pluck(source, ...args) {
    return map_1.map(source, /** @type {function(TSource): TResult} */ ((plucker(args, args.length))));
}
exports.pluck = pluck;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9pdGVyYWJsZS9wbHVjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBR0gsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLHNDQUFzQyxDQUFDLENBTnJEO0FBT3hDLCtCQU5ZO0FBT1osTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLDBDQUEwQyxDQUFDLENBQUM7QUFDbEc7Ozs7R0FJRztBQVZILGlCQUFpQixLQUFlLEVBQUMsTUFBZTtJQVk5QyxNQUFNLDZCQVhELENBQUEsTUFBTyxHQUFFLENBQUUsQ0FBTTtRQVlwQixJQUFJLGdCQVhELENBQUEsV0FBWSxHQUFFLENBQUUsQ0FBQztRQVlwQixHQUFHLENBQUMsQ0FYQyxJQUFBLHFCQUFHLENBQUEsQ0FBRSxHQUFFLENBQUUsRUFBQyxDQUFFLEdBQUUsTUFBTyxFQUFDLENBQUUsRUFBRSxFQUFDLENBQUU7WUFZaEMsTUFBTSxnQkFYRCxDQUFBLENBQUUsR0FBRSxXQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFZaEMsRUFBRSxDQUFDLENBWEMsT0FBTSxDQUFFLEtBQUksV0FBWSxDQUFDLENBQUEsQ0FBRTtnQkFZN0IsV0FYVyxHQUFFLENBQUUsQ0FBQztZQVlsQixDQVhDO1lBQUEsSUFBSyxDQUFBLENBQUU7Z0JBWU4sTUFYTSxDQUFBLFNBQVUsQ0FBQztZQVluQixDQVhDO1FBWUgsQ0FYQztRQVlELE1BWE0sQ0FBQSxXQUFZLENBQUM7SUFZckIsQ0FYQyxDQUFDO0lBYUYsTUFYTSxDQUFBLE1BQU8sQ0FBQztBQVloQixDQUFDO0FBQ0Q7Ozs7O0dBS0c7QUFmSCxlQWlCRSxNQWhCeUIsRUFpQnpCLEdBaEJHLElBQWM7SUFpQmpCLE1BaEJNLENBQUEsU0FBSSxDQUFtQixNQUFNLEVBQUEseUNBQUEsQ0FBQSxDQUFBLENBQUMsT0FBUSxDQUFDLElBQUksRUFBQyxJQUFLLENBQUMsTUFBTSxDQUFJLENBQTJCLENBQVEsQ0FBQyxDQUFDO0FBaUJ6RyxDQWhCQztBQUpELHNCQUlDIiwiZmlsZSI6InBsdWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXN9IGNoZWNrZWQgYnkgdHNjXG4gKi9cblxuaW1wb3J0IHsgSXRlcmFibGVYIH0gZnJvbSAnLi4vaXRlcmFibGUnO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMSA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuaXRlcmFibGVcIik7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICcuL21hcCc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8yID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5pdGVyYWJsZS5tYXBcIik7XG4vKipcbiAqIEBwYXJhbSB7IUFycmF5PHN0cmluZz59IHByb3BzXG4gKiBAcGFyYW0ge251bWJlcn0gbGVuZ3RoXG4gKiBAcmV0dXJuIHtmdW5jdGlvbig/KTogP31cbiAqL1xuZnVuY3Rpb24gcGx1Y2tlcihwcm9wczogc3RyaW5nW10sIGxlbmd0aDogbnVtYmVyKTogKHg6IGFueSkgPT4gYW55IHtcbiAgY29uc3QgLyoqIEB0eXBlIHtmdW5jdGlvbig/KTogP30gKi8gbWFwcGVyID0gKHg6IGFueSkgPT4ge1xuICAgIGxldCAvKiogQHR5cGUgez99ICovIGN1cnJlbnRQcm9wID0geDtcbiAgICBmb3IgKGxldCAvKiogQHR5cGUge251bWJlcn0gKi8gaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgLyoqIEB0eXBlIHs/fSAqLyBwID0gY3VycmVudFByb3BbcHJvcHNbaV1dO1xuICAgICAgaWYgKHR5cGVvZiBwICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjdXJyZW50UHJvcCA9IHA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY3VycmVudFByb3A7XG4gIH07XG5cbiAgcmV0dXJuIG1hcHBlcjtcbn1cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqIEBwYXJhbSB7IUl0ZXJhYmxlPFRTb3VyY2U+fSBzb3VyY2VcbiAqIEBwYXJhbSB7Li4uc3RyaW5nfSBhcmdzXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5JdGVyYWJsZVg8VFJlc3VsdD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwbHVjazxUU291cmNlLCBUUmVzdWx0PihcbiAgc291cmNlOiBJdGVyYWJsZTxUU291cmNlPixcbiAgLi4uYXJnczogc3RyaW5nW10pOiBJdGVyYWJsZVg8VFJlc3VsdD4ge1xuICByZXR1cm4gbWFwPFRTb3VyY2UsIFRSZXN1bHQ+KHNvdXJjZSwgLyoqIEB0eXBlIHtmdW5jdGlvbihUU291cmNlKTogVFJlc3VsdH0gKi8oKCAvKiogQHR5cGUgez99ICovKCggcGx1Y2tlcihhcmdzLCBhcmdzLmxlbmd0aCkgYXMgYW55KSkgYXMgKHZhbHVlOiBUU291cmNlKSA9PiBUUmVzdWx0KSkpO1xufVxuIl19