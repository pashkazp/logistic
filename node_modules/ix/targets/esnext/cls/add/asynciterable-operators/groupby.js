goog.module('targets.esnext.cls.add.asynciterable_operators.groupby'); exports = {}; var module = {id: 'targets/esnext/cls/add/asynciterable-operators/groupby.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.esnext.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var groupby_1 = goog.require('targets.esnext.cls.asynciterable.groupby');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable.groupby");
var identity_1 = goog.require('targets.esnext.cls.internal.identity');
const tsickle_forward_declare_3 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.identity");
/**
 * @ignore
 * @template TSource, TKey, TValue
 * @this {!AsyncIterable<TSource>}
 * @param {function(TSource): (TKey|!Promise<TKey>)} keySelector
 * @param {function(TSource): (TValue|!Promise<TValue>)=} elementSelector
 * @return {!tsickle_forward_declare_1.AsyncIterableX<!tsickle_forward_declare_2.GroupedAsyncIterable<TKey, TValue>>}
 */
function groupByProto(keySelector, elementSelector = identity_1.identityAsync) {
    return groupby_1.groupBy(this, keySelector, elementSelector);
}
exports.groupByProto = groupByProto;
asynciterable_1.AsyncIterableX.prototype.groupBy = groupByProto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hZGQvYXN5bmNpdGVyYWJsZS1vcGVyYXRvcnMvZ3JvdXBieS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0c7O0FBRUgsdURBTHVCO0FBTXZCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQywyQ0FBMkMsQ0FBQyxDQU43QztBQU9yRCx5REFOc0M7QUFPdEMsTUFBTSx5QkFBeUIsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLG1EQUFtRCxDQUFDLENBUDlCO0FBUTVFLHNEQVBzQjtBQVF0QixNQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsK0NBQStDLENBQUMsQ0FSOUM7QUFpQnhEOzs7Ozs7O0dBT0c7QUFaSCxzQkFlSSxXQWJxRCxFQWNyRCxrQkFiK0Qsd0JBQWM7SUFjL0UsTUFiTSxDQUFBLGlCQUFRLENBQXdCLElBQUksRUFBQyxXQUFZLEVBQUMsZUFBZ0IsQ0FBQyxDQUFDO0FBYzVFLENBYkM7QUFMRCxvQ0FLQztBQWVELDhCQWJjLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRSxZQUFhLENBQUMiLCJmaWxlIjoiZ3JvdXBieS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgZ3JvdXBCeSwgR3JvdXBlZEFzeW5jSXRlcmFibGUgfSBmcm9tICcuLi8uLi9hc3luY2l0ZXJhYmxlL2dyb3VwYnknO1xuY29uc3QgdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMiA9IGdvb2cuZm9yd2FyZERlY2xhcmUoXCJfVXNlcnMucHRheWxvci5kZXYuaXhqcy5zcmMuYXN5bmNpdGVyYWJsZS5ncm91cGJ5XCIpO1xuaW1wb3J0IHsgaWRlbnRpdHlBc3luYyB9IGZyb20gJy4uLy4uL2ludGVybmFsL2lkZW50aXR5JztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzMgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmlkZW50aXR5XCIpO1xuXG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBCeVByb3RvPFRTb3VyY2UsIFRLZXk+KFxuICAgIHRoaXM6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAga2V5U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVEtleSB8IFByb21pc2U8VEtleT4pOiBBc3luY0l0ZXJhYmxlWDxHcm91cGVkQXN5bmNJdGVyYWJsZTxUS2V5LCBUU291cmNlPj47XG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBCeVByb3RvPFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4oXG4gICAgdGhpczogQXN5bmNJdGVyYWJsZTxUU291cmNlPixcbiAgICBrZXlTZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBUS2V5IHwgUHJvbWlzZTxUS2V5PixcbiAgICBlbGVtZW50U2VsZWN0b3I/OiAodmFsdWU6IFRTb3VyY2UpID0+IFRWYWx1ZSB8IFByb21pc2U8VFZhbHVlPik6IEFzeW5jSXRlcmFibGVYPEdyb3VwZWRBc3luY0l0ZXJhYmxlPFRLZXksIFRWYWx1ZT4+O1xuLyoqXG4gKiBAaWdub3JlXG4gKiBAdGVtcGxhdGUgVFNvdXJjZSwgVEtleSwgVFZhbHVlXG4gKiBAdGhpcyB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59XG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UpOiAoVEtleXwhUHJvbWlzZTxUS2V5Pil9IGtleVNlbGVjdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UpOiAoVFZhbHVlfCFQcm9taXNlPFRWYWx1ZT4pPX0gZWxlbWVudFNlbGVjdG9yXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5Bc3luY0l0ZXJhYmxlWDwhdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMi5Hcm91cGVkQXN5bmNJdGVyYWJsZTxUS2V5LCBUVmFsdWU+Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwQnlQcm90bzxUU291cmNlLCBUS2V5LCBUVmFsdWU+KFxuICAgIHRoaXM6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT4sXG4gICAga2V5U2VsZWN0b3I6ICh2YWx1ZTogVFNvdXJjZSkgPT4gVEtleSB8IFByb21pc2U8VEtleT4sXG4gICAgZWxlbWVudFNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IFRWYWx1ZSB8IFByb21pc2U8VFZhbHVlPiA9IGlkZW50aXR5QXN5bmMpOiBBc3luY0l0ZXJhYmxlWDxHcm91cGVkQXN5bmNJdGVyYWJsZTxUS2V5LCBUVmFsdWU+PiB7XG4gIHJldHVybiBncm91cEJ5PFRTb3VyY2UsIFRLZXksIFRWYWx1ZT4odGhpcywga2V5U2VsZWN0b3IsIGVsZW1lbnRTZWxlY3Rvcik7XG59XG5cbkFzeW5jSXRlcmFibGVYLnByb3RvdHlwZS5ncm91cEJ5ID0gZ3JvdXBCeVByb3RvO1xuXG5kZWNsYXJlIG1vZHVsZSAnLi4vLi4vYXN5bmNpdGVyYWJsZScge1xuICBpbnRlcmZhY2UgQXN5bmNJdGVyYWJsZVg8VD4ge1xuICAgIGdyb3VwQnk6IHR5cGVvZiBncm91cEJ5UHJvdG87XG4gIH1cbn0iXX0=