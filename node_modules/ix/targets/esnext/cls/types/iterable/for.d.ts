/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { IterableX } from '../iterable';
/**
 * Concatenates the iterable sequences obtained by running the result selector for each
 * element in the given source sequence.
 * iterable source that will be concatenated in the result sequence.
 * for each element in the source sequence.
 * result selector for each element in the source.
 * @template TSource, TResult
 * @param {!Iterable<TSource>} source
 * @param {function(TSource): !Iterable<TResult>} resultSelector
 * @return {!tsickle_forward_declare_1.IterableX<TResult>}
 */
export declare function _for<TSource, TResult>(source: Iterable<TSource>, resultSelector: (value: TSource) => Iterable<TResult>): IterableX<TResult>;
