/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { AsyncIterableX } from '../asynciterable';
/**
 * @ignore
 * @template T
 * @param {T} key
 * @param {T} minValue
 * @return {!Promise<number>}
 */
export declare function defaultCompareAsync<T>(key: T, minValue: T): Promise<number>;
/**
 * @ignore
 * @template TSource, TKey
 * @param {!AsyncIterable<TSource>} source
 * @param {function(TSource): (TKey|!Promise<TKey>)} keyFn
 * @param {function(TKey, TKey): (number|!Promise<number>)} cmp
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TSource>}
 */
export declare function extremaBy<TSource, TKey>(source: AsyncIterable<TSource>, keyFn: (x: TSource) => TKey | Promise<TKey>, cmp: (x: TKey, y: TKey) => number | Promise<number>): AsyncIterableX<TSource>;
