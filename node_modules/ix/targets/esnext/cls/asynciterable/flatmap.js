goog.module('targets.esnext.cls.asynciterable.flatmap'); exports = {}; var module = {id: 'targets/esnext/cls/asynciterable/flatmap.js'};/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

var asynciterable_1 = goog.require('targets.esnext.cls.asynciterable');
const tsickle_forward_declare_1 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.asynciterable");
var bindcallback_1 = goog.require('targets.esnext.cls.internal.bindcallback');
const tsickle_forward_declare_2 = goog.forwardDeclare("_Users.ptaylor.dev.ixjs.src.internal.bindcallback");
/**
 * @template TSource, TResult
 */
class FlatMapAsyncIterable extends asynciterable_1.AsyncIterableX {
    /**
     * @param {!AsyncIterable<TSource>} source
     * @param {function(TSource): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)} selector
     */
    constructor(source, selector) {
        super();
        this._source = source;
        this._selector = selector;
    }
    /**
     * @return {!AsyncIterableIterator<TResult>}
     */
    async *[Symbol.asyncIterator]() {
        for await (let /** @type {TSource} */ outer of this._source) {
            const /** @type {!AsyncIterable<TResult>} */ inners = await this._selector(outer);
            for await (let /** @type {TResult} */ inner of inners) {
                yield inner;
            }
        }
    }
}
function FlatMapAsyncIterable_tsickle_Closure_declarations() {
    /** @type {!AsyncIterable<TSource>} */
    FlatMapAsyncIterable.prototype._source;
    /** @type {function(TSource): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)} */
    FlatMapAsyncIterable.prototype._selector;
}
/**
 * @template TSource, TResult
 * @param {!AsyncIterable<TSource>} source
 * @param {function(TSource): (!AsyncIterable<TResult>|!Promise<!AsyncIterable<TResult>>)} selector
 * @param {?=} thisArg
 * @return {!tsickle_forward_declare_1.AsyncIterableX<TResult>}
 */
function flatMap(source, selector, thisArg) {
    return new FlatMapAsyncIterable(source, bindcallback_1.bindCallback(selector, thisArg, 1));
}
exports.flatMap = flatMap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hc3luY2l0ZXJhYmxlL2ZsYXRtYXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHOztBQUVILG9EQUx1QjtBQU12QixNQUFNLHlCQUF5QixHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsMkNBQTJDLENBQUMsQ0FOaEQ7QUFPbEQsMkRBTnFCO0FBT3JCLE1BQU0seUJBQXlCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxtREFBbUQsQ0FBQyxDQUFDO0FBQzNHOztHQUVHO0FBUkgsMEJBQTRDLFNBQVEsOEJBQXdCO0lBWTVFOzs7T0FHRztJQVhELFlBYUUsTUFaOEIsRUFhOUIsUUFac0Y7UUFhdEYsS0FaSyxFQUFFLENBQUM7UUFhUixJQVpJLENBQUMsT0FBTyxHQUFFLE1BQU8sQ0FBQztRQWF0QixJQVpJLENBQUMsU0FBUyxHQUFFLFFBQVMsQ0FBQztJQWE1QixDQUFDO0lBQ0g7O09BRUc7SUFiRCxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDO1FBZTNCLEdBZEcsQ0FBQSxLQUFNLENBQU4sQ0FBUSxJQUFBLHNCQUFHLENBQUEsS0FBTSxJQUFHLElBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQSxDQUFFO1lBZXJDLE1BQU0sc0NBZEQsQ0FBQSxNQUFPLEdBQUUsTUFBTSxJQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBZTNDLEdBZEcsQ0FBQSxLQUFNLENBQU4sQ0FBUSxJQUFBLHNCQUFHLENBQUEsS0FBTSxJQUFHLE1BQU8sQ0FBQyxDQUFBLENBQUU7Z0JBZS9CLE1BZEssS0FBTSxDQUFDO1lBZWQsQ0FkQztRQWVILENBZEM7SUFlSCxDQWRDO0NBQ0g7QUFnQkE7SUFDQSxzQ0FBc0M7SUFDdEMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQztJQUN2Qyw2RkFBNkY7SUFDN0Ysb0JBQW9CLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQztBQUN6QyxDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBM0JILGlCQTZCSSxNQTVCOEIsRUE2QjlCLFFBNUJzRixFQTZCdEYsT0E1QmE7SUE2QmYsTUE1Qk0sQ0FBQSxJQUFJLG9CQUFxQixDQUFtQixNQUFNLEVBQUMsMkJBQWEsQ0FBQyxRQUFRLEVBQUMsT0FBUSxFQUFDLENBQUUsQ0FBQyxDQUFDLENBQUM7QUE2QmhHLENBNUJDO0FBTEQsMEJBS0MiLCJmaWxlIjoiZmxhdG1hcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5cbmltcG9ydCB7IEFzeW5jSXRlcmFibGVYIH0gZnJvbSAnLi4vYXN5bmNpdGVyYWJsZSc7XG5jb25zdCB0c2lja2xlX2ZvcndhcmRfZGVjbGFyZV8xID0gZ29vZy5mb3J3YXJkRGVjbGFyZShcIl9Vc2Vycy5wdGF5bG9yLmRldi5peGpzLnNyYy5hc3luY2l0ZXJhYmxlXCIpO1xuaW1wb3J0IHsgYmluZENhbGxiYWNrIH0gZnJvbSAnLi4vaW50ZXJuYWwvYmluZGNhbGxiYWNrJztcbmNvbnN0IHRzaWNrbGVfZm9yd2FyZF9kZWNsYXJlXzIgPSBnb29nLmZvcndhcmREZWNsYXJlKFwiX1VzZXJzLnB0YXlsb3IuZGV2Lml4anMuc3JjLmludGVybmFsLmJpbmRjYWxsYmFja1wiKTtcbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqL1xuY2xhc3MgRmxhdE1hcEFzeW5jSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdD4gZXh0ZW5kcyBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0PiB7XG5wcml2YXRlIF9zb3VyY2U6IEFzeW5jSXRlcmFibGU8VFNvdXJjZT47XG5wcml2YXRlIF9zZWxlY3RvcjogKHZhbHVlOiBUU291cmNlKSA9PiBBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+IHwgUHJvbWlzZTxBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+Pjtcbi8qKlxuICogQHBhcmFtIHshQXN5bmNJdGVyYWJsZTxUU291cmNlPn0gc291cmNlXG4gKiBAcGFyYW0ge2Z1bmN0aW9uKFRTb3VyY2UpOiAoIUFzeW5jSXRlcmFibGU8VFJlc3VsdD58IVByb21pc2U8IUFzeW5jSXRlcmFibGU8VFJlc3VsdD4+KX0gc2VsZWN0b3JcbiAqL1xuY29uc3RydWN0b3IoXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEFzeW5jSXRlcmFibGU8VFJlc3VsdD4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFJlc3VsdD4+KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9zb3VyY2UgPSBzb3VyY2U7XG4gICAgdGhpcy5fc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgfVxuLyoqXG4gKiBAcmV0dXJuIHshQXN5bmNJdGVyYWJsZUl0ZXJhdG9yPFRSZXN1bHQ+fVxuICovXG5hc3luYyAqW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICBmb3IgYXdhaXQgKGxldCAvKiogQHR5cGUge1RTb3VyY2V9ICovIG91dGVyIG9mIHRoaXMuX3NvdXJjZSkge1xuICAgICAgY29uc3QgLyoqIEB0eXBlIHshQXN5bmNJdGVyYWJsZTxUUmVzdWx0Pn0gKi8gaW5uZXJzID0gYXdhaXQgdGhpcy5fc2VsZWN0b3Iob3V0ZXIpO1xuICAgICAgZm9yIGF3YWl0IChsZXQgLyoqIEB0eXBlIHtUUmVzdWx0fSAqLyBpbm5lciBvZiBpbm5lcnMpIHtcbiAgICAgICAgeWllbGQgaW5uZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIEZsYXRNYXBBc3luY0l0ZXJhYmxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4vKiogQHR5cGUgeyFBc3luY0l0ZXJhYmxlPFRTb3VyY2U+fSAqL1xuRmxhdE1hcEFzeW5jSXRlcmFibGUucHJvdG90eXBlLl9zb3VyY2U7XG4vKiogQHR5cGUge2Z1bmN0aW9uKFRTb3VyY2UpOiAoIUFzeW5jSXRlcmFibGU8VFJlc3VsdD58IVByb21pc2U8IUFzeW5jSXRlcmFibGU8VFJlc3VsdD4+KX0gKi9cbkZsYXRNYXBBc3luY0l0ZXJhYmxlLnByb3RvdHlwZS5fc2VsZWN0b3I7XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIFRTb3VyY2UsIFRSZXN1bHRcbiAqIEBwYXJhbSB7IUFzeW5jSXRlcmFibGU8VFNvdXJjZT59IHNvdXJjZVxuICogQHBhcmFtIHtmdW5jdGlvbihUU291cmNlKTogKCFBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+fCFQcm9taXNlPCFBc3luY0l0ZXJhYmxlPFRSZXN1bHQ+Pil9IHNlbGVjdG9yXG4gKiBAcGFyYW0gez89fSB0aGlzQXJnXG4gKiBAcmV0dXJuIHshdHNpY2tsZV9mb3J3YXJkX2RlY2xhcmVfMS5Bc3luY0l0ZXJhYmxlWDxUUmVzdWx0Pn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZsYXRNYXA8VFNvdXJjZSwgVFJlc3VsdD4oXG4gICAgc291cmNlOiBBc3luY0l0ZXJhYmxlPFRTb3VyY2U+LFxuICAgIHNlbGVjdG9yOiAodmFsdWU6IFRTb3VyY2UpID0+IEFzeW5jSXRlcmFibGU8VFJlc3VsdD4gfCBQcm9taXNlPEFzeW5jSXRlcmFibGU8VFJlc3VsdD4+LFxuICAgIHRoaXNBcmc/OiBhbnkpOiBBc3luY0l0ZXJhYmxlWDxUUmVzdWx0PiB7XG4gIHJldHVybiBuZXcgRmxhdE1hcEFzeW5jSXRlcmFibGU8VFNvdXJjZSwgVFJlc3VsdD4oc291cmNlLCBiaW5kQ2FsbGJhY2soc2VsZWN0b3IsIHRoaXNBcmcsIDEpKTtcbn1cbiJdfQ==